-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity img_filter is
generic (
    C_S_AXI_CONTROL_BUS_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    in_r_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    in_r_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    in_r_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_r_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    out_r_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_r_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_r_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_r_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_r_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_CONTROL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CONTROL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CONTROL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of img_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "img_filter,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.198000,HLS_SYN_LAT=15055056,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=2,HLS_SYN_FF=455,HLS_SYN_LUT=1139,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv10_27D : STD_LOGIC_VECTOR (9 downto 0) := "1001111101";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_1DF : STD_LOGIC_VECTOR (8 downto 0) := "111011111";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv10_27F : STD_LOGIC_VECTOR (9 downto 0) := "1001111111";
    constant ap_const_lv22_556 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010101010110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal in_V_data_V_0_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal in_V_data_V_0_vld_in : STD_LOGIC;
    signal in_V_data_V_0_vld_out : STD_LOGIC;
    signal in_V_data_V_0_ack_in : STD_LOGIC;
    signal in_V_data_V_0_ack_out : STD_LOGIC;
    signal in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal in_V_data_V_0_sel : STD_LOGIC;
    signal in_V_data_V_0_load_A : STD_LOGIC;
    signal in_V_data_V_0_load_B : STD_LOGIC;
    signal in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal in_V_dest_V_0_vld_in : STD_LOGIC;
    signal in_V_dest_V_0_ack_out : STD_LOGIC;
    signal in_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_data_V_1_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal out_V_data_V_1_vld_in : STD_LOGIC;
    signal out_V_data_V_1_vld_out : STD_LOGIC;
    signal out_V_data_V_1_ack_in : STD_LOGIC;
    signal out_V_data_V_1_ack_out : STD_LOGIC;
    signal out_V_data_V_1_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal out_V_data_V_1_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal out_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal out_V_data_V_1_sel : STD_LOGIC;
    signal out_V_data_V_1_load_A : STD_LOGIC;
    signal out_V_data_V_1_load_B : STD_LOGIC;
    signal out_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal out_V_keep_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal out_V_keep_V_1_vld_in : STD_LOGIC;
    signal out_V_keep_V_1_vld_out : STD_LOGIC;
    signal out_V_keep_V_1_ack_in : STD_LOGIC;
    signal out_V_keep_V_1_ack_out : STD_LOGIC;
    signal out_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_keep_V_1_sel : STD_LOGIC;
    signal out_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_strb_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal out_V_strb_V_1_vld_in : STD_LOGIC;
    signal out_V_strb_V_1_vld_out : STD_LOGIC;
    signal out_V_strb_V_1_ack_in : STD_LOGIC;
    signal out_V_strb_V_1_ack_out : STD_LOGIC;
    signal out_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_strb_V_1_sel : STD_LOGIC;
    signal out_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_user_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_user_V_1_vld_in : STD_LOGIC;
    signal out_V_user_V_1_vld_out : STD_LOGIC;
    signal out_V_user_V_1_ack_in : STD_LOGIC;
    signal out_V_user_V_1_ack_out : STD_LOGIC;
    signal out_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_user_V_1_sel : STD_LOGIC;
    signal out_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_last_V_1_vld_in : STD_LOGIC;
    signal out_V_last_V_1_vld_out : STD_LOGIC;
    signal out_V_last_V_1_ack_in : STD_LOGIC;
    signal out_V_last_V_1_ack_out : STD_LOGIC;
    signal out_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal out_V_last_V_1_sel : STD_LOGIC;
    signal out_V_last_V_1_load_A : STD_LOGIC;
    signal out_V_last_V_1_load_B : STD_LOGIC;
    signal out_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal out_V_id_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_id_V_1_vld_in : STD_LOGIC;
    signal out_V_id_V_1_vld_out : STD_LOGIC;
    signal out_V_id_V_1_ack_in : STD_LOGIC;
    signal out_V_id_V_1_ack_out : STD_LOGIC;
    signal out_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_id_V_1_sel : STD_LOGIC;
    signal out_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_dest_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_dest_V_1_vld_in : STD_LOGIC;
    signal out_V_dest_V_1_vld_out : STD_LOGIC;
    signal out_V_dest_V_1_ack_in : STD_LOGIC;
    signal out_V_dest_V_1_ack_out : STD_LOGIC;
    signal out_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_dest_V_1_sel : STD_LOGIC;
    signal out_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal kernel_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_ce0 : STD_LOGIC;
    signal kernel_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal exitcond6_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal exitcond8_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal i_1_fu_493_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_1_reg_972 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_fu_499_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_977 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_509_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal line_buffer_0_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_0_V_V_full_n : STD_LOGIC;
    signal line_buffer_0_V_V_write : STD_LOGIC;
    signal exitcond3_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op57_write_state3 : BOOLEAN;
    signal line_buffer_1_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_V_V_full_n : STD_LOGIC;
    signal line_buffer_1_V_V_write : STD_LOGIC;
    signal ap_predicate_op59_write_state3 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal i_2_fu_521_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_2_reg_992 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_1_fu_543_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_997 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond2_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_555_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal row_1_fu_581_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal row_1_reg_1019 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_state6 : BOOLEAN;
    signal tmp_5_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1024 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_load_reg_1029 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state7 : BOOLEAN;
    signal col_1_fu_602_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_1_reg_1037 : STD_LOGIC_VECTOR (9 downto 0);
    signal pixel_gray_V_reg_1042 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_4_fu_673_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_4_reg_1050 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_8_fu_695_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_reg_1057 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond7_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_window_V_addr_2_reg_1063 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_3_fu_718_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_3_reg_1071 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal line_buffer_0_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_0_V_V_empty_n : STD_LOGIC;
    signal line_buffer_0_V_V_read : STD_LOGIC;
    signal exitcond9_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_753_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op148_read_state9 : BOOLEAN;
    signal line_buffer_1_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_V_V_empty_n : STD_LOGIC;
    signal line_buffer_1_V_V_read : STD_LOGIC;
    signal ap_predicate_op150_read_state9 : BOOLEAN;
    signal ap_block_state9 : BOOLEAN;
    signal tmp_16_fu_728_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_16_reg_1076 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_reg_1086 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1090 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_796_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_3_reg_1112 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state12_io : BOOLEAN;
    signal tmp_15_fu_814_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_15_reg_1117 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_data_V_fu_864_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_last_V_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_4_fu_902_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_4_reg_1135 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal exitcond_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_944_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal conv_window_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv_window_V_ce0 : STD_LOGIC;
    signal conv_window_V_we0 : STD_LOGIC;
    signal conv_window_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_window_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_343 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_354 : STD_LOGIC_VECTOR (9 downto 0);
    signal i5_reg_365 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond5_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j6_reg_376 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_reg_387 : STD_LOGIC_VECTOR (8 downto 0);
    signal col_reg_398 : STD_LOGIC_VECTOR (9 downto 0);
    signal i7_reg_410 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_predicate_op168_write_state11 : BOOLEAN;
    signal ap_predicate_op170_write_state11 : BOOLEAN;
    signal ap_block_state11 : BOOLEAN;
    signal j8_reg_422 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_V_11_reg_433 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0340_2_reg_443 : STD_LOGIC_VECTOR (31 downto 0);
    signal i9_reg_453 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0340_3_reg_464 : STD_LOGIC_VECTOR (31 downto 0);
    signal j4_reg_476 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_22_cast_fu_570_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_cast_fu_707_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_cast_fu_742_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_cast_fu_777_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_cast_fu_782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_cast_fu_913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_922_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_531_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl1_cast_fu_539_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_cast_fu_527_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_cast_fu_561_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_fu_565_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_s_fu_612_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_fu_622_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_cast_fu_632_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_cast_fu_636_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_fu_640_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_fu_646_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_935_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_7_fu_683_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl2_cast_fu_691_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_cast_fu_679_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_fu_701_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_cast_fu_724_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_12_cast_fu_733_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_18_fu_737_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_22_fu_760_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl3_cast_fu_767_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_14_cast_fu_757_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_23_fu_771_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_14_fu_802_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl4_cast_fu_810_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal i9_cast5_fu_786_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_fu_820_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0340_2_22_fu_836_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_844_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_852_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_856_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j4_cast2_fu_892_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_21_fu_908_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_16_cast_fu_918_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_935_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_935_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_935_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_944_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_935_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_935_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_944_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_condition_1081 : BOOLEAN;

    component img_filter_am_addcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component img_filter_mac_mudEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component img_filter_kernel IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component img_filter_conv_wbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component fifo_w8_d640_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component img_filter_CONTROL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    kernel_U : component img_filter_kernel
    generic map (
        DataWidth => 3,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => kernel_address0,
        ce0 => kernel_ce0,
        q0 => kernel_q0);

    img_filter_CONTROL_BUS_s_axi_U : component img_filter_CONTROL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CONTROL_BUS_AWVALID,
        AWREADY => s_axi_CONTROL_BUS_AWREADY,
        AWADDR => s_axi_CONTROL_BUS_AWADDR,
        WVALID => s_axi_CONTROL_BUS_WVALID,
        WREADY => s_axi_CONTROL_BUS_WREADY,
        WDATA => s_axi_CONTROL_BUS_WDATA,
        WSTRB => s_axi_CONTROL_BUS_WSTRB,
        ARVALID => s_axi_CONTROL_BUS_ARVALID,
        ARREADY => s_axi_CONTROL_BUS_ARREADY,
        ARADDR => s_axi_CONTROL_BUS_ARADDR,
        RVALID => s_axi_CONTROL_BUS_RVALID,
        RREADY => s_axi_CONTROL_BUS_RREADY,
        RDATA => s_axi_CONTROL_BUS_RDATA,
        RRESP => s_axi_CONTROL_BUS_RRESP,
        BVALID => s_axi_CONTROL_BUS_BVALID,
        BREADY => s_axi_CONTROL_BUS_BREADY,
        BRESP => s_axi_CONTROL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    conv_window_V_U : component img_filter_conv_wbkb
    generic map (
        DataWidth => 8,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_window_V_address0,
        ce0 => conv_window_V_ce0,
        we0 => conv_window_V_we0,
        d0 => conv_window_V_d0,
        q0 => conv_window_V_q0);

    img_filter_am_addcud_U1 : component img_filter_am_addcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 9,
        din2_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_935_p0,
        din1 => grp_fu_935_p1,
        din2 => grp_fu_935_p2,
        dout => grp_fu_935_p3);

    img_filter_mac_mudEe_U2 : component img_filter_mac_mudEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => kernel_q0,
        din1 => grp_fu_944_p1,
        din2 => p_0340_3_reg_464,
        dout => grp_fu_944_p3);

    line_buffer_0_V_V_fifo_U : component fifo_w8_d640_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => line_buffer_0_V_V_din,
        if_full_n => line_buffer_0_V_V_full_n,
        if_write => line_buffer_0_V_V_write,
        if_dout => line_buffer_0_V_V_dout,
        if_empty_n => line_buffer_0_V_V_empty_n,
        if_read => line_buffer_0_V_V_read);

    line_buffer_1_V_V_fifo_U : component fifo_w8_d640_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => line_buffer_1_V_V_din,
        if_full_n => line_buffer_1_V_V_full_n,
        if_write => line_buffer_1_V_V_write,
        if_dout => line_buffer_1_V_V_dout,
        if_empty_n => line_buffer_1_V_V_empty_n,
        if_read => line_buffer_1_V_V_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((in_V_data_V_0_ack_out = ap_const_logic_1) and (in_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        in_V_data_V_0_sel_rd <= not(in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((in_V_data_V_0_ack_in = ap_const_logic_1) and (in_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        in_V_data_V_0_sel_wr <= not(in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_V_data_V_0_state = ap_const_lv2_2) and (in_V_data_V_0_vld_in = ap_const_logic_0)) or ((in_V_data_V_0_state = ap_const_lv2_3) and (in_V_data_V_0_vld_in = ap_const_logic_0) and (in_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((in_V_data_V_0_state = ap_const_lv2_1) and (in_V_data_V_0_ack_out = ap_const_logic_0)) or ((in_V_data_V_0_state = ap_const_lv2_3) and (in_V_data_V_0_ack_out = ap_const_logic_0) and (in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_V_data_V_0_vld_in = ap_const_logic_0) and (in_V_data_V_0_ack_out = ap_const_logic_1))) and not(((in_V_data_V_0_ack_out = ap_const_logic_0) and (in_V_data_V_0_vld_in = ap_const_logic_1))) and (in_V_data_V_0_state = ap_const_lv2_3)) or ((in_V_data_V_0_state = ap_const_lv2_1) and (in_V_data_V_0_ack_out = ap_const_logic_1)) or ((in_V_data_V_0_state = ap_const_lv2_2) and (in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    in_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_V_dest_V_0_state = ap_const_lv2_2) and (in_V_dest_V_0_vld_in = ap_const_logic_0)) or ((in_V_dest_V_0_state = ap_const_lv2_3) and (in_V_dest_V_0_vld_in = ap_const_logic_0) and (in_V_dest_V_0_ack_out = ap_const_logic_1)))) then 
                    in_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((in_V_dest_V_0_state = ap_const_lv2_1) and (in_V_dest_V_0_ack_out = ap_const_logic_0)) or ((in_V_dest_V_0_state = ap_const_lv2_3) and (in_V_dest_V_0_ack_out = ap_const_logic_0) and (in_V_dest_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_dest_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_V_dest_V_0_vld_in = ap_const_logic_0) and (in_V_dest_V_0_ack_out = ap_const_logic_1))) and not(((in_V_dest_V_0_ack_out = ap_const_logic_0) and (in_V_dest_V_0_vld_in = ap_const_logic_1))) and (in_V_dest_V_0_state = ap_const_lv2_3)) or ((in_V_dest_V_0_state = ap_const_lv2_1) and (in_V_dest_V_0_ack_out = ap_const_logic_1)) or ((in_V_dest_V_0_state = ap_const_lv2_2) and (in_V_dest_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    in_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_data_V_1_ack_out = ap_const_logic_1) and (out_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_data_V_1_sel_rd <= not(out_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_V_data_V_1_ack_in = ap_const_logic_1) and (out_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        out_V_data_V_1_sel_wr <= not(out_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_data_V_1_state = ap_const_lv2_2) and (out_V_data_V_1_vld_in = ap_const_logic_0)) or ((out_V_data_V_1_state = ap_const_lv2_3) and (out_V_data_V_1_vld_in = ap_const_logic_0) and (out_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_data_V_1_state = ap_const_lv2_1) and (out_V_data_V_1_ack_out = ap_const_logic_0)) or ((out_V_data_V_1_state = ap_const_lv2_3) and (out_V_data_V_1_ack_out = ap_const_logic_0) and (out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_data_V_1_vld_in = ap_const_logic_0) and (out_V_data_V_1_ack_out = ap_const_logic_1))) and not(((out_V_data_V_1_ack_out = ap_const_logic_0) and (out_V_data_V_1_vld_in = ap_const_logic_1))) and (out_V_data_V_1_state = ap_const_lv2_3)) or ((out_V_data_V_1_state = ap_const_lv2_1) and (out_V_data_V_1_ack_out = ap_const_logic_1)) or ((out_V_data_V_1_state = ap_const_lv2_2) and (out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_dest_V_1_ack_out = ap_const_logic_1) and (out_V_dest_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_dest_V_1_sel_rd <= not(out_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_dest_V_1_state = ap_const_lv2_2) and (out_V_dest_V_1_vld_in = ap_const_logic_0)) or ((out_V_dest_V_1_state = ap_const_lv2_3) and (out_V_dest_V_1_vld_in = ap_const_logic_0) and (out_V_dest_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_dest_V_1_state = ap_const_lv2_1) and (out_V_dest_V_1_ack_out = ap_const_logic_0)) or ((out_V_dest_V_1_state = ap_const_lv2_3) and (out_V_dest_V_1_ack_out = ap_const_logic_0) and (out_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_dest_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_dest_V_1_vld_in = ap_const_logic_0) and (out_V_dest_V_1_ack_out = ap_const_logic_1))) and not(((out_V_dest_V_1_ack_out = ap_const_logic_0) and (out_V_dest_V_1_vld_in = ap_const_logic_1))) and (out_V_dest_V_1_state = ap_const_lv2_3)) or ((out_V_dest_V_1_state = ap_const_lv2_1) and (out_V_dest_V_1_ack_out = ap_const_logic_1)) or ((out_V_dest_V_1_state = ap_const_lv2_2) and (out_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_id_V_1_ack_out = ap_const_logic_1) and (out_V_id_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_id_V_1_sel_rd <= not(out_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_id_V_1_state = ap_const_lv2_2) and (out_V_id_V_1_vld_in = ap_const_logic_0)) or ((out_V_id_V_1_state = ap_const_lv2_3) and (out_V_id_V_1_vld_in = ap_const_logic_0) and (out_V_id_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_id_V_1_state = ap_const_lv2_1) and (out_V_id_V_1_ack_out = ap_const_logic_0)) or ((out_V_id_V_1_state = ap_const_lv2_3) and (out_V_id_V_1_ack_out = ap_const_logic_0) and (out_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_id_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_id_V_1_vld_in = ap_const_logic_0) and (out_V_id_V_1_ack_out = ap_const_logic_1))) and not(((out_V_id_V_1_ack_out = ap_const_logic_0) and (out_V_id_V_1_vld_in = ap_const_logic_1))) and (out_V_id_V_1_state = ap_const_lv2_3)) or ((out_V_id_V_1_state = ap_const_lv2_1) and (out_V_id_V_1_ack_out = ap_const_logic_1)) or ((out_V_id_V_1_state = ap_const_lv2_2) and (out_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_keep_V_1_ack_out = ap_const_logic_1) and (out_V_keep_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_keep_V_1_sel_rd <= not(out_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_keep_V_1_state = ap_const_lv2_2) and (out_V_keep_V_1_vld_in = ap_const_logic_0)) or ((out_V_keep_V_1_state = ap_const_lv2_3) and (out_V_keep_V_1_vld_in = ap_const_logic_0) and (out_V_keep_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_keep_V_1_state = ap_const_lv2_1) and (out_V_keep_V_1_ack_out = ap_const_logic_0)) or ((out_V_keep_V_1_state = ap_const_lv2_3) and (out_V_keep_V_1_ack_out = ap_const_logic_0) and (out_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_keep_V_1_vld_in = ap_const_logic_0) and (out_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((out_V_keep_V_1_ack_out = ap_const_logic_0) and (out_V_keep_V_1_vld_in = ap_const_logic_1))) and (out_V_keep_V_1_state = ap_const_lv2_3)) or ((out_V_keep_V_1_state = ap_const_lv2_1) and (out_V_keep_V_1_ack_out = ap_const_logic_1)) or ((out_V_keep_V_1_state = ap_const_lv2_2) and (out_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_last_V_1_ack_out = ap_const_logic_1) and (out_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_last_V_1_sel_rd <= not(out_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_V_last_V_1_ack_in = ap_const_logic_1) and (out_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        out_V_last_V_1_sel_wr <= not(out_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_last_V_1_state = ap_const_lv2_2) and (out_V_last_V_1_vld_in = ap_const_logic_0)) or ((out_V_last_V_1_state = ap_const_lv2_3) and (out_V_last_V_1_vld_in = ap_const_logic_0) and (out_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_last_V_1_state = ap_const_lv2_1) and (out_V_last_V_1_ack_out = ap_const_logic_0)) or ((out_V_last_V_1_state = ap_const_lv2_3) and (out_V_last_V_1_ack_out = ap_const_logic_0) and (out_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_last_V_1_vld_in = ap_const_logic_0) and (out_V_last_V_1_ack_out = ap_const_logic_1))) and not(((out_V_last_V_1_ack_out = ap_const_logic_0) and (out_V_last_V_1_vld_in = ap_const_logic_1))) and (out_V_last_V_1_state = ap_const_lv2_3)) or ((out_V_last_V_1_state = ap_const_lv2_1) and (out_V_last_V_1_ack_out = ap_const_logic_1)) or ((out_V_last_V_1_state = ap_const_lv2_2) and (out_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_strb_V_1_ack_out = ap_const_logic_1) and (out_V_strb_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_strb_V_1_sel_rd <= not(out_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_strb_V_1_state = ap_const_lv2_2) and (out_V_strb_V_1_vld_in = ap_const_logic_0)) or ((out_V_strb_V_1_state = ap_const_lv2_3) and (out_V_strb_V_1_vld_in = ap_const_logic_0) and (out_V_strb_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_strb_V_1_state = ap_const_lv2_1) and (out_V_strb_V_1_ack_out = ap_const_logic_0)) or ((out_V_strb_V_1_state = ap_const_lv2_3) and (out_V_strb_V_1_ack_out = ap_const_logic_0) and (out_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_strb_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_strb_V_1_vld_in = ap_const_logic_0) and (out_V_strb_V_1_ack_out = ap_const_logic_1))) and not(((out_V_strb_V_1_ack_out = ap_const_logic_0) and (out_V_strb_V_1_vld_in = ap_const_logic_1))) and (out_V_strb_V_1_state = ap_const_lv2_3)) or ((out_V_strb_V_1_state = ap_const_lv2_1) and (out_V_strb_V_1_ack_out = ap_const_logic_1)) or ((out_V_strb_V_1_state = ap_const_lv2_2) and (out_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_user_V_1_ack_out = ap_const_logic_1) and (out_V_user_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_user_V_1_sel_rd <= not(out_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_user_V_1_state = ap_const_lv2_2) and (out_V_user_V_1_vld_in = ap_const_logic_0)) or ((out_V_user_V_1_state = ap_const_lv2_3) and (out_V_user_V_1_vld_in = ap_const_logic_0) and (out_V_user_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_user_V_1_state = ap_const_lv2_1) and (out_V_user_V_1_ack_out = ap_const_logic_0)) or ((out_V_user_V_1_state = ap_const_lv2_3) and (out_V_user_V_1_ack_out = ap_const_logic_0) and (out_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_user_V_1_vld_in = ap_const_logic_0) and (out_V_user_V_1_ack_out = ap_const_logic_1))) and not(((out_V_user_V_1_ack_out = ap_const_logic_0) and (out_V_user_V_1_vld_in = ap_const_logic_1))) and (out_V_user_V_1_state = ap_const_lv2_3)) or ((out_V_user_V_1_state = ap_const_lv2_1) and (out_V_user_V_1_ack_out = ap_const_logic_1)) or ((out_V_user_V_1_state = ap_const_lv2_2) and (out_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    col_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0))) and (exitcond4_fu_575_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                col_reg_398 <= ap_const_lv10_0;
            elsif (((out_V_data_V_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                col_reg_398 <= col_1_reg_1037;
            end if; 
        end if;
    end process;

    i5_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_487_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i5_reg_365 <= ap_const_lv2_0;
            elsif (((exitcond5_fu_549_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i5_reg_365 <= i_2_reg_992;
            end if; 
        end if;
    end process;

    i7_reg_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op170_write_state11 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op168_write_state11 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                i7_reg_410 <= i_4_reg_1050;
            elsif ((not(((exitcond6_fu_596_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0))) and (exitcond6_fu_596_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                i7_reg_410 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i9_reg_453_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_896_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                i9_reg_453 <= i_3_reg_1112;
            elsif (((exitcond7_fu_667_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i9_reg_453 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op59_write_state3 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (exitcond3_fu_503_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_reg_343 <= i_1_reg_972;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_343 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j4_reg_476_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond8_fu_790_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_io))) then 
                j4_reg_476 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                j4_reg_476 <= j_4_reg_1135;
            end if; 
        end if;
    end process;

    j6_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_515_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                j6_reg_376 <= ap_const_lv2_0;
            elsif (((exitcond5_fu_549_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                j6_reg_376 <= j_2_fu_555_p2;
            end if; 
        end if;
    end process;

    j8_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond7_fu_667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                j8_reg_422 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                j8_reg_422 <= j_3_reg_1071;
            end if; 
        end if;
    end process;

    j_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_487_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_reg_354 <= ap_const_lv10_0;
            elsif ((not((((ap_predicate_op59_write_state3 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (exitcond3_fu_503_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                j_reg_354 <= j_1_fu_509_p2;
            end if; 
        end if;
    end process;

    p_0340_2_reg_443_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_896_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                p_0340_2_reg_443 <= p_0340_3_reg_464;
            elsif (((exitcond7_fu_667_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                p_0340_2_reg_443 <= p_load_reg_1029;
            end if; 
        end if;
    end process;

    p_0340_3_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond8_fu_790_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_io))) then 
                p_0340_3_reg_464 <= p_0340_2_reg_443;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                p_0340_3_reg_464 <= grp_fu_944_p3;
            end if; 
        end if;
    end process;

    row_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((exitcond6_fu_596_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0))) and (exitcond6_fu_596_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                row_reg_387 <= row_1_reg_1019;
            elsif (((exitcond2_fu_515_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                row_reg_387 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    tmp_V_11_reg_433_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1081)) then
                if ((tmp_20_fu_753_p1 = ap_const_lv1_0)) then 
                    tmp_V_11_reg_433 <= line_buffer_0_V_V_dout;
                elsif ((tmp_20_fu_753_p1 = ap_const_lv1_1)) then 
                    tmp_V_11_reg_433 <= line_buffer_1_V_V_dout;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((exitcond6_fu_596_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                col_1_reg_1037 <= col_1_fu_602_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond7_fu_667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                conv_window_V_addr_2_reg_1063 <= tmp_25_cast_fu_707_p1(4 - 1 downto 0);
                tmp_8_reg_1057 <= tmp_8_fu_695_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_1_reg_972 <= i_1_fu_493_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_2_reg_992 <= i_2_fu_521_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_io))) then
                i_3_reg_1112 <= i_3_fu_796_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                i_4_reg_1050 <= i_4_fu_673_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_data_V_0_load_A = ap_const_logic_1)) then
                in_V_data_V_0_payload_A <= in_r_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_data_V_0_load_B = ap_const_logic_1)) then
                in_V_data_V_0_payload_B <= in_r_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op150_read_state9 = ap_const_boolean_1) and (line_buffer_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op148_read_state9 = ap_const_boolean_1) and (line_buffer_0_V_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                j_3_reg_1071 <= j_3_fu_718_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                j_4_reg_1135 <= j_4_fu_902_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_data_V_1_load_A = ap_const_logic_1)) then
                out_V_data_V_1_payload_A <= tmp_data_V_fu_864_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_data_V_1_load_B = ap_const_logic_1)) then
                out_V_data_V_1_payload_B <= tmp_data_V_fu_864_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_last_V_1_load_A = ap_const_logic_1)) then
                out_V_last_V_1_payload_A <= tmp_last_V_fu_881_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_last_V_1_load_B = ap_const_logic_1)) then
                out_V_last_V_1_payload_B <= tmp_last_V_fu_881_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((exitcond6_fu_596_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0))) and (exitcond6_fu_596_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                pixel_gray_V_reg_1042 <= grp_fu_935_p3(19 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                row_1_reg_1019 <= row_1_fu_581_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op150_read_state9 = ap_const_boolean_1) and (line_buffer_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op148_read_state9 = ap_const_boolean_1) and (line_buffer_0_V_V_empty_n = ap_const_logic_0)))) and (exitcond9_fu_712_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                tmp_10_reg_1086 <= tmp_10_fu_747_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond8_fu_790_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_io))) then
                tmp_15_reg_1117 <= tmp_15_fu_814_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op150_read_state9 = ap_const_boolean_1) and (line_buffer_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op148_read_state9 = ap_const_boolean_1) and (line_buffer_0_V_V_empty_n = ap_const_logic_0)))) and (exitcond9_fu_712_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                tmp_16_reg_1076 <= tmp_16_fu_728_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_515_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1_reg_997 <= tmp_1_fu_543_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op150_read_state9 = ap_const_boolean_1) and (line_buffer_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op148_read_state9 = ap_const_boolean_1) and (line_buffer_0_V_V_empty_n = ap_const_logic_0)))) and (exitcond9_fu_712_p2 = ap_const_lv1_1) and (tmp_10_fu_747_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                tmp_20_reg_1090 <= tmp_20_fu_753_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0))) and (exitcond4_fu_575_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                tmp_5_reg_1024 <= tmp_5_fu_587_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_487_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_reg_977 <= tmp_fu_499_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, in_V_data_V_0_vld_out, out_V_data_V_1_ack_in, out_V_data_V_1_state, out_V_keep_V_1_ack_in, out_V_keep_V_1_state, out_V_strb_V_1_ack_in, out_V_strb_V_1_state, out_V_user_V_1_ack_in, out_V_user_V_1_state, out_V_last_V_1_ack_in, out_V_last_V_1_state, out_V_id_V_1_ack_in, out_V_id_V_1_state, out_V_dest_V_1_ack_in, out_V_dest_V_1_state, ap_CS_fsm_state7, exitcond6_fu_596_p2, ap_CS_fsm_state12, exitcond8_fu_790_p2, ap_CS_fsm_state15, ap_CS_fsm_state2, exitcond1_fu_487_p2, ap_CS_fsm_state3, line_buffer_0_V_V_full_n, exitcond3_fu_503_p2, ap_predicate_op57_write_state3, line_buffer_1_V_V_full_n, ap_predicate_op59_write_state3, ap_CS_fsm_state4, exitcond2_fu_515_p2, ap_CS_fsm_state5, ap_CS_fsm_state6, exitcond4_fu_575_p2, ap_CS_fsm_state8, exitcond7_fu_667_p2, ap_CS_fsm_state9, line_buffer_0_V_V_empty_n, exitcond9_fu_712_p2, ap_predicate_op148_read_state9, line_buffer_1_V_V_empty_n, ap_predicate_op150_read_state9, ap_block_state12_io, ap_CS_fsm_state13, exitcond_fu_896_p2, exitcond5_fu_549_p2, ap_CS_fsm_state11, ap_predicate_op168_write_state11, ap_predicate_op170_write_state11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond1_fu_487_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not((((ap_predicate_op59_write_state3 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (exitcond3_fu_503_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not((((ap_predicate_op59_write_state3 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (exitcond3_fu_503_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((exitcond2_fu_515_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((exitcond5_fu_549_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0))) and (exitcond4_fu_575_p2 = ap_const_lv1_1) and (out_V_dest_V_1_state(0) = ap_const_logic_0) and (out_V_id_V_1_state(0) = ap_const_logic_0) and (out_V_last_V_1_state(0) = ap_const_logic_0) and (out_V_user_V_1_state(0) = ap_const_logic_0) and (out_V_strb_V_1_state(0) = ap_const_logic_0) and (out_V_keep_V_1_state(0) = ap_const_logic_0) and (out_V_data_V_1_state(0) = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0))) and (exitcond4_fu_575_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((exitcond6_fu_596_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0))) and (exitcond6_fu_596_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif ((not(((exitcond6_fu_596_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0))) and (exitcond6_fu_596_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((exitcond7_fu_667_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not((((ap_predicate_op150_read_state9 = ap_const_boolean_1) and (line_buffer_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op148_read_state9 = ap_const_boolean_1) and (line_buffer_0_V_V_empty_n = ap_const_logic_0)))) and (exitcond9_fu_712_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif ((not((((ap_predicate_op150_read_state9 = ap_const_boolean_1) and (line_buffer_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op148_read_state9 = ap_const_boolean_1) and (line_buffer_0_V_V_empty_n = ap_const_logic_0)))) and (exitcond9_fu_712_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state11 => 
                if ((not((((ap_predicate_op170_write_state11 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op168_write_state11 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((exitcond8_fu_790_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((exitcond8_fu_790_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((exitcond_fu_896_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state15 => 
                if (((out_V_data_V_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state11_assign_proc : process(line_buffer_0_V_V_full_n, line_buffer_1_V_V_full_n, ap_predicate_op168_write_state11, ap_predicate_op170_write_state11)
    begin
                ap_block_state11 <= (((ap_predicate_op170_write_state11 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op168_write_state11 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)));
    end process;


    ap_block_state12_io_assign_proc : process(out_V_data_V_1_ack_in, exitcond8_fu_790_p2)
    begin
                ap_block_state12_io <= ((exitcond8_fu_790_p2 = ap_const_lv1_1) and (out_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(line_buffer_0_V_V_full_n, ap_predicate_op57_write_state3, line_buffer_1_V_V_full_n, ap_predicate_op59_write_state3)
    begin
                ap_block_state3 <= (((ap_predicate_op59_write_state3 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)));
    end process;


    ap_block_state6_assign_proc : process(out_V_data_V_1_ack_in, out_V_keep_V_1_ack_in, out_V_strb_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in)
    begin
                ap_block_state6 <= ((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(in_V_data_V_0_vld_out, exitcond6_fu_596_p2)
    begin
                ap_block_state7 <= ((exitcond6_fu_596_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_block_state9_assign_proc : process(line_buffer_0_V_V_empty_n, ap_predicate_op148_read_state9, line_buffer_1_V_V_empty_n, ap_predicate_op150_read_state9)
    begin
                ap_block_state9 <= (((ap_predicate_op150_read_state9 = ap_const_boolean_1) and (line_buffer_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op148_read_state9 = ap_const_boolean_1) and (line_buffer_0_V_V_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_1081_assign_proc : process(ap_CS_fsm_state9, line_buffer_0_V_V_empty_n, exitcond9_fu_712_p2, tmp_10_fu_747_p2, ap_predicate_op148_read_state9, line_buffer_1_V_V_empty_n, ap_predicate_op150_read_state9)
    begin
                ap_condition_1081 <= (not((((ap_predicate_op150_read_state9 = ap_const_boolean_1) and (line_buffer_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op148_read_state9 = ap_const_boolean_1) and (line_buffer_0_V_V_empty_n = ap_const_logic_0)))) and (exitcond9_fu_712_p2 = ap_const_lv1_1) and (tmp_10_fu_747_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9));
    end process;


    ap_done_assign_proc : process(out_V_data_V_1_ack_in, out_V_data_V_1_state, out_V_keep_V_1_ack_in, out_V_keep_V_1_state, out_V_strb_V_1_ack_in, out_V_strb_V_1_state, out_V_user_V_1_ack_in, out_V_user_V_1_state, out_V_last_V_1_ack_in, out_V_last_V_1_state, out_V_id_V_1_ack_in, out_V_id_V_1_state, out_V_dest_V_1_ack_in, out_V_dest_V_1_state, ap_CS_fsm_state6, exitcond4_fu_575_p2)
    begin
        if ((not(((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0))) and (exitcond4_fu_575_p2 = ap_const_lv1_1) and (out_V_dest_V_1_state(0) = ap_const_logic_0) and (out_V_id_V_1_state(0) = ap_const_logic_0) and (out_V_last_V_1_state(0) = ap_const_logic_0) and (out_V_user_V_1_state(0) = ap_const_logic_0) and (out_V_strb_V_1_state(0) = ap_const_logic_0) and (out_V_keep_V_1_state(0) = ap_const_logic_0) and (out_V_data_V_1_state(0) = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op148_read_state9_assign_proc : process(exitcond9_fu_712_p2, tmp_10_fu_747_p2, tmp_20_fu_753_p1)
    begin
                ap_predicate_op148_read_state9 <= ((exitcond9_fu_712_p2 = ap_const_lv1_1) and (tmp_20_fu_753_p1 = ap_const_lv1_0) and (tmp_10_fu_747_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op150_read_state9_assign_proc : process(exitcond9_fu_712_p2, tmp_10_fu_747_p2, tmp_20_fu_753_p1)
    begin
                ap_predicate_op150_read_state9 <= ((tmp_20_fu_753_p1 = ap_const_lv1_1) and (exitcond9_fu_712_p2 = ap_const_lv1_1) and (tmp_10_fu_747_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op168_write_state11_assign_proc : process(tmp_10_reg_1086, tmp_20_reg_1090)
    begin
                ap_predicate_op168_write_state11 <= ((tmp_20_reg_1090 = ap_const_lv1_0) and (tmp_10_reg_1086 = ap_const_lv1_0));
    end process;


    ap_predicate_op170_write_state11_assign_proc : process(tmp_10_reg_1086, tmp_20_reg_1090)
    begin
                ap_predicate_op170_write_state11 <= ((tmp_20_reg_1090 = ap_const_lv1_1) and (tmp_10_reg_1086 = ap_const_lv1_0));
    end process;


    ap_predicate_op57_write_state3_assign_proc : process(tmp_reg_977, exitcond3_fu_503_p2)
    begin
                ap_predicate_op57_write_state3 <= ((exitcond3_fu_503_p2 = ap_const_lv1_0) and (tmp_reg_977 = ap_const_lv1_0));
    end process;


    ap_predicate_op59_write_state3_assign_proc : process(tmp_reg_977, exitcond3_fu_503_p2)
    begin
                ap_predicate_op59_write_state3 <= ((tmp_reg_977 = ap_const_lv1_1) and (exitcond3_fu_503_p2 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(out_V_data_V_1_ack_in, out_V_data_V_1_state, out_V_keep_V_1_ack_in, out_V_keep_V_1_state, out_V_strb_V_1_ack_in, out_V_strb_V_1_state, out_V_user_V_1_ack_in, out_V_user_V_1_state, out_V_last_V_1_ack_in, out_V_last_V_1_state, out_V_id_V_1_ack_in, out_V_id_V_1_state, out_V_dest_V_1_ack_in, out_V_dest_V_1_state, ap_CS_fsm_state6, exitcond4_fu_575_p2)
    begin
        if ((not(((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0))) and (exitcond4_fu_575_p2 = ap_const_lv1_1) and (out_V_dest_V_1_state(0) = ap_const_logic_0) and (out_V_id_V_1_state(0) = ap_const_logic_0) and (out_V_last_V_1_state(0) = ap_const_logic_0) and (out_V_user_V_1_state(0) = ap_const_logic_0) and (out_V_strb_V_1_state(0) = ap_const_logic_0) and (out_V_keep_V_1_state(0) = ap_const_logic_0) and (out_V_data_V_1_state(0) = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    col_1_fu_602_p2 <= std_logic_vector(unsigned(col_reg_398) + unsigned(ap_const_lv10_1));

    conv_window_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state8, conv_window_V_addr_2_reg_1063, ap_CS_fsm_state9, exitcond9_fu_712_p2, tmp_10_fu_747_p2, ap_CS_fsm_state13, ap_CS_fsm_state11, ap_CS_fsm_state10, tmp_22_cast_fu_570_p1, tmp_29_cast_fu_742_p1, tmp_32_cast_fu_777_p1, tmp_28_cast_fu_782_p1, tmp_30_cast_fu_913_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv_window_V_address0 <= tmp_30_cast_fu_913_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            conv_window_V_address0 <= conv_window_V_addr_2_reg_1063;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv_window_V_address0 <= tmp_28_cast_fu_782_p1(4 - 1 downto 0);
        elsif (((exitcond9_fu_712_p2 = ap_const_lv1_1) and (tmp_10_fu_747_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            conv_window_V_address0 <= tmp_32_cast_fu_777_p1(4 - 1 downto 0);
        elsif (((exitcond9_fu_712_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            conv_window_V_address0 <= tmp_29_cast_fu_742_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_window_V_address0 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_window_V_address0 <= tmp_22_cast_fu_570_p1(4 - 1 downto 0);
        else 
            conv_window_V_address0 <= "XXXX";
        end if; 
    end process;


    conv_window_V_ce0_assign_proc : process(line_buffer_0_V_V_full_n, line_buffer_1_V_V_full_n, ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state9, line_buffer_0_V_V_empty_n, exitcond9_fu_712_p2, tmp_10_fu_747_p2, ap_predicate_op148_read_state9, line_buffer_1_V_V_empty_n, ap_predicate_op150_read_state9, ap_CS_fsm_state13, ap_CS_fsm_state11, ap_predicate_op168_write_state11, ap_predicate_op170_write_state11, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state8) or (not((((ap_predicate_op170_write_state11 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op168_write_state11 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((ap_predicate_op150_read_state9 = ap_const_boolean_1) and (line_buffer_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op148_read_state9 = ap_const_boolean_1) and (line_buffer_0_V_V_empty_n = ap_const_logic_0)))) and (exitcond9_fu_712_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not((((ap_predicate_op150_read_state9 = ap_const_boolean_1) and (line_buffer_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op148_read_state9 = ap_const_boolean_1) and (line_buffer_0_V_V_empty_n = ap_const_logic_0)))) and (exitcond9_fu_712_p2 = ap_const_lv1_1) and (tmp_10_fu_747_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            conv_window_V_ce0 <= ap_const_logic_1;
        else 
            conv_window_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_window_V_d0_assign_proc : process(ap_CS_fsm_state5, pixel_gray_V_reg_1042, ap_CS_fsm_state8, conv_window_V_q0, ap_CS_fsm_state11, ap_CS_fsm_state10, tmp_V_11_reg_433)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            conv_window_V_d0 <= tmp_V_11_reg_433;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv_window_V_d0 <= conv_window_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_window_V_d0 <= pixel_gray_V_reg_1042;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_window_V_d0 <= ap_const_lv8_0;
        else 
            conv_window_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_window_V_we0_assign_proc : process(line_buffer_0_V_V_full_n, line_buffer_1_V_V_full_n, ap_CS_fsm_state5, ap_CS_fsm_state8, exitcond7_fu_667_p2, tmp_10_reg_1086, exitcond5_fu_549_p2, ap_CS_fsm_state11, ap_predicate_op168_write_state11, ap_predicate_op170_write_state11, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((exitcond5_fu_549_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((((ap_predicate_op170_write_state11 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op168_write_state11 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (tmp_10_reg_1086 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((exitcond7_fu_667_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            conv_window_V_we0 <= ap_const_logic_1;
        else 
            conv_window_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_487_p2 <= "1" when (i_reg_343 = ap_const_lv2_2) else "0";
    exitcond2_fu_515_p2 <= "1" when (i5_reg_365 = ap_const_lv2_3) else "0";
    exitcond3_fu_503_p2 <= "1" when (j_reg_354 = ap_const_lv10_27D) else "0";
    exitcond4_fu_575_p2 <= "1" when (row_reg_387 = ap_const_lv9_1E0) else "0";
    exitcond5_fu_549_p2 <= "1" when (j6_reg_376 = ap_const_lv2_3) else "0";
    exitcond6_fu_596_p2 <= "1" when (col_reg_398 = ap_const_lv10_280) else "0";
    exitcond7_fu_667_p2 <= "1" when (i7_reg_410 = ap_const_lv2_3) else "0";
    exitcond8_fu_790_p2 <= "1" when (i9_reg_453 = ap_const_lv2_3) else "0";
    exitcond9_fu_712_p2 <= "1" when (j8_reg_422 = ap_const_lv2_2) else "0";
    exitcond_fu_896_p2 <= "1" when (j4_reg_476 = ap_const_lv2_3) else "0";
    grp_fu_935_p0 <= grp_fu_935_p00(8 - 1 downto 0);
    grp_fu_935_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_646_p1),10));
    grp_fu_935_p1 <= grp_fu_935_p10(9 - 1 downto 0);
    grp_fu_935_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_640_p2),10));
    grp_fu_935_p2 <= ap_const_lv22_556(12 - 1 downto 0);
    grp_fu_944_p1 <= grp_fu_944_p10(8 - 1 downto 0);
    grp_fu_944_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_window_V_q0),11));
    i9_cast5_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i9_reg_453),5));
    i_1_fu_493_p2 <= std_logic_vector(unsigned(i_reg_343) + unsigned(ap_const_lv2_1));
    i_2_fu_521_p2 <= std_logic_vector(unsigned(i5_reg_365) + unsigned(ap_const_lv2_1));
    i_3_fu_796_p2 <= std_logic_vector(unsigned(i9_reg_453) + unsigned(ap_const_lv2_1));
    i_4_fu_673_p2 <= std_logic_vector(unsigned(i7_reg_410) + unsigned(ap_const_lv2_1));
    icmp_fu_830_p2 <= "1" when (signed(tmp_11_fu_820_p4) > signed(ap_const_lv24_0)) else "0";
    in_V_data_V_0_ack_in <= in_V_data_V_0_state(1);

    in_V_data_V_0_ack_out_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state7, exitcond6_fu_596_p2)
    begin
        if ((not(((exitcond6_fu_596_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0))) and (exitcond6_fu_596_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    in_V_data_V_0_data_out_assign_proc : process(in_V_data_V_0_payload_A, in_V_data_V_0_payload_B, in_V_data_V_0_sel)
    begin
        if ((in_V_data_V_0_sel = ap_const_logic_1)) then 
            in_V_data_V_0_data_out <= in_V_data_V_0_payload_B;
        else 
            in_V_data_V_0_data_out <= in_V_data_V_0_payload_A;
        end if; 
    end process;

    in_V_data_V_0_load_A <= (in_V_data_V_0_state_cmp_full and not(in_V_data_V_0_sel_wr));
    in_V_data_V_0_load_B <= (in_V_data_V_0_state_cmp_full and in_V_data_V_0_sel_wr);
    in_V_data_V_0_sel <= in_V_data_V_0_sel_rd;
    in_V_data_V_0_state_cmp_full <= '0' when (in_V_data_V_0_state = ap_const_lv2_1) else '1';
    in_V_data_V_0_vld_in <= in_r_TVALID;
    in_V_data_V_0_vld_out <= in_V_data_V_0_state(0);

    in_V_dest_V_0_ack_out_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state7, exitcond6_fu_596_p2)
    begin
        if ((not(((exitcond6_fu_596_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0))) and (exitcond6_fu_596_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            in_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            in_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    in_V_dest_V_0_vld_in <= in_r_TVALID;

    in_r_TDATA_blk_n_assign_proc : process(in_V_data_V_0_state, ap_CS_fsm_state7, exitcond6_fu_596_p2)
    begin
        if (((exitcond6_fu_596_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            in_r_TDATA_blk_n <= in_V_data_V_0_state(0);
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_r_TREADY <= in_V_dest_V_0_state(1);
    j4_cast2_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j4_reg_476),5));
    j_1_fu_509_p2 <= std_logic_vector(unsigned(j_reg_354) + unsigned(ap_const_lv10_1));
    j_2_fu_555_p2 <= std_logic_vector(unsigned(j6_reg_376) + unsigned(ap_const_lv2_1));
    j_3_fu_718_p2 <= std_logic_vector(unsigned(j8_reg_422) + unsigned(ap_const_lv2_1));
    j_4_fu_902_p2 <= std_logic_vector(unsigned(j4_reg_476) + unsigned(ap_const_lv2_1));
    kernel_address0 <= tmp_17_fu_922_p1(4 - 1 downto 0);

    kernel_ce0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            kernel_ce0 <= ap_const_logic_1;
        else 
            kernel_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lhs_V_cast_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_612_p4),9));

    line_buffer_0_V_V_din_assign_proc : process(ap_CS_fsm_state3, line_buffer_0_V_V_full_n, ap_predicate_op57_write_state3, line_buffer_1_V_V_full_n, ap_predicate_op59_write_state3, conv_window_V_q0, ap_CS_fsm_state11, ap_predicate_op168_write_state11, ap_predicate_op170_write_state11)
    begin
        if ((not((((ap_predicate_op170_write_state11 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op168_write_state11 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (ap_predicate_op168_write_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            line_buffer_0_V_V_din <= conv_window_V_q0;
        elsif ((not((((ap_predicate_op59_write_state3 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (ap_predicate_op57_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_0_V_V_din <= ap_const_lv8_0;
        else 
            line_buffer_0_V_V_din <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_0_V_V_read_assign_proc : process(ap_CS_fsm_state9, line_buffer_0_V_V_empty_n, ap_predicate_op148_read_state9, line_buffer_1_V_V_empty_n, ap_predicate_op150_read_state9)
    begin
        if ((not((((ap_predicate_op150_read_state9 = ap_const_boolean_1) and (line_buffer_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op148_read_state9 = ap_const_boolean_1) and (line_buffer_0_V_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op148_read_state9 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            line_buffer_0_V_V_read <= ap_const_logic_1;
        else 
            line_buffer_0_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_V_V_write_assign_proc : process(ap_CS_fsm_state3, line_buffer_0_V_V_full_n, ap_predicate_op57_write_state3, line_buffer_1_V_V_full_n, ap_predicate_op59_write_state3, ap_CS_fsm_state11, ap_predicate_op168_write_state11, ap_predicate_op170_write_state11)
    begin
        if (((not((((ap_predicate_op59_write_state3 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (ap_predicate_op57_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not((((ap_predicate_op170_write_state11 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op168_write_state11 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (ap_predicate_op168_write_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            line_buffer_0_V_V_write <= ap_const_logic_1;
        else 
            line_buffer_0_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_V_V_din_assign_proc : process(ap_CS_fsm_state3, line_buffer_0_V_V_full_n, ap_predicate_op57_write_state3, line_buffer_1_V_V_full_n, ap_predicate_op59_write_state3, conv_window_V_q0, ap_CS_fsm_state11, ap_predicate_op168_write_state11, ap_predicate_op170_write_state11)
    begin
        if ((not((((ap_predicate_op170_write_state11 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op168_write_state11 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (ap_predicate_op170_write_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            line_buffer_1_V_V_din <= conv_window_V_q0;
        elsif ((not((((ap_predicate_op59_write_state3 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (ap_predicate_op59_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_1_V_V_din <= ap_const_lv8_0;
        else 
            line_buffer_1_V_V_din <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_1_V_V_read_assign_proc : process(ap_CS_fsm_state9, line_buffer_0_V_V_empty_n, ap_predicate_op148_read_state9, line_buffer_1_V_V_empty_n, ap_predicate_op150_read_state9)
    begin
        if ((not((((ap_predicate_op150_read_state9 = ap_const_boolean_1) and (line_buffer_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op148_read_state9 = ap_const_boolean_1) and (line_buffer_0_V_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op150_read_state9 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            line_buffer_1_V_V_read <= ap_const_logic_1;
        else 
            line_buffer_1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_V_V_write_assign_proc : process(ap_CS_fsm_state3, line_buffer_0_V_V_full_n, ap_predicate_op57_write_state3, line_buffer_1_V_V_full_n, ap_predicate_op59_write_state3, ap_CS_fsm_state11, ap_predicate_op168_write_state11, ap_predicate_op170_write_state11)
    begin
        if (((not((((ap_predicate_op59_write_state3 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (ap_predicate_op59_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not((((ap_predicate_op170_write_state11 = ap_const_boolean_1) and (line_buffer_1_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op168_write_state11 = ap_const_boolean_1) and (line_buffer_0_V_V_full_n = ap_const_logic_0)))) and (ap_predicate_op170_write_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            line_buffer_1_V_V_write <= ap_const_logic_1;
        else 
            line_buffer_1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    out_V_data_V_1_ack_in <= out_V_data_V_1_state(1);
    out_V_data_V_1_ack_out <= out_r_TREADY;

    out_V_data_V_1_data_out_assign_proc : process(out_V_data_V_1_payload_A, out_V_data_V_1_payload_B, out_V_data_V_1_sel)
    begin
        if ((out_V_data_V_1_sel = ap_const_logic_1)) then 
            out_V_data_V_1_data_out <= out_V_data_V_1_payload_B;
        else 
            out_V_data_V_1_data_out <= out_V_data_V_1_payload_A;
        end if; 
    end process;

    out_V_data_V_1_load_A <= (out_V_data_V_1_state_cmp_full and not(out_V_data_V_1_sel_wr));
    out_V_data_V_1_load_B <= (out_V_data_V_1_state_cmp_full and out_V_data_V_1_sel_wr);
    out_V_data_V_1_sel <= out_V_data_V_1_sel_rd;
    out_V_data_V_1_state_cmp_full <= '0' when (out_V_data_V_1_state = ap_const_lv2_1) else '1';

    out_V_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_state12, exitcond8_fu_790_p2, ap_block_state12_io)
    begin
        if (((exitcond8_fu_790_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_io))) then 
            out_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_data_V_1_vld_out <= out_V_data_V_1_state(0);
    out_V_dest_V_1_ack_in <= out_V_dest_V_1_state(1);
    out_V_dest_V_1_ack_out <= out_r_TREADY;
    out_V_dest_V_1_data_out <= ap_const_lv1_1;
    out_V_dest_V_1_sel <= out_V_dest_V_1_sel_rd;

    out_V_dest_V_1_vld_in_assign_proc : process(ap_CS_fsm_state12, exitcond8_fu_790_p2, ap_block_state12_io)
    begin
        if (((exitcond8_fu_790_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_io))) then 
            out_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_dest_V_1_vld_out <= out_V_dest_V_1_state(0);
    out_V_id_V_1_ack_in <= out_V_id_V_1_state(1);
    out_V_id_V_1_ack_out <= out_r_TREADY;
    out_V_id_V_1_data_out <= ap_const_lv1_1;
    out_V_id_V_1_sel <= out_V_id_V_1_sel_rd;

    out_V_id_V_1_vld_in_assign_proc : process(ap_CS_fsm_state12, exitcond8_fu_790_p2, ap_block_state12_io)
    begin
        if (((exitcond8_fu_790_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_io))) then 
            out_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_id_V_1_vld_out <= out_V_id_V_1_state(0);
    out_V_keep_V_1_ack_in <= out_V_keep_V_1_state(1);
    out_V_keep_V_1_ack_out <= out_r_TREADY;
    out_V_keep_V_1_data_out <= ap_const_lv3_7;
    out_V_keep_V_1_sel <= out_V_keep_V_1_sel_rd;

    out_V_keep_V_1_vld_in_assign_proc : process(ap_CS_fsm_state12, exitcond8_fu_790_p2, ap_block_state12_io)
    begin
        if (((exitcond8_fu_790_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_io))) then 
            out_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_keep_V_1_vld_out <= out_V_keep_V_1_state(0);
    out_V_last_V_1_ack_in <= out_V_last_V_1_state(1);
    out_V_last_V_1_ack_out <= out_r_TREADY;

    out_V_last_V_1_data_out_assign_proc : process(out_V_last_V_1_payload_A, out_V_last_V_1_payload_B, out_V_last_V_1_sel)
    begin
        if ((out_V_last_V_1_sel = ap_const_logic_1)) then 
            out_V_last_V_1_data_out <= out_V_last_V_1_payload_B;
        else 
            out_V_last_V_1_data_out <= out_V_last_V_1_payload_A;
        end if; 
    end process;

    out_V_last_V_1_load_A <= (out_V_last_V_1_state_cmp_full and not(out_V_last_V_1_sel_wr));
    out_V_last_V_1_load_B <= (out_V_last_V_1_state_cmp_full and out_V_last_V_1_sel_wr);
    out_V_last_V_1_sel <= out_V_last_V_1_sel_rd;
    out_V_last_V_1_state_cmp_full <= '0' when (out_V_last_V_1_state = ap_const_lv2_1) else '1';

    out_V_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_state12, exitcond8_fu_790_p2, ap_block_state12_io)
    begin
        if (((exitcond8_fu_790_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_io))) then 
            out_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_last_V_1_vld_out <= out_V_last_V_1_state(0);
    out_V_strb_V_1_ack_in <= out_V_strb_V_1_state(1);
    out_V_strb_V_1_ack_out <= out_r_TREADY;
    out_V_strb_V_1_data_out <= ap_const_lv3_7;
    out_V_strb_V_1_sel <= out_V_strb_V_1_sel_rd;

    out_V_strb_V_1_vld_in_assign_proc : process(ap_CS_fsm_state12, exitcond8_fu_790_p2, ap_block_state12_io)
    begin
        if (((exitcond8_fu_790_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_io))) then 
            out_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_strb_V_1_vld_out <= out_V_strb_V_1_state(0);
    out_V_user_V_1_ack_in <= out_V_user_V_1_state(1);
    out_V_user_V_1_ack_out <= out_r_TREADY;
    out_V_user_V_1_data_out <= ap_const_lv1_1;
    out_V_user_V_1_sel <= out_V_user_V_1_sel_rd;

    out_V_user_V_1_vld_in_assign_proc : process(ap_CS_fsm_state12, exitcond8_fu_790_p2, ap_block_state12_io)
    begin
        if (((exitcond8_fu_790_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_io))) then 
            out_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_user_V_1_vld_out <= out_V_user_V_1_state(0);
    out_r_TDATA <= out_V_data_V_1_data_out;

    out_r_TDATA_blk_n_assign_proc : process(out_V_data_V_1_state, ap_CS_fsm_state12, exitcond8_fu_790_p2, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or ((exitcond8_fu_790_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            out_r_TDATA_blk_n <= out_V_data_V_1_state(1);
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_r_TDEST <= out_V_dest_V_1_data_out;
    out_r_TID <= out_V_id_V_1_data_out;
    out_r_TKEEP <= out_V_keep_V_1_data_out;
    out_r_TLAST <= out_V_last_V_1_data_out;
    out_r_TSTRB <= out_V_strb_V_1_data_out;
    out_r_TUSER <= out_V_user_V_1_data_out;
    out_r_TVALID <= out_V_dest_V_1_state(0);
    p_0340_2_22_fu_836_p3 <= 
        ap_const_lv32_FF when (icmp_fu_830_p2(0) = '1') else 
        p_0340_2_reg_443;
    p_Result_1_fu_622_p4 <= in_V_data_V_0_data_out(15 downto 8);
    p_Result_s_fu_612_p4 <= in_V_data_V_0_data_out(23 downto 16);
    p_load_reg_1029 <= ap_const_lv32_0;
    p_shl1_cast_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_531_p3),5));
    p_shl2_cast_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_683_p3),5));
    p_shl3_cast_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_760_p3),5));
    p_shl4_cast_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_802_p3),5));
    ret_V_fu_640_p2 <= std_logic_vector(unsigned(lhs_V_cast_fu_632_p1) + unsigned(rhs_V_cast_fu_636_p1));
    rhs_V_cast_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_622_p4),9));
    row_1_fu_581_p2 <= std_logic_vector(unsigned(row_reg_387) + unsigned(ap_const_lv9_1));
    tmp_10_fu_747_p2 <= "1" when (i7_reg_410 = ap_const_lv2_2) else "0";
    tmp_11_cast_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j8_reg_422),5));
    tmp_11_fu_820_p4 <= p_0340_2_reg_443(31 downto 8);
    tmp_12_cast_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_3_fu_718_p2),5));
    tmp_12_fu_844_p3 <= p_0340_2_22_fu_836_p3(31 downto 31);
    tmp_13_fu_852_p1 <= p_0340_2_22_fu_836_p3(8 - 1 downto 0);
    tmp_14_cast_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_4_reg_1050),5));
    tmp_14_fu_802_p3 <= (i9_reg_453 & ap_const_lv2_0);
    tmp_15_fu_814_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_810_p1) - unsigned(i9_cast5_fu_786_p1));
        tmp_16_cast_fu_918_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_fu_908_p2),32));

    tmp_16_fu_728_p2 <= std_logic_vector(unsigned(tmp_8_reg_1057) + unsigned(tmp_11_cast_fu_724_p1));
    tmp_17_fu_922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_cast_fu_918_p1),64));
    tmp_18_fu_737_p2 <= std_logic_vector(unsigned(tmp_8_reg_1057) + unsigned(tmp_12_cast_fu_733_p1));
    tmp_1_cast_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_reg_365),5));
    tmp_1_fu_543_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_539_p1) - unsigned(tmp_1_cast_fu_527_p1));
    tmp_20_fu_753_p1 <= i7_reg_410(1 - 1 downto 0);
    tmp_21_fu_908_p2 <= std_logic_vector(unsigned(tmp_15_reg_1117) + unsigned(j4_cast2_fu_892_p1));
        tmp_22_cast_fu_570_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_565_p2),64));

    tmp_22_fu_760_p3 <= (i_4_reg_1050 & ap_const_lv2_0);
    tmp_23_fu_771_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_767_p1) - unsigned(tmp_14_cast_fu_757_p1));
        tmp_25_cast_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_701_p2),64));

        tmp_28_cast_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_16_reg_1076),64));

        tmp_29_cast_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_18_fu_737_p2),64));

    tmp_2_fu_565_p2 <= std_logic_vector(unsigned(tmp_1_reg_997) + unsigned(tmp_7_cast_fu_561_p1));
        tmp_30_cast_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_fu_908_p2),64));

        tmp_32_cast_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_23_fu_771_p2),64));

    tmp_3_fu_646_p1 <= in_V_data_V_0_data_out(8 - 1 downto 0);
    tmp_4_fu_856_p3 <= 
        ap_const_lv8_0 when (tmp_12_fu_844_p3(0) = '1') else 
        tmp_13_fu_852_p1;
    tmp_5_fu_587_p2 <= "1" when (row_reg_387 = ap_const_lv9_1DF) else "0";
    tmp_6_fu_875_p2 <= "1" when (col_reg_398 = ap_const_lv10_27F) else "0";
    tmp_7_cast_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j6_reg_376),5));
    tmp_7_fu_683_p3 <= (i7_reg_410 & ap_const_lv2_0);
    tmp_8_fu_695_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_691_p1) - unsigned(tmp_cast_fu_679_p1));
    tmp_9_fu_701_p2 <= std_logic_vector(unsigned(tmp_8_fu_695_p2) + unsigned(ap_const_lv5_2));
    tmp_cast_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i7_reg_410),5));
    tmp_data_V_fu_864_p4 <= ((tmp_4_fu_856_p3 & tmp_4_fu_856_p3) & tmp_4_fu_856_p3);
    tmp_fu_499_p1 <= i_reg_343(1 - 1 downto 0);
    tmp_last_V_fu_881_p2 <= (tmp_6_fu_875_p2 and tmp_5_reg_1024);
    tmp_s_fu_531_p3 <= (i5_reg_365 & ap_const_lv2_0);
end behav;
