-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity img_filter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_V_data_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    in_V_data_V_empty_n : IN STD_LOGIC;
    in_V_data_V_read : OUT STD_LOGIC;
    in_V_keep_V_dout : IN STD_LOGIC_VECTOR (2 downto 0);
    in_V_keep_V_empty_n : IN STD_LOGIC;
    in_V_keep_V_read : OUT STD_LOGIC;
    in_V_strb_V_dout : IN STD_LOGIC_VECTOR (2 downto 0);
    in_V_strb_V_empty_n : IN STD_LOGIC;
    in_V_strb_V_read : OUT STD_LOGIC;
    in_V_user_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    in_V_user_V_empty_n : IN STD_LOGIC;
    in_V_user_V_read : OUT STD_LOGIC;
    in_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    in_V_last_V_empty_n : IN STD_LOGIC;
    in_V_last_V_read : OUT STD_LOGIC;
    in_V_id_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    in_V_id_V_empty_n : IN STD_LOGIC;
    in_V_id_V_read : OUT STD_LOGIC;
    in_V_dest_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    in_V_dest_V_empty_n : IN STD_LOGIC;
    in_V_dest_V_read : OUT STD_LOGIC;
    out_V_data_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    out_V_data_V_full_n : IN STD_LOGIC;
    out_V_data_V_write : OUT STD_LOGIC;
    out_V_keep_V_din : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_V_keep_V_full_n : IN STD_LOGIC;
    out_V_keep_V_write : OUT STD_LOGIC;
    out_V_strb_V_din : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_V_strb_V_full_n : IN STD_LOGIC;
    out_V_strb_V_write : OUT STD_LOGIC;
    out_V_user_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_V_user_V_full_n : IN STD_LOGIC;
    out_V_user_V_write : OUT STD_LOGIC;
    out_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_V_last_V_full_n : IN STD_LOGIC;
    out_V_last_V_write : OUT STD_LOGIC;
    out_V_id_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_V_id_V_full_n : IN STD_LOGIC;
    out_V_id_V_write : OUT STD_LOGIC;
    out_V_dest_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_V_dest_V_full_n : IN STD_LOGIC;
    out_V_dest_V_write : OUT STD_LOGIC );
end;


architecture behav of img_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "img_filter,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.920000,HLS_SYN_LAT=14747856,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=2,HLS_SYN_FF=287,HLS_SYN_LUT=994,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv10_27D : STD_LOGIC_VECTOR (9 downto 0) := "1001111101";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_1DF : STD_LOGIC_VECTOR (8 downto 0) := "111011111";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv10_27F : STD_LOGIC_VECTOR (9 downto 0) := "1001111111";
    constant ap_const_lv22_556 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010101010110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal kernel_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_ce0 : STD_LOGIC;
    signal kernel_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal in_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal exitcond6_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_V_keep_V_blk_n : STD_LOGIC;
    signal in_V_strb_V_blk_n : STD_LOGIC;
    signal in_V_user_V_blk_n : STD_LOGIC;
    signal in_V_last_V_blk_n : STD_LOGIC;
    signal in_V_id_V_blk_n : STD_LOGIC;
    signal in_V_dest_V_blk_n : STD_LOGIC;
    signal out_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal exitcond8_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_keep_V_blk_n : STD_LOGIC;
    signal out_V_strb_V_blk_n : STD_LOGIC;
    signal out_V_user_V_blk_n : STD_LOGIC;
    signal out_V_last_V_blk_n : STD_LOGIC;
    signal out_V_id_V_blk_n : STD_LOGIC;
    signal out_V_dest_V_blk_n : STD_LOGIC;
    signal i_1_fu_457_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_1_reg_936 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_fu_463_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_941 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_473_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal line_buffer_0_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_0_V_V_full_n : STD_LOGIC;
    signal line_buffer_0_V_V_write : STD_LOGIC;
    signal exitcond3_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op67_write_state3 : BOOLEAN;
    signal line_buffer_1_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_V_V_full_n : STD_LOGIC;
    signal line_buffer_1_V_V_write : STD_LOGIC;
    signal ap_predicate_op69_write_state3 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal i_2_fu_485_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_2_reg_956 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_1_fu_507_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_961 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond2_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_519_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal row_1_fu_545_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal row_1_reg_983 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_5_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_load_reg_993 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_V_id_V0_status : STD_LOGIC;
    signal ap_block_state7 : BOOLEAN;
    signal col_1_fu_566_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_1_reg_1001 : STD_LOGIC_VECTOR (9 downto 0);
    signal pixel_gray_V_reg_1006 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_4_fu_637_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_4_reg_1014 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_8_fu_659_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_reg_1021 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond7_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_window_V_addr_2_reg_1027 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_3_fu_682_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_3_reg_1035 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal line_buffer_0_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_0_V_V_empty_n : STD_LOGIC;
    signal line_buffer_0_V_V_read : STD_LOGIC;
    signal exitcond9_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_717_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op158_read_state9 : BOOLEAN;
    signal line_buffer_1_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_V_V_empty_n : STD_LOGIC;
    signal line_buffer_1_V_V_read : STD_LOGIC;
    signal ap_predicate_op160_read_state9 : BOOLEAN;
    signal ap_block_state9 : BOOLEAN;
    signal tmp_16_fu_692_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_16_reg_1040 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_reg_1050 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1054 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_760_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_3_reg_1076 : STD_LOGIC_VECTOR (1 downto 0);
    signal out_V_id_V1_status : STD_LOGIC;
    signal ap_block_state12 : BOOLEAN;
    signal tmp_15_fu_778_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_15_reg_1081 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_4_fu_866_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_4_reg_1089 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal exitcond_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_908_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal conv_window_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv_window_V_ce0 : STD_LOGIC;
    signal conv_window_V_we0 : STD_LOGIC;
    signal conv_window_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_window_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_307 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_318 : STD_LOGIC_VECTOR (9 downto 0);
    signal i5_reg_329 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond5_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j6_reg_340 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_reg_351 : STD_LOGIC_VECTOR (8 downto 0);
    signal col_reg_362 : STD_LOGIC_VECTOR (9 downto 0);
    signal i7_reg_374 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_predicate_op178_write_state11 : BOOLEAN;
    signal ap_predicate_op180_write_state11 : BOOLEAN;
    signal ap_block_state11 : BOOLEAN;
    signal j8_reg_386 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_V_11_reg_397 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0340_2_reg_407 : STD_LOGIC_VECTOR (31 downto 0);
    signal i9_reg_417 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0340_3_reg_428 : STD_LOGIC_VECTOR (31 downto 0);
    signal j4_reg_440 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_22_cast_fu_534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_cast_fu_671_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_cast_fu_706_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_cast_fu_741_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_cast_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_cast_fu_877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal in_V_id_V0_update : STD_LOGIC;
    signal out_V_id_V1_update : STD_LOGIC;
    signal tmp_s_fu_495_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl1_cast_fu_503_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_cast_fu_491_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_cast_fu_525_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_fu_529_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_s_fu_576_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_fu_586_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_cast_fu_596_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_cast_fu_600_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_fu_604_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_fu_610_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_899_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_7_fu_647_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl2_cast_fu_655_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_cast_fu_643_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_fu_665_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_cast_fu_688_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_12_cast_fu_697_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_18_fu_701_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_22_fu_724_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl3_cast_fu_731_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_14_cast_fu_721_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_23_fu_735_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_14_fu_766_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl4_cast_fu_774_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal i9_cast5_fu_750_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_fu_784_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0340_2_41_fu_800_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_808_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_816_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_820_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j4_cast2_fu_856_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_21_fu_872_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_16_cast_fu_882_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_899_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_899_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_899_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_908_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_899_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_899_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_908_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_condition_282 : BOOLEAN;

    component img_filter_am_addcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component img_filter_mac_mudEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component img_filter_kernel IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component img_filter_conv_wbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component fifo_w8_d480_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    kernel_U : component img_filter_kernel
    generic map (
        DataWidth => 3,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernel_address0,
        ce0 => kernel_ce0,
        q0 => kernel_q0);

    conv_window_V_U : component img_filter_conv_wbkb
    generic map (
        DataWidth => 8,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_window_V_address0,
        ce0 => conv_window_V_ce0,
        we0 => conv_window_V_we0,
        d0 => conv_window_V_d0,
        q0 => conv_window_V_q0);

    img_filter_am_addcud_U1 : component img_filter_am_addcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 9,
        din2_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_899_p0,
        din1 => grp_fu_899_p1,
        din2 => grp_fu_899_p2,
        dout => grp_fu_899_p3);

    img_filter_mac_mudEe_U2 : component img_filter_mac_mudEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => kernel_q0,
        din1 => grp_fu_908_p1,
        din2 => p_0340_3_reg_428,
        dout => grp_fu_908_p3);

    line_buffer_0_V_V_fifo_U : component fifo_w8_d480_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => line_buffer_0_V_V_din,
        if_full_n => line_buffer_0_V_V_full_n,
        if_write => line_buffer_0_V_V_write,
        if_dout => line_buffer_0_V_V_dout,
        if_empty_n => line_buffer_0_V_V_empty_n,
        if_read => line_buffer_0_V_V_read);

    line_buffer_1_V_V_fifo_U : component fifo_w8_d480_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => line_buffer_1_V_V_din,
        if_full_n => line_buffer_1_V_V_full_n,
        if_write => line_buffer_1_V_V_write,
        if_dout => line_buffer_1_V_V_dout,
        if_empty_n => line_buffer_1_V_V_empty_n,
        if_read => line_buffer_1_V_V_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    col_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond4_fu_539_p2 = ap_const_lv1_0))) then 
                col_reg_362 <= ap_const_lv10_0;
            elsif ((not(((out_V_id_V1_status = ap_const_logic_0) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) then 
                col_reg_362 <= col_1_reg_1001;
            end if; 
        end if;
    end process;

    i5_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_451_p2 = ap_const_lv1_1))) then 
                i5_reg_329 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond5_fu_513_p2 = ap_const_lv1_1))) then 
                i5_reg_329 <= i_2_reg_956;
            end if; 
        end if;
    end process;

    i7_reg_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op180_write_state11 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op178_write_state11 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                i7_reg_374 <= i_4_reg_1014;
            elsif ((not(((in_V_id_V0_status = ap_const_logic_0) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) then 
                i7_reg_374 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i9_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_860_p2 = ap_const_lv1_1))) then 
                i9_reg_417 <= i_3_reg_1076;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond7_fu_631_p2 = ap_const_lv1_1))) then 
                i9_reg_417 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op69_write_state3 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_fu_467_p2 = ap_const_lv1_1))) then 
                i_reg_307 <= i_1_reg_936;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_307 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j4_reg_440_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_id_V1_status = ap_const_logic_0) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_fu_754_p2 = ap_const_lv1_0))) then 
                j4_reg_440 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                j4_reg_440 <= j_4_reg_1089;
            end if; 
        end if;
    end process;

    j6_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond2_fu_479_p2 = ap_const_lv1_0))) then 
                j6_reg_340 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond5_fu_513_p2 = ap_const_lv1_0))) then 
                j6_reg_340 <= j_2_fu_519_p2;
            end if; 
        end if;
    end process;

    j8_reg_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond7_fu_631_p2 = ap_const_lv1_0))) then 
                j8_reg_386 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                j8_reg_386 <= j_3_reg_1035;
            end if; 
        end if;
    end process;

    j_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_451_p2 = ap_const_lv1_0))) then 
                j_reg_318 <= ap_const_lv10_0;
            elsif ((not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op69_write_state3 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_fu_467_p2 = ap_const_lv1_0))) then 
                j_reg_318 <= j_1_fu_473_p2;
            end if; 
        end if;
    end process;

    p_0340_2_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_860_p2 = ap_const_lv1_1))) then 
                p_0340_2_reg_407 <= p_0340_3_reg_428;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond7_fu_631_p2 = ap_const_lv1_1))) then 
                p_0340_2_reg_407 <= p_load_reg_993;
            end if; 
        end if;
    end process;

    p_0340_3_reg_428_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_id_V1_status = ap_const_logic_0) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_fu_754_p2 = ap_const_lv1_0))) then 
                p_0340_3_reg_428 <= p_0340_2_reg_407;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                p_0340_3_reg_428 <= grp_fu_908_p3;
            end if; 
        end if;
    end process;

    row_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_V_id_V0_status = ap_const_logic_0) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond6_fu_560_p2 = ap_const_lv1_1))) then 
                row_reg_351 <= row_1_reg_983;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond2_fu_479_p2 = ap_const_lv1_1))) then 
                row_reg_351 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    tmp_V_11_reg_397_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_282)) then
                if ((tmp_20_fu_717_p1 = ap_const_lv1_0)) then 
                    tmp_V_11_reg_397 <= line_buffer_0_V_V_dout;
                elsif ((tmp_20_fu_717_p1 = ap_const_lv1_1)) then 
                    tmp_V_11_reg_397 <= line_buffer_1_V_V_dout;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_V_id_V0_status = ap_const_logic_0) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                col_1_reg_1001 <= col_1_fu_566_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond7_fu_631_p2 = ap_const_lv1_0))) then
                conv_window_V_addr_2_reg_1027 <= tmp_25_cast_fu_671_p1(4 - 1 downto 0);
                tmp_8_reg_1021 <= tmp_8_fu_659_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_1_reg_936 <= i_1_fu_457_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_2_reg_956 <= i_2_fu_485_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_id_V1_status = ap_const_logic_0) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                i_3_reg_1076 <= i_3_fu_760_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                i_4_reg_1014 <= i_4_fu_637_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((line_buffer_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state9 = ap_const_boolean_1)) or ((line_buffer_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state9 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                j_3_reg_1035 <= j_3_fu_682_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                j_4_reg_1089 <= j_4_fu_866_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_V_id_V0_status = ap_const_logic_0) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) then
                pixel_gray_V_reg_1006 <= grp_fu_899_p3(19 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                row_1_reg_983 <= row_1_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((line_buffer_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state9 = ap_const_boolean_1)) or ((line_buffer_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state9 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond9_fu_676_p2 = ap_const_lv1_1))) then
                tmp_10_reg_1050 <= tmp_10_fu_711_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_id_V1_status = ap_const_logic_0) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_fu_754_p2 = ap_const_lv1_0))) then
                tmp_15_reg_1081 <= tmp_15_fu_778_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((line_buffer_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state9 = ap_const_boolean_1)) or ((line_buffer_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state9 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond9_fu_676_p2 = ap_const_lv1_0))) then
                tmp_16_reg_1040 <= tmp_16_fu_692_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond2_fu_479_p2 = ap_const_lv1_0))) then
                tmp_1_reg_961 <= tmp_1_fu_507_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((line_buffer_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state9 = ap_const_boolean_1)) or ((line_buffer_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state9 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond9_fu_676_p2 = ap_const_lv1_1) and (tmp_10_fu_711_p2 = ap_const_lv1_0))) then
                tmp_20_reg_1054 <= tmp_20_fu_717_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond4_fu_539_p2 = ap_const_lv1_0))) then
                tmp_5_reg_988 <= tmp_5_fu_551_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_451_p2 = ap_const_lv1_0))) then
                tmp_reg_941 <= tmp_fu_463_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state7, exitcond6_fu_560_p2, ap_CS_fsm_state12, exitcond8_fu_754_p2, ap_CS_fsm_state2, exitcond1_fu_451_p2, ap_CS_fsm_state3, line_buffer_0_V_V_full_n, exitcond3_fu_467_p2, ap_predicate_op67_write_state3, line_buffer_1_V_V_full_n, ap_predicate_op69_write_state3, ap_CS_fsm_state4, exitcond2_fu_479_p2, ap_CS_fsm_state5, ap_CS_fsm_state6, exitcond4_fu_539_p2, in_V_id_V0_status, ap_CS_fsm_state8, exitcond7_fu_631_p2, ap_CS_fsm_state9, line_buffer_0_V_V_empty_n, exitcond9_fu_676_p2, ap_predicate_op158_read_state9, line_buffer_1_V_V_empty_n, ap_predicate_op160_read_state9, out_V_id_V1_status, ap_CS_fsm_state13, exitcond_fu_860_p2, exitcond5_fu_513_p2, ap_CS_fsm_state11, ap_predicate_op178_write_state11, ap_predicate_op180_write_state11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_451_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op69_write_state3 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_fu_467_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op69_write_state3 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_fu_467_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond2_fu_479_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond5_fu_513_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond4_fu_539_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((in_V_id_V0_status = ap_const_logic_0) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond6_fu_560_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif ((not(((in_V_id_V0_status = ap_const_logic_0) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond7_fu_631_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not((((line_buffer_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state9 = ap_const_boolean_1)) or ((line_buffer_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state9 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond9_fu_676_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif ((not((((line_buffer_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state9 = ap_const_boolean_1)) or ((line_buffer_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state9 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond9_fu_676_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state11 => 
                if ((not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op180_write_state11 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op178_write_state11 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if ((not(((out_V_id_V1_status = ap_const_logic_0) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif ((not(((out_V_id_V1_status = ap_const_logic_0) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_fu_754_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_860_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state11_assign_proc : process(line_buffer_0_V_V_full_n, line_buffer_1_V_V_full_n, ap_predicate_op178_write_state11, ap_predicate_op180_write_state11)
    begin
                ap_block_state11 <= (((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op180_write_state11 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op178_write_state11 = ap_const_boolean_1)));
    end process;


    ap_block_state12_assign_proc : process(exitcond8_fu_754_p2, out_V_id_V1_status)
    begin
                ap_block_state12 <= ((out_V_id_V1_status = ap_const_logic_0) and (exitcond8_fu_754_p2 = ap_const_lv1_1));
    end process;


    ap_block_state3_assign_proc : process(line_buffer_0_V_V_full_n, ap_predicate_op67_write_state3, line_buffer_1_V_V_full_n, ap_predicate_op69_write_state3)
    begin
                ap_block_state3 <= (((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op69_write_state3 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state7_assign_proc : process(exitcond6_fu_560_p2, in_V_id_V0_status)
    begin
                ap_block_state7 <= ((in_V_id_V0_status = ap_const_logic_0) and (exitcond6_fu_560_p2 = ap_const_lv1_0));
    end process;


    ap_block_state9_assign_proc : process(line_buffer_0_V_V_empty_n, ap_predicate_op158_read_state9, line_buffer_1_V_V_empty_n, ap_predicate_op160_read_state9)
    begin
                ap_block_state9 <= (((line_buffer_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state9 = ap_const_boolean_1)) or ((line_buffer_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state9 = ap_const_boolean_1)));
    end process;


    ap_condition_282_assign_proc : process(ap_CS_fsm_state9, line_buffer_0_V_V_empty_n, exitcond9_fu_676_p2, tmp_10_fu_711_p2, ap_predicate_op158_read_state9, line_buffer_1_V_V_empty_n, ap_predicate_op160_read_state9)
    begin
                ap_condition_282 <= (not((((line_buffer_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state9 = ap_const_boolean_1)) or ((line_buffer_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state9 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond9_fu_676_p2 = ap_const_lv1_1) and (tmp_10_fu_711_p2 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state6, exitcond4_fu_539_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond4_fu_539_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op158_read_state9_assign_proc : process(exitcond9_fu_676_p2, tmp_10_fu_711_p2, tmp_20_fu_717_p1)
    begin
                ap_predicate_op158_read_state9 <= ((exitcond9_fu_676_p2 = ap_const_lv1_1) and (tmp_20_fu_717_p1 = ap_const_lv1_0) and (tmp_10_fu_711_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op160_read_state9_assign_proc : process(exitcond9_fu_676_p2, tmp_10_fu_711_p2, tmp_20_fu_717_p1)
    begin
                ap_predicate_op160_read_state9 <= ((tmp_20_fu_717_p1 = ap_const_lv1_1) and (exitcond9_fu_676_p2 = ap_const_lv1_1) and (tmp_10_fu_711_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op178_write_state11_assign_proc : process(tmp_10_reg_1050, tmp_20_reg_1054)
    begin
                ap_predicate_op178_write_state11 <= ((tmp_20_reg_1054 = ap_const_lv1_0) and (tmp_10_reg_1050 = ap_const_lv1_0));
    end process;


    ap_predicate_op180_write_state11_assign_proc : process(tmp_10_reg_1050, tmp_20_reg_1054)
    begin
                ap_predicate_op180_write_state11 <= ((tmp_20_reg_1054 = ap_const_lv1_1) and (tmp_10_reg_1050 = ap_const_lv1_0));
    end process;


    ap_predicate_op67_write_state3_assign_proc : process(tmp_reg_941, exitcond3_fu_467_p2)
    begin
                ap_predicate_op67_write_state3 <= ((exitcond3_fu_467_p2 = ap_const_lv1_0) and (tmp_reg_941 = ap_const_lv1_0));
    end process;


    ap_predicate_op69_write_state3_assign_proc : process(tmp_reg_941, exitcond3_fu_467_p2)
    begin
                ap_predicate_op69_write_state3 <= ((tmp_reg_941 = ap_const_lv1_1) and (exitcond3_fu_467_p2 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6, exitcond4_fu_539_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond4_fu_539_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    col_1_fu_566_p2 <= std_logic_vector(unsigned(col_reg_362) + unsigned(ap_const_lv10_1));

    conv_window_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state8, conv_window_V_addr_2_reg_1027, ap_CS_fsm_state9, exitcond9_fu_676_p2, tmp_10_fu_711_p2, ap_CS_fsm_state13, ap_CS_fsm_state11, ap_CS_fsm_state10, tmp_22_cast_fu_534_p1, tmp_29_cast_fu_706_p1, tmp_32_cast_fu_741_p1, tmp_28_cast_fu_746_p1, tmp_30_cast_fu_877_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv_window_V_address0 <= tmp_30_cast_fu_877_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            conv_window_V_address0 <= conv_window_V_addr_2_reg_1027;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv_window_V_address0 <= tmp_28_cast_fu_746_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond9_fu_676_p2 = ap_const_lv1_1) and (tmp_10_fu_711_p2 = ap_const_lv1_0))) then 
            conv_window_V_address0 <= tmp_32_cast_fu_741_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond9_fu_676_p2 = ap_const_lv1_0))) then 
            conv_window_V_address0 <= tmp_29_cast_fu_706_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_window_V_address0 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_window_V_address0 <= tmp_22_cast_fu_534_p1(4 - 1 downto 0);
        else 
            conv_window_V_address0 <= "XXXX";
        end if; 
    end process;


    conv_window_V_ce0_assign_proc : process(line_buffer_0_V_V_full_n, line_buffer_1_V_V_full_n, ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state9, line_buffer_0_V_V_empty_n, exitcond9_fu_676_p2, tmp_10_fu_711_p2, ap_predicate_op158_read_state9, line_buffer_1_V_V_empty_n, ap_predicate_op160_read_state9, ap_CS_fsm_state13, ap_CS_fsm_state11, ap_predicate_op178_write_state11, ap_predicate_op180_write_state11, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5) or (not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op180_write_state11 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op178_write_state11 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((line_buffer_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state9 = ap_const_boolean_1)) or ((line_buffer_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state9 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond9_fu_676_p2 = ap_const_lv1_0)) or (not((((line_buffer_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state9 = ap_const_boolean_1)) or ((line_buffer_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state9 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond9_fu_676_p2 = ap_const_lv1_1) and (tmp_10_fu_711_p2 = ap_const_lv1_0)))) then 
            conv_window_V_ce0 <= ap_const_logic_1;
        else 
            conv_window_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_window_V_d0_assign_proc : process(ap_CS_fsm_state5, pixel_gray_V_reg_1006, ap_CS_fsm_state8, conv_window_V_q0, ap_CS_fsm_state11, ap_CS_fsm_state10, tmp_V_11_reg_397)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            conv_window_V_d0 <= tmp_V_11_reg_397;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv_window_V_d0 <= conv_window_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_window_V_d0 <= pixel_gray_V_reg_1006;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_window_V_d0 <= ap_const_lv8_0;
        else 
            conv_window_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_window_V_we0_assign_proc : process(line_buffer_0_V_V_full_n, line_buffer_1_V_V_full_n, ap_CS_fsm_state5, ap_CS_fsm_state8, exitcond7_fu_631_p2, tmp_10_reg_1050, exitcond5_fu_513_p2, ap_CS_fsm_state11, ap_predicate_op178_write_state11, ap_predicate_op180_write_state11, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op180_write_state11 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op178_write_state11 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_10_reg_1050 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond7_fu_631_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond5_fu_513_p2 = ap_const_lv1_0)))) then 
            conv_window_V_we0 <= ap_const_logic_1;
        else 
            conv_window_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_451_p2 <= "1" when (i_reg_307 = ap_const_lv2_2) else "0";
    exitcond2_fu_479_p2 <= "1" when (i5_reg_329 = ap_const_lv2_3) else "0";
    exitcond3_fu_467_p2 <= "1" when (j_reg_318 = ap_const_lv10_27D) else "0";
    exitcond4_fu_539_p2 <= "1" when (row_reg_351 = ap_const_lv9_1E0) else "0";
    exitcond5_fu_513_p2 <= "1" when (j6_reg_340 = ap_const_lv2_3) else "0";
    exitcond6_fu_560_p2 <= "1" when (col_reg_362 = ap_const_lv10_280) else "0";
    exitcond7_fu_631_p2 <= "1" when (i7_reg_374 = ap_const_lv2_3) else "0";
    exitcond8_fu_754_p2 <= "1" when (i9_reg_417 = ap_const_lv2_3) else "0";
    exitcond9_fu_676_p2 <= "1" when (j8_reg_386 = ap_const_lv2_2) else "0";
    exitcond_fu_860_p2 <= "1" when (j4_reg_440 = ap_const_lv2_3) else "0";
    grp_fu_899_p0 <= grp_fu_899_p00(8 - 1 downto 0);
    grp_fu_899_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_610_p1),10));
    grp_fu_899_p1 <= grp_fu_899_p10(9 - 1 downto 0);
    grp_fu_899_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_604_p2),10));
    grp_fu_899_p2 <= ap_const_lv22_556(12 - 1 downto 0);
    grp_fu_908_p1 <= grp_fu_908_p10(8 - 1 downto 0);
    grp_fu_908_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_window_V_q0),11));
    i9_cast5_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i9_reg_417),5));
    i_1_fu_457_p2 <= std_logic_vector(unsigned(i_reg_307) + unsigned(ap_const_lv2_1));
    i_2_fu_485_p2 <= std_logic_vector(unsigned(i5_reg_329) + unsigned(ap_const_lv2_1));
    i_3_fu_760_p2 <= std_logic_vector(unsigned(i9_reg_417) + unsigned(ap_const_lv2_1));
    i_4_fu_637_p2 <= std_logic_vector(unsigned(i7_reg_374) + unsigned(ap_const_lv2_1));
    icmp_fu_794_p2 <= "1" when (signed(tmp_11_fu_784_p4) > signed(ap_const_lv24_0)) else "0";

    in_V_data_V_blk_n_assign_proc : process(in_V_data_V_empty_n, ap_CS_fsm_state7, exitcond6_fu_560_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) then 
            in_V_data_V_blk_n <= in_V_data_V_empty_n;
        else 
            in_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_data_V_read <= in_V_id_V0_update;

    in_V_dest_V_blk_n_assign_proc : process(in_V_dest_V_empty_n, ap_CS_fsm_state7, exitcond6_fu_560_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) then 
            in_V_dest_V_blk_n <= in_V_dest_V_empty_n;
        else 
            in_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_dest_V_read <= in_V_id_V0_update;
    in_V_id_V0_status <= (in_V_user_V_empty_n and in_V_strb_V_empty_n and in_V_last_V_empty_n and in_V_keep_V_empty_n and in_V_id_V_empty_n and in_V_dest_V_empty_n and in_V_data_V_empty_n);

    in_V_id_V0_update_assign_proc : process(ap_CS_fsm_state7, exitcond6_fu_560_p2, in_V_id_V0_status)
    begin
        if ((not(((in_V_id_V0_status = ap_const_logic_0) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) then 
            in_V_id_V0_update <= ap_const_logic_1;
        else 
            in_V_id_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    in_V_id_V_blk_n_assign_proc : process(in_V_id_V_empty_n, ap_CS_fsm_state7, exitcond6_fu_560_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) then 
            in_V_id_V_blk_n <= in_V_id_V_empty_n;
        else 
            in_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_id_V_read <= in_V_id_V0_update;

    in_V_keep_V_blk_n_assign_proc : process(in_V_keep_V_empty_n, ap_CS_fsm_state7, exitcond6_fu_560_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) then 
            in_V_keep_V_blk_n <= in_V_keep_V_empty_n;
        else 
            in_V_keep_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_keep_V_read <= in_V_id_V0_update;

    in_V_last_V_blk_n_assign_proc : process(in_V_last_V_empty_n, ap_CS_fsm_state7, exitcond6_fu_560_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) then 
            in_V_last_V_blk_n <= in_V_last_V_empty_n;
        else 
            in_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_last_V_read <= in_V_id_V0_update;

    in_V_strb_V_blk_n_assign_proc : process(in_V_strb_V_empty_n, ap_CS_fsm_state7, exitcond6_fu_560_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) then 
            in_V_strb_V_blk_n <= in_V_strb_V_empty_n;
        else 
            in_V_strb_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_strb_V_read <= in_V_id_V0_update;

    in_V_user_V_blk_n_assign_proc : process(in_V_user_V_empty_n, ap_CS_fsm_state7, exitcond6_fu_560_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond6_fu_560_p2 = ap_const_lv1_0))) then 
            in_V_user_V_blk_n <= in_V_user_V_empty_n;
        else 
            in_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_user_V_read <= in_V_id_V0_update;
    j4_cast2_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j4_reg_440),5));
    j_1_fu_473_p2 <= std_logic_vector(unsigned(j_reg_318) + unsigned(ap_const_lv10_1));
    j_2_fu_519_p2 <= std_logic_vector(unsigned(j6_reg_340) + unsigned(ap_const_lv2_1));
    j_3_fu_682_p2 <= std_logic_vector(unsigned(j8_reg_386) + unsigned(ap_const_lv2_1));
    j_4_fu_866_p2 <= std_logic_vector(unsigned(j4_reg_440) + unsigned(ap_const_lv2_1));
    kernel_address0 <= tmp_17_fu_886_p1(4 - 1 downto 0);

    kernel_ce0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            kernel_ce0 <= ap_const_logic_1;
        else 
            kernel_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lhs_V_cast_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_576_p4),9));

    line_buffer_0_V_V_din_assign_proc : process(ap_CS_fsm_state3, line_buffer_0_V_V_full_n, ap_predicate_op67_write_state3, line_buffer_1_V_V_full_n, ap_predicate_op69_write_state3, conv_window_V_q0, ap_CS_fsm_state11, ap_predicate_op178_write_state11, ap_predicate_op180_write_state11)
    begin
        if ((not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op180_write_state11 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op178_write_state11 = ap_const_boolean_1)))) and (ap_predicate_op178_write_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            line_buffer_0_V_V_din <= conv_window_V_q0;
        elsif ((not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op69_write_state3 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1)))) and (ap_predicate_op67_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_0_V_V_din <= ap_const_lv8_0;
        else 
            line_buffer_0_V_V_din <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_0_V_V_read_assign_proc : process(ap_CS_fsm_state9, line_buffer_0_V_V_empty_n, ap_predicate_op158_read_state9, line_buffer_1_V_V_empty_n, ap_predicate_op160_read_state9)
    begin
        if ((not((((line_buffer_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state9 = ap_const_boolean_1)) or ((line_buffer_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state9 = ap_const_boolean_1)))) and (ap_predicate_op158_read_state9 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            line_buffer_0_V_V_read <= ap_const_logic_1;
        else 
            line_buffer_0_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_V_V_write_assign_proc : process(ap_CS_fsm_state3, line_buffer_0_V_V_full_n, ap_predicate_op67_write_state3, line_buffer_1_V_V_full_n, ap_predicate_op69_write_state3, ap_CS_fsm_state11, ap_predicate_op178_write_state11, ap_predicate_op180_write_state11)
    begin
        if (((not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op180_write_state11 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op178_write_state11 = ap_const_boolean_1)))) and (ap_predicate_op178_write_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op69_write_state3 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1)))) and (ap_predicate_op67_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            line_buffer_0_V_V_write <= ap_const_logic_1;
        else 
            line_buffer_0_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_V_V_din_assign_proc : process(ap_CS_fsm_state3, line_buffer_0_V_V_full_n, ap_predicate_op67_write_state3, line_buffer_1_V_V_full_n, ap_predicate_op69_write_state3, conv_window_V_q0, ap_CS_fsm_state11, ap_predicate_op178_write_state11, ap_predicate_op180_write_state11)
    begin
        if ((not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op180_write_state11 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op178_write_state11 = ap_const_boolean_1)))) and (ap_predicate_op180_write_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            line_buffer_1_V_V_din <= conv_window_V_q0;
        elsif ((not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op69_write_state3 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1)))) and (ap_predicate_op69_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_1_V_V_din <= ap_const_lv8_0;
        else 
            line_buffer_1_V_V_din <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_1_V_V_read_assign_proc : process(ap_CS_fsm_state9, line_buffer_0_V_V_empty_n, ap_predicate_op158_read_state9, line_buffer_1_V_V_empty_n, ap_predicate_op160_read_state9)
    begin
        if ((not((((line_buffer_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state9 = ap_const_boolean_1)) or ((line_buffer_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state9 = ap_const_boolean_1)))) and (ap_predicate_op160_read_state9 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            line_buffer_1_V_V_read <= ap_const_logic_1;
        else 
            line_buffer_1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_V_V_write_assign_proc : process(ap_CS_fsm_state3, line_buffer_0_V_V_full_n, ap_predicate_op67_write_state3, line_buffer_1_V_V_full_n, ap_predicate_op69_write_state3, ap_CS_fsm_state11, ap_predicate_op178_write_state11, ap_predicate_op180_write_state11)
    begin
        if (((not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op180_write_state11 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op178_write_state11 = ap_const_boolean_1)))) and (ap_predicate_op180_write_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((line_buffer_1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op69_write_state3 = ap_const_boolean_1)) or ((line_buffer_0_V_V_full_n = ap_const_logic_0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1)))) and (ap_predicate_op69_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            line_buffer_1_V_V_write <= ap_const_logic_1;
        else 
            line_buffer_1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_V_data_V_blk_n_assign_proc : process(out_V_data_V_full_n, ap_CS_fsm_state12, exitcond8_fu_754_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) then 
            out_V_data_V_blk_n <= out_V_data_V_full_n;
        else 
            out_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_data_V_din <= ((tmp_4_fu_820_p3 & tmp_4_fu_820_p3) & tmp_4_fu_820_p3);
    out_V_data_V_write <= out_V_id_V1_update;

    out_V_dest_V_blk_n_assign_proc : process(out_V_dest_V_full_n, ap_CS_fsm_state12, exitcond8_fu_754_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) then 
            out_V_dest_V_blk_n <= out_V_dest_V_full_n;
        else 
            out_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_dest_V_din <= ap_const_lv1_1;
    out_V_dest_V_write <= out_V_id_V1_update;
    out_V_id_V1_status <= (out_V_user_V_full_n and out_V_strb_V_full_n and out_V_last_V_full_n and out_V_keep_V_full_n and out_V_id_V_full_n and out_V_dest_V_full_n and out_V_data_V_full_n);

    out_V_id_V1_update_assign_proc : process(ap_CS_fsm_state12, exitcond8_fu_754_p2, out_V_id_V1_status)
    begin
        if ((not(((out_V_id_V1_status = ap_const_logic_0) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) then 
            out_V_id_V1_update <= ap_const_logic_1;
        else 
            out_V_id_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    out_V_id_V_blk_n_assign_proc : process(out_V_id_V_full_n, ap_CS_fsm_state12, exitcond8_fu_754_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) then 
            out_V_id_V_blk_n <= out_V_id_V_full_n;
        else 
            out_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_id_V_din <= ap_const_lv1_1;
    out_V_id_V_write <= out_V_id_V1_update;

    out_V_keep_V_blk_n_assign_proc : process(out_V_keep_V_full_n, ap_CS_fsm_state12, exitcond8_fu_754_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) then 
            out_V_keep_V_blk_n <= out_V_keep_V_full_n;
        else 
            out_V_keep_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_keep_V_din <= ap_const_lv3_7;
    out_V_keep_V_write <= out_V_id_V1_update;

    out_V_last_V_blk_n_assign_proc : process(out_V_last_V_full_n, ap_CS_fsm_state12, exitcond8_fu_754_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) then 
            out_V_last_V_blk_n <= out_V_last_V_full_n;
        else 
            out_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_last_V_din <= (tmp_6_fu_839_p2 and tmp_5_reg_988);
    out_V_last_V_write <= out_V_id_V1_update;

    out_V_strb_V_blk_n_assign_proc : process(out_V_strb_V_full_n, ap_CS_fsm_state12, exitcond8_fu_754_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) then 
            out_V_strb_V_blk_n <= out_V_strb_V_full_n;
        else 
            out_V_strb_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_strb_V_din <= ap_const_lv3_7;
    out_V_strb_V_write <= out_V_id_V1_update;

    out_V_user_V_blk_n_assign_proc : process(out_V_user_V_full_n, ap_CS_fsm_state12, exitcond8_fu_754_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_fu_754_p2 = ap_const_lv1_1))) then 
            out_V_user_V_blk_n <= out_V_user_V_full_n;
        else 
            out_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_user_V_din <= ap_const_lv1_1;
    out_V_user_V_write <= out_V_id_V1_update;
    p_0340_2_41_fu_800_p3 <= 
        ap_const_lv32_FF when (icmp_fu_794_p2(0) = '1') else 
        p_0340_2_reg_407;
    p_Result_1_fu_586_p4 <= in_V_data_V_dout(15 downto 8);
    p_Result_s_fu_576_p4 <= in_V_data_V_dout(23 downto 16);
    p_load_reg_993 <= ap_const_lv32_0;
    p_shl1_cast_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_495_p3),5));
    p_shl2_cast_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_647_p3),5));
    p_shl3_cast_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_724_p3),5));
    p_shl4_cast_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_766_p3),5));
    ret_V_fu_604_p2 <= std_logic_vector(unsigned(lhs_V_cast_fu_596_p1) + unsigned(rhs_V_cast_fu_600_p1));
    rhs_V_cast_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_586_p4),9));
    row_1_fu_545_p2 <= std_logic_vector(unsigned(row_reg_351) + unsigned(ap_const_lv9_1));
    tmp_10_fu_711_p2 <= "1" when (i7_reg_374 = ap_const_lv2_2) else "0";
    tmp_11_cast_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j8_reg_386),5));
    tmp_11_fu_784_p4 <= p_0340_2_reg_407(31 downto 8);
    tmp_12_cast_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_3_fu_682_p2),5));
    tmp_12_fu_808_p3 <= p_0340_2_41_fu_800_p3(31 downto 31);
    tmp_13_fu_816_p1 <= p_0340_2_41_fu_800_p3(8 - 1 downto 0);
    tmp_14_cast_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_4_reg_1014),5));
    tmp_14_fu_766_p3 <= (i9_reg_417 & ap_const_lv2_0);
    tmp_15_fu_778_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_774_p1) - unsigned(i9_cast5_fu_750_p1));
        tmp_16_cast_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_fu_872_p2),32));

    tmp_16_fu_692_p2 <= std_logic_vector(unsigned(tmp_8_reg_1021) + unsigned(tmp_11_cast_fu_688_p1));
    tmp_17_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_cast_fu_882_p1),64));
    tmp_18_fu_701_p2 <= std_logic_vector(unsigned(tmp_8_reg_1021) + unsigned(tmp_12_cast_fu_697_p1));
    tmp_1_cast_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_reg_329),5));
    tmp_1_fu_507_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_503_p1) - unsigned(tmp_1_cast_fu_491_p1));
    tmp_20_fu_717_p1 <= i7_reg_374(1 - 1 downto 0);
    tmp_21_fu_872_p2 <= std_logic_vector(unsigned(tmp_15_reg_1081) + unsigned(j4_cast2_fu_856_p1));
        tmp_22_cast_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_529_p2),64));

    tmp_22_fu_724_p3 <= (i_4_reg_1014 & ap_const_lv2_0);
    tmp_23_fu_735_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_731_p1) - unsigned(tmp_14_cast_fu_721_p1));
        tmp_25_cast_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_665_p2),64));

        tmp_28_cast_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_16_reg_1040),64));

        tmp_29_cast_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_18_fu_701_p2),64));

    tmp_2_fu_529_p2 <= std_logic_vector(unsigned(tmp_1_reg_961) + unsigned(tmp_7_cast_fu_525_p1));
        tmp_30_cast_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_fu_872_p2),64));

        tmp_32_cast_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_23_fu_735_p2),64));

    tmp_3_fu_610_p1 <= in_V_data_V_dout(8 - 1 downto 0);
    tmp_4_fu_820_p3 <= 
        ap_const_lv8_0 when (tmp_12_fu_808_p3(0) = '1') else 
        tmp_13_fu_816_p1;
    tmp_5_fu_551_p2 <= "1" when (row_reg_351 = ap_const_lv9_1DF) else "0";
    tmp_6_fu_839_p2 <= "1" when (col_reg_362 = ap_const_lv10_27F) else "0";
    tmp_7_cast_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j6_reg_340),5));
    tmp_7_fu_647_p3 <= (i7_reg_374 & ap_const_lv2_0);
    tmp_8_fu_659_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_655_p1) - unsigned(tmp_cast_fu_643_p1));
    tmp_9_fu_665_p2 <= std_logic_vector(unsigned(tmp_8_fu_659_p2) + unsigned(ap_const_lv5_2));
    tmp_cast_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i7_reg_374),5));
    tmp_fu_463_p1 <= i_reg_307(1 - 1 downto 0);
    tmp_s_fu_495_p3 <= (i5_reg_329 & ap_const_lv2_0);
end behav;
