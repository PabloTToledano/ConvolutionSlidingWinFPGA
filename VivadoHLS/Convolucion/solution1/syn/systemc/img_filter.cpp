// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "img_filter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic img_filter::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic img_filter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> img_filter::ap_ST_fsm_state1 = "1";
const sc_lv<14> img_filter::ap_ST_fsm_state2 = "10";
const sc_lv<14> img_filter::ap_ST_fsm_state3 = "100";
const sc_lv<14> img_filter::ap_ST_fsm_state4 = "1000";
const sc_lv<14> img_filter::ap_ST_fsm_state5 = "10000";
const sc_lv<14> img_filter::ap_ST_fsm_state6 = "100000";
const sc_lv<14> img_filter::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> img_filter::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> img_filter::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> img_filter::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> img_filter::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> img_filter::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> img_filter::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> img_filter::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> img_filter::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool img_filter::ap_const_boolean_1 = true;
const sc_lv<32> img_filter::ap_const_lv32_6 = "110";
const sc_lv<1> img_filter::ap_const_lv1_0 = "0";
const sc_lv<32> img_filter::ap_const_lv32_B = "1011";
const sc_lv<1> img_filter::ap_const_lv1_1 = "1";
const sc_lv<32> img_filter::ap_const_lv32_1 = "1";
const sc_lv<32> img_filter::ap_const_lv32_2 = "10";
const sc_lv<32> img_filter::ap_const_lv32_3 = "11";
const sc_lv<32> img_filter::ap_const_lv32_4 = "100";
const sc_lv<32> img_filter::ap_const_lv32_5 = "101";
const sc_lv<32> img_filter::ap_const_lv32_7 = "111";
const sc_lv<32> img_filter::ap_const_lv32_8 = "1000";
const sc_lv<32> img_filter::ap_const_lv32_C = "1100";
const sc_lv<32> img_filter::ap_const_lv32_D = "1101";
const sc_lv<2> img_filter::ap_const_lv2_0 = "00";
const sc_lv<10> img_filter::ap_const_lv10_0 = "0000000000";
const sc_lv<9> img_filter::ap_const_lv9_0 = "000000000";
const sc_lv<32> img_filter::ap_const_lv32_A = "1010";
const sc_lv<32> img_filter::ap_const_lv32_9 = "1001";
const sc_lv<64> img_filter::ap_const_lv64_8 = "1000";
const sc_lv<8> img_filter::ap_const_lv8_0 = "00000000";
const sc_lv<3> img_filter::ap_const_lv3_7 = "111";
const sc_lv<2> img_filter::ap_const_lv2_2 = "10";
const sc_lv<2> img_filter::ap_const_lv2_1 = "1";
const sc_lv<10> img_filter::ap_const_lv10_27D = "1001111101";
const sc_lv<10> img_filter::ap_const_lv10_1 = "1";
const sc_lv<2> img_filter::ap_const_lv2_3 = "11";
const sc_lv<9> img_filter::ap_const_lv9_1E0 = "111100000";
const sc_lv<9> img_filter::ap_const_lv9_1 = "1";
const sc_lv<9> img_filter::ap_const_lv9_1DF = "111011111";
const sc_lv<10> img_filter::ap_const_lv10_280 = "1010000000";
const sc_lv<32> img_filter::ap_const_lv32_10 = "10000";
const sc_lv<32> img_filter::ap_const_lv32_17 = "10111";
const sc_lv<32> img_filter::ap_const_lv32_F = "1111";
const sc_lv<32> img_filter::ap_const_lv32_13 = "10011";
const sc_lv<5> img_filter::ap_const_lv5_2 = "10";
const sc_lv<32> img_filter::ap_const_lv32_1F = "11111";
const sc_lv<24> img_filter::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<32> img_filter::ap_const_lv32_FF = "11111111";
const sc_lv<10> img_filter::ap_const_lv10_27F = "1001111111";
const sc_lv<22> img_filter::ap_const_lv22_556 = "10101010110";

img_filter::img_filter(sc_module_name name) : sc_module(name), mVcdFile(0) {
    kernel_U = new img_filter_kernel("kernel_U");
    kernel_U->clk(ap_clk);
    kernel_U->reset(ap_rst);
    kernel_U->address0(kernel_address0);
    kernel_U->ce0(kernel_ce0);
    kernel_U->q0(kernel_q0);
    conv_window_V_U = new img_filter_conv_wbkb("conv_window_V_U");
    conv_window_V_U->clk(ap_clk);
    conv_window_V_U->reset(ap_rst);
    conv_window_V_U->address0(conv_window_V_address0);
    conv_window_V_U->ce0(conv_window_V_ce0);
    conv_window_V_U->we0(conv_window_V_we0);
    conv_window_V_U->d0(conv_window_V_d0);
    conv_window_V_U->q0(conv_window_V_q0);
    img_filter_am_addcud_U1 = new img_filter_am_addcud<1,1,8,9,12,22>("img_filter_am_addcud_U1");
    img_filter_am_addcud_U1->din0(grp_fu_899_p0);
    img_filter_am_addcud_U1->din1(grp_fu_899_p1);
    img_filter_am_addcud_U1->din2(grp_fu_899_p2);
    img_filter_am_addcud_U1->dout(grp_fu_899_p3);
    img_filter_mac_mudEe_U2 = new img_filter_mac_mudEe<1,1,3,8,32,32>("img_filter_mac_mudEe_U2");
    img_filter_mac_mudEe_U2->din0(kernel_q0);
    img_filter_mac_mudEe_U2->din1(grp_fu_908_p1);
    img_filter_mac_mudEe_U2->din2(p_0340_3_reg_428);
    img_filter_mac_mudEe_U2->dout(grp_fu_908_p3);
    line_buffer_0_V_V_fifo_U = new fifo_w8_d480_A("line_buffer_0_V_V_fifo_U");
    line_buffer_0_V_V_fifo_U->clk(ap_clk);
    line_buffer_0_V_V_fifo_U->reset(ap_rst);
    line_buffer_0_V_V_fifo_U->if_read_ce(ap_var_for_const0);
    line_buffer_0_V_V_fifo_U->if_write_ce(ap_var_for_const0);
    line_buffer_0_V_V_fifo_U->if_din(line_buffer_0_V_V_din);
    line_buffer_0_V_V_fifo_U->if_full_n(line_buffer_0_V_V_full_n);
    line_buffer_0_V_V_fifo_U->if_write(line_buffer_0_V_V_write);
    line_buffer_0_V_V_fifo_U->if_dout(line_buffer_0_V_V_dout);
    line_buffer_0_V_V_fifo_U->if_empty_n(line_buffer_0_V_V_empty_n);
    line_buffer_0_V_V_fifo_U->if_read(line_buffer_0_V_V_read);
    line_buffer_1_V_V_fifo_U = new fifo_w8_d480_A("line_buffer_1_V_V_fifo_U");
    line_buffer_1_V_V_fifo_U->clk(ap_clk);
    line_buffer_1_V_V_fifo_U->reset(ap_rst);
    line_buffer_1_V_V_fifo_U->if_read_ce(ap_var_for_const0);
    line_buffer_1_V_V_fifo_U->if_write_ce(ap_var_for_const0);
    line_buffer_1_V_V_fifo_U->if_din(line_buffer_1_V_V_din);
    line_buffer_1_V_V_fifo_U->if_full_n(line_buffer_1_V_V_full_n);
    line_buffer_1_V_V_fifo_U->if_write(line_buffer_1_V_V_write);
    line_buffer_1_V_V_fifo_U->if_dout(line_buffer_1_V_V_dout);
    line_buffer_1_V_V_fifo_U->if_empty_n(line_buffer_1_V_V_empty_n);
    line_buffer_1_V_V_fifo_U->if_read(line_buffer_1_V_V_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state11);
    sensitive << ( line_buffer_0_V_V_full_n );
    sensitive << ( line_buffer_1_V_V_full_n );
    sensitive << ( ap_predicate_op178_write_state11 );
    sensitive << ( ap_predicate_op180_write_state11 );

    SC_METHOD(thread_ap_block_state12);
    sensitive << ( exitcond8_fu_754_p2 );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( line_buffer_0_V_V_full_n );
    sensitive << ( ap_predicate_op67_write_state3 );
    sensitive << ( line_buffer_1_V_V_full_n );
    sensitive << ( ap_predicate_op69_write_state3 );

    SC_METHOD(thread_ap_block_state7);
    sensitive << ( exitcond6_fu_560_p2 );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_ap_block_state9);
    sensitive << ( line_buffer_0_V_V_empty_n );
    sensitive << ( ap_predicate_op158_read_state9 );
    sensitive << ( line_buffer_1_V_V_empty_n );
    sensitive << ( ap_predicate_op160_read_state9 );

    SC_METHOD(thread_ap_condition_282);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( line_buffer_0_V_V_empty_n );
    sensitive << ( exitcond9_fu_676_p2 );
    sensitive << ( tmp_10_fu_711_p2 );
    sensitive << ( ap_predicate_op158_read_state9 );
    sensitive << ( line_buffer_1_V_V_empty_n );
    sensitive << ( ap_predicate_op160_read_state9 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond4_fu_539_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_predicate_op158_read_state9);
    sensitive << ( exitcond9_fu_676_p2 );
    sensitive << ( tmp_10_fu_711_p2 );
    sensitive << ( tmp_20_fu_717_p1 );

    SC_METHOD(thread_ap_predicate_op160_read_state9);
    sensitive << ( exitcond9_fu_676_p2 );
    sensitive << ( tmp_10_fu_711_p2 );
    sensitive << ( tmp_20_fu_717_p1 );

    SC_METHOD(thread_ap_predicate_op178_write_state11);
    sensitive << ( tmp_10_reg_1050 );
    sensitive << ( tmp_20_reg_1054 );

    SC_METHOD(thread_ap_predicate_op180_write_state11);
    sensitive << ( tmp_10_reg_1050 );
    sensitive << ( tmp_20_reg_1054 );

    SC_METHOD(thread_ap_predicate_op67_write_state3);
    sensitive << ( tmp_reg_941 );
    sensitive << ( exitcond3_fu_467_p2 );

    SC_METHOD(thread_ap_predicate_op69_write_state3);
    sensitive << ( tmp_reg_941 );
    sensitive << ( exitcond3_fu_467_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond4_fu_539_p2 );

    SC_METHOD(thread_col_1_fu_566_p2);
    sensitive << ( col_reg_362 );

    SC_METHOD(thread_conv_window_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( conv_window_V_addr_2_reg_1027 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond9_fu_676_p2 );
    sensitive << ( tmp_10_fu_711_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_22_cast_fu_534_p1 );
    sensitive << ( tmp_29_cast_fu_706_p1 );
    sensitive << ( tmp_32_cast_fu_741_p1 );
    sensitive << ( tmp_28_cast_fu_746_p1 );
    sensitive << ( tmp_30_cast_fu_877_p1 );

    SC_METHOD(thread_conv_window_V_ce0);
    sensitive << ( line_buffer_0_V_V_full_n );
    sensitive << ( line_buffer_1_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( line_buffer_0_V_V_empty_n );
    sensitive << ( exitcond9_fu_676_p2 );
    sensitive << ( tmp_10_fu_711_p2 );
    sensitive << ( ap_predicate_op158_read_state9 );
    sensitive << ( line_buffer_1_V_V_empty_n );
    sensitive << ( ap_predicate_op160_read_state9 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_predicate_op178_write_state11 );
    sensitive << ( ap_predicate_op180_write_state11 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_conv_window_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( pixel_gray_V_reg_1006 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( conv_window_V_q0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_V_11_reg_397 );

    SC_METHOD(thread_conv_window_V_we0);
    sensitive << ( line_buffer_0_V_V_full_n );
    sensitive << ( line_buffer_1_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond7_fu_631_p2 );
    sensitive << ( tmp_10_reg_1050 );
    sensitive << ( exitcond5_fu_513_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_predicate_op178_write_state11 );
    sensitive << ( ap_predicate_op180_write_state11 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_exitcond1_fu_451_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_307 );

    SC_METHOD(thread_exitcond2_fu_479_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i5_reg_329 );

    SC_METHOD(thread_exitcond3_fu_467_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( line_buffer_0_V_V_full_n );
    sensitive << ( ap_predicate_op67_write_state3 );
    sensitive << ( line_buffer_1_V_V_full_n );
    sensitive << ( ap_predicate_op69_write_state3 );
    sensitive << ( j_reg_318 );

    SC_METHOD(thread_exitcond4_fu_539_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( row_reg_351 );

    SC_METHOD(thread_exitcond5_fu_513_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j6_reg_340 );

    SC_METHOD(thread_exitcond6_fu_560_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond6_fu_560_p2 );
    sensitive << ( in_V_id_V0_status );
    sensitive << ( col_reg_362 );

    SC_METHOD(thread_exitcond7_fu_631_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i7_reg_374 );

    SC_METHOD(thread_exitcond8_fu_754_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( i9_reg_417 );

    SC_METHOD(thread_exitcond9_fu_676_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( line_buffer_0_V_V_empty_n );
    sensitive << ( ap_predicate_op158_read_state9 );
    sensitive << ( line_buffer_1_V_V_empty_n );
    sensitive << ( ap_predicate_op160_read_state9 );
    sensitive << ( j8_reg_386 );

    SC_METHOD(thread_exitcond_fu_860_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( j4_reg_440 );

    SC_METHOD(thread_grp_fu_899_p0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond6_fu_560_p2 );
    sensitive << ( grp_fu_899_p00 );

    SC_METHOD(thread_grp_fu_899_p00);
    sensitive << ( tmp_3_fu_610_p1 );

    SC_METHOD(thread_grp_fu_899_p1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond6_fu_560_p2 );
    sensitive << ( grp_fu_899_p10 );

    SC_METHOD(thread_grp_fu_899_p10);
    sensitive << ( ret_V_fu_604_p2 );

    SC_METHOD(thread_grp_fu_899_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond6_fu_560_p2 );

    SC_METHOD(thread_grp_fu_908_p1);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_fu_908_p10 );

    SC_METHOD(thread_grp_fu_908_p10);
    sensitive << ( conv_window_V_q0 );

    SC_METHOD(thread_i9_cast5_fu_750_p1);
    sensitive << ( i9_reg_417 );

    SC_METHOD(thread_i_1_fu_457_p2);
    sensitive << ( i_reg_307 );

    SC_METHOD(thread_i_2_fu_485_p2);
    sensitive << ( i5_reg_329 );

    SC_METHOD(thread_i_3_fu_760_p2);
    sensitive << ( i9_reg_417 );

    SC_METHOD(thread_i_4_fu_637_p2);
    sensitive << ( i7_reg_374 );

    SC_METHOD(thread_icmp_fu_794_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( tmp_11_fu_784_p4 );

    SC_METHOD(thread_in_V_data_V_blk_n);
    sensitive << ( in_V_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond6_fu_560_p2 );

    SC_METHOD(thread_in_V_data_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_V_dest_V_blk_n);
    sensitive << ( in_V_dest_V_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond6_fu_560_p2 );

    SC_METHOD(thread_in_V_dest_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_V_id_V0_status);
    sensitive << ( in_V_data_V_empty_n );
    sensitive << ( in_V_keep_V_empty_n );
    sensitive << ( in_V_strb_V_empty_n );
    sensitive << ( in_V_user_V_empty_n );
    sensitive << ( in_V_last_V_empty_n );
    sensitive << ( in_V_id_V_empty_n );
    sensitive << ( in_V_dest_V_empty_n );

    SC_METHOD(thread_in_V_id_V0_update);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond6_fu_560_p2 );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_in_V_id_V_blk_n);
    sensitive << ( in_V_id_V_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond6_fu_560_p2 );

    SC_METHOD(thread_in_V_id_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_V_keep_V_blk_n);
    sensitive << ( in_V_keep_V_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond6_fu_560_p2 );

    SC_METHOD(thread_in_V_keep_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_V_last_V_blk_n);
    sensitive << ( in_V_last_V_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond6_fu_560_p2 );

    SC_METHOD(thread_in_V_last_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_V_strb_V_blk_n);
    sensitive << ( in_V_strb_V_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond6_fu_560_p2 );

    SC_METHOD(thread_in_V_strb_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_V_user_V_blk_n);
    sensitive << ( in_V_user_V_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond6_fu_560_p2 );

    SC_METHOD(thread_in_V_user_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_j4_cast2_fu_856_p1);
    sensitive << ( j4_reg_440 );

    SC_METHOD(thread_j_1_fu_473_p2);
    sensitive << ( j_reg_318 );

    SC_METHOD(thread_j_2_fu_519_p2);
    sensitive << ( j6_reg_340 );

    SC_METHOD(thread_j_3_fu_682_p2);
    sensitive << ( j8_reg_386 );

    SC_METHOD(thread_j_4_fu_866_p2);
    sensitive << ( j4_reg_440 );

    SC_METHOD(thread_kernel_address0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_17_fu_886_p1 );

    SC_METHOD(thread_kernel_ce0);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_lhs_V_cast_fu_596_p1);
    sensitive << ( p_Result_s_fu_576_p4 );

    SC_METHOD(thread_line_buffer_0_V_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( line_buffer_0_V_V_full_n );
    sensitive << ( ap_predicate_op67_write_state3 );
    sensitive << ( line_buffer_1_V_V_full_n );
    sensitive << ( ap_predicate_op69_write_state3 );
    sensitive << ( conv_window_V_q0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_predicate_op178_write_state11 );
    sensitive << ( ap_predicate_op180_write_state11 );

    SC_METHOD(thread_line_buffer_0_V_V_read);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( line_buffer_0_V_V_empty_n );
    sensitive << ( ap_predicate_op158_read_state9 );
    sensitive << ( line_buffer_1_V_V_empty_n );
    sensitive << ( ap_predicate_op160_read_state9 );

    SC_METHOD(thread_line_buffer_0_V_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( line_buffer_0_V_V_full_n );
    sensitive << ( ap_predicate_op67_write_state3 );
    sensitive << ( line_buffer_1_V_V_full_n );
    sensitive << ( ap_predicate_op69_write_state3 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_predicate_op178_write_state11 );
    sensitive << ( ap_predicate_op180_write_state11 );

    SC_METHOD(thread_line_buffer_1_V_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( line_buffer_0_V_V_full_n );
    sensitive << ( ap_predicate_op67_write_state3 );
    sensitive << ( line_buffer_1_V_V_full_n );
    sensitive << ( ap_predicate_op69_write_state3 );
    sensitive << ( conv_window_V_q0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_predicate_op178_write_state11 );
    sensitive << ( ap_predicate_op180_write_state11 );

    SC_METHOD(thread_line_buffer_1_V_V_read);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( line_buffer_0_V_V_empty_n );
    sensitive << ( ap_predicate_op158_read_state9 );
    sensitive << ( line_buffer_1_V_V_empty_n );
    sensitive << ( ap_predicate_op160_read_state9 );

    SC_METHOD(thread_line_buffer_1_V_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( line_buffer_0_V_V_full_n );
    sensitive << ( ap_predicate_op67_write_state3 );
    sensitive << ( line_buffer_1_V_V_full_n );
    sensitive << ( ap_predicate_op69_write_state3 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_predicate_op178_write_state11 );
    sensitive << ( ap_predicate_op180_write_state11 );

    SC_METHOD(thread_out_V_data_V_blk_n);
    sensitive << ( out_V_data_V_full_n );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );

    SC_METHOD(thread_out_V_data_V_din);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( tmp_4_fu_820_p3 );

    SC_METHOD(thread_out_V_data_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_dest_V_blk_n);
    sensitive << ( out_V_dest_V_full_n );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );

    SC_METHOD(thread_out_V_dest_V_din);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_out_V_dest_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_id_V1_status);
    sensitive << ( out_V_data_V_full_n );
    sensitive << ( out_V_keep_V_full_n );
    sensitive << ( out_V_strb_V_full_n );
    sensitive << ( out_V_user_V_full_n );
    sensitive << ( out_V_last_V_full_n );
    sensitive << ( out_V_id_V_full_n );
    sensitive << ( out_V_dest_V_full_n );

    SC_METHOD(thread_out_V_id_V1_update);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_out_V_id_V_blk_n);
    sensitive << ( out_V_id_V_full_n );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );

    SC_METHOD(thread_out_V_id_V_din);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_out_V_id_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_keep_V_blk_n);
    sensitive << ( out_V_keep_V_full_n );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );

    SC_METHOD(thread_out_V_keep_V_din);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_out_V_keep_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_last_V_blk_n);
    sensitive << ( out_V_last_V_full_n );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );

    SC_METHOD(thread_out_V_last_V_din);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );
    sensitive << ( tmp_5_reg_988 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( tmp_6_fu_839_p2 );

    SC_METHOD(thread_out_V_last_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_strb_V_blk_n);
    sensitive << ( out_V_strb_V_full_n );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );

    SC_METHOD(thread_out_V_strb_V_din);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_out_V_strb_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_user_V_blk_n);
    sensitive << ( out_V_user_V_full_n );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );

    SC_METHOD(thread_out_V_user_V_din);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_out_V_user_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_p_0340_2_41_fu_800_p3);
    sensitive << ( p_0340_2_reg_407 );
    sensitive << ( icmp_fu_794_p2 );

    SC_METHOD(thread_p_Result_1_fu_586_p4);
    sensitive << ( in_V_data_V_dout );

    SC_METHOD(thread_p_Result_s_fu_576_p4);
    sensitive << ( in_V_data_V_dout );

    SC_METHOD(thread_p_load_reg_993);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond6_fu_560_p2 );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_p_shl1_cast_fu_503_p1);
    sensitive << ( tmp_s_fu_495_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_655_p1);
    sensitive << ( tmp_7_fu_647_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_731_p1);
    sensitive << ( tmp_22_fu_724_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_774_p1);
    sensitive << ( tmp_14_fu_766_p3 );

    SC_METHOD(thread_ret_V_fu_604_p2);
    sensitive << ( lhs_V_cast_fu_596_p1 );
    sensitive << ( rhs_V_cast_fu_600_p1 );

    SC_METHOD(thread_rhs_V_cast_fu_600_p1);
    sensitive << ( p_Result_1_fu_586_p4 );

    SC_METHOD(thread_row_1_fu_545_p2);
    sensitive << ( row_reg_351 );

    SC_METHOD(thread_tmp_10_fu_711_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( line_buffer_0_V_V_empty_n );
    sensitive << ( exitcond9_fu_676_p2 );
    sensitive << ( ap_predicate_op158_read_state9 );
    sensitive << ( line_buffer_1_V_V_empty_n );
    sensitive << ( ap_predicate_op160_read_state9 );
    sensitive << ( i7_reg_374 );

    SC_METHOD(thread_tmp_11_cast_fu_688_p1);
    sensitive << ( j8_reg_386 );

    SC_METHOD(thread_tmp_11_fu_784_p4);
    sensitive << ( p_0340_2_reg_407 );

    SC_METHOD(thread_tmp_12_cast_fu_697_p1);
    sensitive << ( j_3_fu_682_p2 );

    SC_METHOD(thread_tmp_12_fu_808_p3);
    sensitive << ( p_0340_2_41_fu_800_p3 );

    SC_METHOD(thread_tmp_13_fu_816_p1);
    sensitive << ( p_0340_2_41_fu_800_p3 );

    SC_METHOD(thread_tmp_14_cast_fu_721_p1);
    sensitive << ( i_4_reg_1014 );

    SC_METHOD(thread_tmp_14_fu_766_p3);
    sensitive << ( i9_reg_417 );

    SC_METHOD(thread_tmp_15_fu_778_p2);
    sensitive << ( p_shl4_cast_fu_774_p1 );
    sensitive << ( i9_cast5_fu_750_p1 );

    SC_METHOD(thread_tmp_16_cast_fu_882_p1);
    sensitive << ( tmp_21_fu_872_p2 );

    SC_METHOD(thread_tmp_16_fu_692_p2);
    sensitive << ( tmp_8_reg_1021 );
    sensitive << ( tmp_11_cast_fu_688_p1 );

    SC_METHOD(thread_tmp_17_fu_886_p1);
    sensitive << ( tmp_16_cast_fu_882_p1 );

    SC_METHOD(thread_tmp_18_fu_701_p2);
    sensitive << ( tmp_8_reg_1021 );
    sensitive << ( tmp_12_cast_fu_697_p1 );

    SC_METHOD(thread_tmp_1_cast_fu_491_p1);
    sensitive << ( i5_reg_329 );

    SC_METHOD(thread_tmp_1_fu_507_p2);
    sensitive << ( p_shl1_cast_fu_503_p1 );
    sensitive << ( tmp_1_cast_fu_491_p1 );

    SC_METHOD(thread_tmp_20_fu_717_p1);
    sensitive << ( i7_reg_374 );

    SC_METHOD(thread_tmp_21_fu_872_p2);
    sensitive << ( tmp_15_reg_1081 );
    sensitive << ( j4_cast2_fu_856_p1 );

    SC_METHOD(thread_tmp_22_cast_fu_534_p1);
    sensitive << ( tmp_2_fu_529_p2 );

    SC_METHOD(thread_tmp_22_fu_724_p3);
    sensitive << ( i_4_reg_1014 );

    SC_METHOD(thread_tmp_23_fu_735_p2);
    sensitive << ( p_shl3_cast_fu_731_p1 );
    sensitive << ( tmp_14_cast_fu_721_p1 );

    SC_METHOD(thread_tmp_25_cast_fu_671_p1);
    sensitive << ( tmp_9_fu_665_p2 );

    SC_METHOD(thread_tmp_28_cast_fu_746_p1);
    sensitive << ( tmp_16_reg_1040 );

    SC_METHOD(thread_tmp_29_cast_fu_706_p1);
    sensitive << ( tmp_18_fu_701_p2 );

    SC_METHOD(thread_tmp_2_fu_529_p2);
    sensitive << ( tmp_1_reg_961 );
    sensitive << ( tmp_7_cast_fu_525_p1 );

    SC_METHOD(thread_tmp_30_cast_fu_877_p1);
    sensitive << ( tmp_21_fu_872_p2 );

    SC_METHOD(thread_tmp_32_cast_fu_741_p1);
    sensitive << ( tmp_23_fu_735_p2 );

    SC_METHOD(thread_tmp_3_fu_610_p1);
    sensitive << ( in_V_data_V_dout );

    SC_METHOD(thread_tmp_4_fu_820_p3);
    sensitive << ( tmp_12_fu_808_p3 );
    sensitive << ( tmp_13_fu_816_p1 );

    SC_METHOD(thread_tmp_5_fu_551_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond4_fu_539_p2 );
    sensitive << ( row_reg_351 );

    SC_METHOD(thread_tmp_6_fu_839_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( col_reg_362 );

    SC_METHOD(thread_tmp_7_cast_fu_525_p1);
    sensitive << ( j6_reg_340 );

    SC_METHOD(thread_tmp_7_fu_647_p3);
    sensitive << ( i7_reg_374 );

    SC_METHOD(thread_tmp_8_fu_659_p2);
    sensitive << ( p_shl2_cast_fu_655_p1 );
    sensitive << ( tmp_cast_fu_643_p1 );

    SC_METHOD(thread_tmp_9_fu_665_p2);
    sensitive << ( tmp_8_fu_659_p2 );

    SC_METHOD(thread_tmp_cast_fu_643_p1);
    sensitive << ( i7_reg_374 );

    SC_METHOD(thread_tmp_fu_463_p1);
    sensitive << ( i_reg_307 );

    SC_METHOD(thread_tmp_s_fu_495_p3);
    sensitive << ( i5_reg_329 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond6_fu_560_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond8_fu_754_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_451_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( line_buffer_0_V_V_full_n );
    sensitive << ( exitcond3_fu_467_p2 );
    sensitive << ( ap_predicate_op67_write_state3 );
    sensitive << ( line_buffer_1_V_V_full_n );
    sensitive << ( ap_predicate_op69_write_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_479_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond4_fu_539_p2 );
    sensitive << ( in_V_id_V0_status );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond7_fu_631_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( line_buffer_0_V_V_empty_n );
    sensitive << ( exitcond9_fu_676_p2 );
    sensitive << ( ap_predicate_op158_read_state9 );
    sensitive << ( line_buffer_1_V_V_empty_n );
    sensitive << ( ap_predicate_op160_read_state9 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_860_p2 );
    sensitive << ( exitcond5_fu_513_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_predicate_op178_write_state11 );
    sensitive << ( ap_predicate_op180_write_state11 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "img_filter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V_data_V_dout, "(port)in_V_data_V_dout");
    sc_trace(mVcdFile, in_V_data_V_empty_n, "(port)in_V_data_V_empty_n");
    sc_trace(mVcdFile, in_V_data_V_read, "(port)in_V_data_V_read");
    sc_trace(mVcdFile, in_V_keep_V_dout, "(port)in_V_keep_V_dout");
    sc_trace(mVcdFile, in_V_keep_V_empty_n, "(port)in_V_keep_V_empty_n");
    sc_trace(mVcdFile, in_V_keep_V_read, "(port)in_V_keep_V_read");
    sc_trace(mVcdFile, in_V_strb_V_dout, "(port)in_V_strb_V_dout");
    sc_trace(mVcdFile, in_V_strb_V_empty_n, "(port)in_V_strb_V_empty_n");
    sc_trace(mVcdFile, in_V_strb_V_read, "(port)in_V_strb_V_read");
    sc_trace(mVcdFile, in_V_user_V_dout, "(port)in_V_user_V_dout");
    sc_trace(mVcdFile, in_V_user_V_empty_n, "(port)in_V_user_V_empty_n");
    sc_trace(mVcdFile, in_V_user_V_read, "(port)in_V_user_V_read");
    sc_trace(mVcdFile, in_V_last_V_dout, "(port)in_V_last_V_dout");
    sc_trace(mVcdFile, in_V_last_V_empty_n, "(port)in_V_last_V_empty_n");
    sc_trace(mVcdFile, in_V_last_V_read, "(port)in_V_last_V_read");
    sc_trace(mVcdFile, in_V_id_V_dout, "(port)in_V_id_V_dout");
    sc_trace(mVcdFile, in_V_id_V_empty_n, "(port)in_V_id_V_empty_n");
    sc_trace(mVcdFile, in_V_id_V_read, "(port)in_V_id_V_read");
    sc_trace(mVcdFile, in_V_dest_V_dout, "(port)in_V_dest_V_dout");
    sc_trace(mVcdFile, in_V_dest_V_empty_n, "(port)in_V_dest_V_empty_n");
    sc_trace(mVcdFile, in_V_dest_V_read, "(port)in_V_dest_V_read");
    sc_trace(mVcdFile, out_V_data_V_din, "(port)out_V_data_V_din");
    sc_trace(mVcdFile, out_V_data_V_full_n, "(port)out_V_data_V_full_n");
    sc_trace(mVcdFile, out_V_data_V_write, "(port)out_V_data_V_write");
    sc_trace(mVcdFile, out_V_keep_V_din, "(port)out_V_keep_V_din");
    sc_trace(mVcdFile, out_V_keep_V_full_n, "(port)out_V_keep_V_full_n");
    sc_trace(mVcdFile, out_V_keep_V_write, "(port)out_V_keep_V_write");
    sc_trace(mVcdFile, out_V_strb_V_din, "(port)out_V_strb_V_din");
    sc_trace(mVcdFile, out_V_strb_V_full_n, "(port)out_V_strb_V_full_n");
    sc_trace(mVcdFile, out_V_strb_V_write, "(port)out_V_strb_V_write");
    sc_trace(mVcdFile, out_V_user_V_din, "(port)out_V_user_V_din");
    sc_trace(mVcdFile, out_V_user_V_full_n, "(port)out_V_user_V_full_n");
    sc_trace(mVcdFile, out_V_user_V_write, "(port)out_V_user_V_write");
    sc_trace(mVcdFile, out_V_last_V_din, "(port)out_V_last_V_din");
    sc_trace(mVcdFile, out_V_last_V_full_n, "(port)out_V_last_V_full_n");
    sc_trace(mVcdFile, out_V_last_V_write, "(port)out_V_last_V_write");
    sc_trace(mVcdFile, out_V_id_V_din, "(port)out_V_id_V_din");
    sc_trace(mVcdFile, out_V_id_V_full_n, "(port)out_V_id_V_full_n");
    sc_trace(mVcdFile, out_V_id_V_write, "(port)out_V_id_V_write");
    sc_trace(mVcdFile, out_V_dest_V_din, "(port)out_V_dest_V_din");
    sc_trace(mVcdFile, out_V_dest_V_full_n, "(port)out_V_dest_V_full_n");
    sc_trace(mVcdFile, out_V_dest_V_write, "(port)out_V_dest_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, kernel_address0, "kernel_address0");
    sc_trace(mVcdFile, kernel_ce0, "kernel_ce0");
    sc_trace(mVcdFile, kernel_q0, "kernel_q0");
    sc_trace(mVcdFile, in_V_data_V_blk_n, "in_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, exitcond6_fu_560_p2, "exitcond6_fu_560_p2");
    sc_trace(mVcdFile, in_V_keep_V_blk_n, "in_V_keep_V_blk_n");
    sc_trace(mVcdFile, in_V_strb_V_blk_n, "in_V_strb_V_blk_n");
    sc_trace(mVcdFile, in_V_user_V_blk_n, "in_V_user_V_blk_n");
    sc_trace(mVcdFile, in_V_last_V_blk_n, "in_V_last_V_blk_n");
    sc_trace(mVcdFile, in_V_id_V_blk_n, "in_V_id_V_blk_n");
    sc_trace(mVcdFile, in_V_dest_V_blk_n, "in_V_dest_V_blk_n");
    sc_trace(mVcdFile, out_V_data_V_blk_n, "out_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, exitcond8_fu_754_p2, "exitcond8_fu_754_p2");
    sc_trace(mVcdFile, out_V_keep_V_blk_n, "out_V_keep_V_blk_n");
    sc_trace(mVcdFile, out_V_strb_V_blk_n, "out_V_strb_V_blk_n");
    sc_trace(mVcdFile, out_V_user_V_blk_n, "out_V_user_V_blk_n");
    sc_trace(mVcdFile, out_V_last_V_blk_n, "out_V_last_V_blk_n");
    sc_trace(mVcdFile, out_V_id_V_blk_n, "out_V_id_V_blk_n");
    sc_trace(mVcdFile, out_V_dest_V_blk_n, "out_V_dest_V_blk_n");
    sc_trace(mVcdFile, i_1_fu_457_p2, "i_1_fu_457_p2");
    sc_trace(mVcdFile, i_1_reg_936, "i_1_reg_936");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_463_p1, "tmp_fu_463_p1");
    sc_trace(mVcdFile, tmp_reg_941, "tmp_reg_941");
    sc_trace(mVcdFile, exitcond1_fu_451_p2, "exitcond1_fu_451_p2");
    sc_trace(mVcdFile, j_1_fu_473_p2, "j_1_fu_473_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, line_buffer_0_V_V_din, "line_buffer_0_V_V_din");
    sc_trace(mVcdFile, line_buffer_0_V_V_full_n, "line_buffer_0_V_V_full_n");
    sc_trace(mVcdFile, line_buffer_0_V_V_write, "line_buffer_0_V_V_write");
    sc_trace(mVcdFile, exitcond3_fu_467_p2, "exitcond3_fu_467_p2");
    sc_trace(mVcdFile, ap_predicate_op67_write_state3, "ap_predicate_op67_write_state3");
    sc_trace(mVcdFile, line_buffer_1_V_V_din, "line_buffer_1_V_V_din");
    sc_trace(mVcdFile, line_buffer_1_V_V_full_n, "line_buffer_1_V_V_full_n");
    sc_trace(mVcdFile, line_buffer_1_V_V_write, "line_buffer_1_V_V_write");
    sc_trace(mVcdFile, ap_predicate_op69_write_state3, "ap_predicate_op69_write_state3");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, i_2_fu_485_p2, "i_2_fu_485_p2");
    sc_trace(mVcdFile, i_2_reg_956, "i_2_reg_956");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_1_fu_507_p2, "tmp_1_fu_507_p2");
    sc_trace(mVcdFile, tmp_1_reg_961, "tmp_1_reg_961");
    sc_trace(mVcdFile, exitcond2_fu_479_p2, "exitcond2_fu_479_p2");
    sc_trace(mVcdFile, j_2_fu_519_p2, "j_2_fu_519_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, row_1_fu_545_p2, "row_1_fu_545_p2");
    sc_trace(mVcdFile, row_1_reg_983, "row_1_reg_983");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_5_fu_551_p2, "tmp_5_fu_551_p2");
    sc_trace(mVcdFile, tmp_5_reg_988, "tmp_5_reg_988");
    sc_trace(mVcdFile, exitcond4_fu_539_p2, "exitcond4_fu_539_p2");
    sc_trace(mVcdFile, p_load_reg_993, "p_load_reg_993");
    sc_trace(mVcdFile, in_V_id_V0_status, "in_V_id_V0_status");
    sc_trace(mVcdFile, ap_block_state7, "ap_block_state7");
    sc_trace(mVcdFile, col_1_fu_566_p2, "col_1_fu_566_p2");
    sc_trace(mVcdFile, col_1_reg_1001, "col_1_reg_1001");
    sc_trace(mVcdFile, pixel_gray_V_reg_1006, "pixel_gray_V_reg_1006");
    sc_trace(mVcdFile, i_4_fu_637_p2, "i_4_fu_637_p2");
    sc_trace(mVcdFile, i_4_reg_1014, "i_4_reg_1014");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_8_fu_659_p2, "tmp_8_fu_659_p2");
    sc_trace(mVcdFile, tmp_8_reg_1021, "tmp_8_reg_1021");
    sc_trace(mVcdFile, exitcond7_fu_631_p2, "exitcond7_fu_631_p2");
    sc_trace(mVcdFile, conv_window_V_addr_2_reg_1027, "conv_window_V_addr_2_reg_1027");
    sc_trace(mVcdFile, j_3_fu_682_p2, "j_3_fu_682_p2");
    sc_trace(mVcdFile, j_3_reg_1035, "j_3_reg_1035");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, line_buffer_0_V_V_dout, "line_buffer_0_V_V_dout");
    sc_trace(mVcdFile, line_buffer_0_V_V_empty_n, "line_buffer_0_V_V_empty_n");
    sc_trace(mVcdFile, line_buffer_0_V_V_read, "line_buffer_0_V_V_read");
    sc_trace(mVcdFile, exitcond9_fu_676_p2, "exitcond9_fu_676_p2");
    sc_trace(mVcdFile, tmp_10_fu_711_p2, "tmp_10_fu_711_p2");
    sc_trace(mVcdFile, tmp_20_fu_717_p1, "tmp_20_fu_717_p1");
    sc_trace(mVcdFile, ap_predicate_op158_read_state9, "ap_predicate_op158_read_state9");
    sc_trace(mVcdFile, line_buffer_1_V_V_dout, "line_buffer_1_V_V_dout");
    sc_trace(mVcdFile, line_buffer_1_V_V_empty_n, "line_buffer_1_V_V_empty_n");
    sc_trace(mVcdFile, line_buffer_1_V_V_read, "line_buffer_1_V_V_read");
    sc_trace(mVcdFile, ap_predicate_op160_read_state9, "ap_predicate_op160_read_state9");
    sc_trace(mVcdFile, ap_block_state9, "ap_block_state9");
    sc_trace(mVcdFile, tmp_16_fu_692_p2, "tmp_16_fu_692_p2");
    sc_trace(mVcdFile, tmp_16_reg_1040, "tmp_16_reg_1040");
    sc_trace(mVcdFile, tmp_10_reg_1050, "tmp_10_reg_1050");
    sc_trace(mVcdFile, tmp_20_reg_1054, "tmp_20_reg_1054");
    sc_trace(mVcdFile, i_3_fu_760_p2, "i_3_fu_760_p2");
    sc_trace(mVcdFile, i_3_reg_1076, "i_3_reg_1076");
    sc_trace(mVcdFile, out_V_id_V1_status, "out_V_id_V1_status");
    sc_trace(mVcdFile, ap_block_state12, "ap_block_state12");
    sc_trace(mVcdFile, tmp_15_fu_778_p2, "tmp_15_fu_778_p2");
    sc_trace(mVcdFile, tmp_15_reg_1081, "tmp_15_reg_1081");
    sc_trace(mVcdFile, j_4_fu_866_p2, "j_4_fu_866_p2");
    sc_trace(mVcdFile, j_4_reg_1089, "j_4_reg_1089");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, exitcond_fu_860_p2, "exitcond_fu_860_p2");
    sc_trace(mVcdFile, grp_fu_908_p3, "grp_fu_908_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, conv_window_V_address0, "conv_window_V_address0");
    sc_trace(mVcdFile, conv_window_V_ce0, "conv_window_V_ce0");
    sc_trace(mVcdFile, conv_window_V_we0, "conv_window_V_we0");
    sc_trace(mVcdFile, conv_window_V_d0, "conv_window_V_d0");
    sc_trace(mVcdFile, conv_window_V_q0, "conv_window_V_q0");
    sc_trace(mVcdFile, i_reg_307, "i_reg_307");
    sc_trace(mVcdFile, j_reg_318, "j_reg_318");
    sc_trace(mVcdFile, i5_reg_329, "i5_reg_329");
    sc_trace(mVcdFile, exitcond5_fu_513_p2, "exitcond5_fu_513_p2");
    sc_trace(mVcdFile, j6_reg_340, "j6_reg_340");
    sc_trace(mVcdFile, row_reg_351, "row_reg_351");
    sc_trace(mVcdFile, col_reg_362, "col_reg_362");
    sc_trace(mVcdFile, i7_reg_374, "i7_reg_374");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_predicate_op178_write_state11, "ap_predicate_op178_write_state11");
    sc_trace(mVcdFile, ap_predicate_op180_write_state11, "ap_predicate_op180_write_state11");
    sc_trace(mVcdFile, ap_block_state11, "ap_block_state11");
    sc_trace(mVcdFile, j8_reg_386, "j8_reg_386");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_V_11_reg_397, "tmp_V_11_reg_397");
    sc_trace(mVcdFile, p_0340_2_reg_407, "p_0340_2_reg_407");
    sc_trace(mVcdFile, i9_reg_417, "i9_reg_417");
    sc_trace(mVcdFile, p_0340_3_reg_428, "p_0340_3_reg_428");
    sc_trace(mVcdFile, j4_reg_440, "j4_reg_440");
    sc_trace(mVcdFile, tmp_22_cast_fu_534_p1, "tmp_22_cast_fu_534_p1");
    sc_trace(mVcdFile, tmp_25_cast_fu_671_p1, "tmp_25_cast_fu_671_p1");
    sc_trace(mVcdFile, tmp_29_cast_fu_706_p1, "tmp_29_cast_fu_706_p1");
    sc_trace(mVcdFile, tmp_32_cast_fu_741_p1, "tmp_32_cast_fu_741_p1");
    sc_trace(mVcdFile, tmp_28_cast_fu_746_p1, "tmp_28_cast_fu_746_p1");
    sc_trace(mVcdFile, tmp_30_cast_fu_877_p1, "tmp_30_cast_fu_877_p1");
    sc_trace(mVcdFile, tmp_17_fu_886_p1, "tmp_17_fu_886_p1");
    sc_trace(mVcdFile, in_V_id_V0_update, "in_V_id_V0_update");
    sc_trace(mVcdFile, out_V_id_V1_update, "out_V_id_V1_update");
    sc_trace(mVcdFile, tmp_s_fu_495_p3, "tmp_s_fu_495_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_503_p1, "p_shl1_cast_fu_503_p1");
    sc_trace(mVcdFile, tmp_1_cast_fu_491_p1, "tmp_1_cast_fu_491_p1");
    sc_trace(mVcdFile, tmp_7_cast_fu_525_p1, "tmp_7_cast_fu_525_p1");
    sc_trace(mVcdFile, tmp_2_fu_529_p2, "tmp_2_fu_529_p2");
    sc_trace(mVcdFile, p_Result_s_fu_576_p4, "p_Result_s_fu_576_p4");
    sc_trace(mVcdFile, p_Result_1_fu_586_p4, "p_Result_1_fu_586_p4");
    sc_trace(mVcdFile, lhs_V_cast_fu_596_p1, "lhs_V_cast_fu_596_p1");
    sc_trace(mVcdFile, rhs_V_cast_fu_600_p1, "rhs_V_cast_fu_600_p1");
    sc_trace(mVcdFile, ret_V_fu_604_p2, "ret_V_fu_604_p2");
    sc_trace(mVcdFile, tmp_3_fu_610_p1, "tmp_3_fu_610_p1");
    sc_trace(mVcdFile, grp_fu_899_p3, "grp_fu_899_p3");
    sc_trace(mVcdFile, tmp_7_fu_647_p3, "tmp_7_fu_647_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_655_p1, "p_shl2_cast_fu_655_p1");
    sc_trace(mVcdFile, tmp_cast_fu_643_p1, "tmp_cast_fu_643_p1");
    sc_trace(mVcdFile, tmp_9_fu_665_p2, "tmp_9_fu_665_p2");
    sc_trace(mVcdFile, tmp_11_cast_fu_688_p1, "tmp_11_cast_fu_688_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_697_p1, "tmp_12_cast_fu_697_p1");
    sc_trace(mVcdFile, tmp_18_fu_701_p2, "tmp_18_fu_701_p2");
    sc_trace(mVcdFile, tmp_22_fu_724_p3, "tmp_22_fu_724_p3");
    sc_trace(mVcdFile, p_shl3_cast_fu_731_p1, "p_shl3_cast_fu_731_p1");
    sc_trace(mVcdFile, tmp_14_cast_fu_721_p1, "tmp_14_cast_fu_721_p1");
    sc_trace(mVcdFile, tmp_23_fu_735_p2, "tmp_23_fu_735_p2");
    sc_trace(mVcdFile, tmp_14_fu_766_p3, "tmp_14_fu_766_p3");
    sc_trace(mVcdFile, p_shl4_cast_fu_774_p1, "p_shl4_cast_fu_774_p1");
    sc_trace(mVcdFile, i9_cast5_fu_750_p1, "i9_cast5_fu_750_p1");
    sc_trace(mVcdFile, tmp_11_fu_784_p4, "tmp_11_fu_784_p4");
    sc_trace(mVcdFile, icmp_fu_794_p2, "icmp_fu_794_p2");
    sc_trace(mVcdFile, p_0340_2_41_fu_800_p3, "p_0340_2_41_fu_800_p3");
    sc_trace(mVcdFile, tmp_12_fu_808_p3, "tmp_12_fu_808_p3");
    sc_trace(mVcdFile, tmp_13_fu_816_p1, "tmp_13_fu_816_p1");
    sc_trace(mVcdFile, tmp_4_fu_820_p3, "tmp_4_fu_820_p3");
    sc_trace(mVcdFile, tmp_6_fu_839_p2, "tmp_6_fu_839_p2");
    sc_trace(mVcdFile, j4_cast2_fu_856_p1, "j4_cast2_fu_856_p1");
    sc_trace(mVcdFile, tmp_21_fu_872_p2, "tmp_21_fu_872_p2");
    sc_trace(mVcdFile, tmp_16_cast_fu_882_p1, "tmp_16_cast_fu_882_p1");
    sc_trace(mVcdFile, grp_fu_899_p0, "grp_fu_899_p0");
    sc_trace(mVcdFile, grp_fu_899_p1, "grp_fu_899_p1");
    sc_trace(mVcdFile, grp_fu_899_p2, "grp_fu_899_p2");
    sc_trace(mVcdFile, grp_fu_908_p1, "grp_fu_908_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_899_p00, "grp_fu_899_p00");
    sc_trace(mVcdFile, grp_fu_899_p10, "grp_fu_899_p10");
    sc_trace(mVcdFile, grp_fu_908_p10, "grp_fu_908_p10");
    sc_trace(mVcdFile, ap_condition_282, "ap_condition_282");
#endif

    }
    mHdltvinHandle.open("img_filter.hdltvin.dat");
    mHdltvoutHandle.open("img_filter.hdltvout.dat");
}

img_filter::~img_filter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete kernel_U;
    delete conv_window_V_U;
    delete img_filter_am_addcud_U1;
    delete img_filter_mac_mudEe_U2;
    delete line_buffer_0_V_V_fifo_U;
    delete line_buffer_1_V_V_fifo_U;
}

void img_filter::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void img_filter::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_539_p2.read()))) {
        col_reg_362 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1) && 
                !(esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())))) {
        col_reg_362 = col_1_reg_1001.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_451_p2.read()))) {
        i5_reg_329 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_513_p2.read()))) {
        i5_reg_329 = i_2_reg_956.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op178_write_state11.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op180_write_state11.read()))))) {
        i7_reg_374 = i_4_reg_1014.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read())))) {
        i7_reg_374 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_860_p2.read()))) {
        i9_reg_417 = i_3_reg_1076.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond7_fu_631_p2.read()))) {
        i9_reg_417 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state3.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_467_p2.read()))) {
        i_reg_307 = i_1_reg_936.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_307 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         !(esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_754_p2.read()))) {
        j4_reg_440 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        j4_reg_440 = j_4_reg_1089.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_479_p2.read()))) {
        j6_reg_340 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_513_p2.read()))) {
        j6_reg_340 = j_2_fu_519_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond7_fu_631_p2.read()))) {
        j8_reg_386 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        j8_reg_386 = j_3_reg_1035.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_451_p2.read()))) {
        j_reg_318 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_467_p2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state3.read()))))) {
        j_reg_318 = j_1_fu_473_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_860_p2.read()))) {
        p_0340_2_reg_407 = p_0340_3_reg_428.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond7_fu_631_p2.read()))) {
        p_0340_2_reg_407 = p_load_reg_993.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         !(esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_754_p2.read()))) {
        p_0340_3_reg_428 = p_0340_2_reg_407.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        p_0340_3_reg_428 = grp_fu_908_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         !(esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read())) && 
         esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_1))) {
        row_reg_351 = row_1_reg_983.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_479_p2.read()))) {
        row_reg_351 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_condition_282.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_fu_717_p1.read())) {
            tmp_V_11_reg_397 = line_buffer_0_V_V_dout.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_fu_717_p1.read())) {
            tmp_V_11_reg_397 = line_buffer_1_V_V_dout.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && !(esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read())))) {
        col_1_reg_1001 = col_1_fu_566_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond7_fu_631_p2.read()))) {
        conv_window_V_addr_2_reg_1027 =  (sc_lv<4>) (tmp_25_cast_fu_671_p1.read());
        tmp_8_reg_1021 = tmp_8_fu_659_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_936 = i_1_fu_457_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_2_reg_956 = i_2_fu_485_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && !(esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())))) {
        i_3_reg_1076 = i_3_fu_760_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_4_reg_1014 = i_4_fu_637_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_read_state9.read()))))) {
        j_3_reg_1035 = j_3_fu_682_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        j_4_reg_1089 = j_4_fu_866_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read())))) {
        pixel_gray_V_reg_1006 = grp_fu_899_p3.read().range(19, 12);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        row_1_reg_983 = row_1_fu_545_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_676_p2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_read_state9.read()))))) {
        tmp_10_reg_1050 = tmp_10_fu_711_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && !(esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_754_p2.read()))) {
        tmp_15_reg_1081 = tmp_15_fu_778_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_read_state9.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_676_p2.read()))) {
        tmp_16_reg_1040 = tmp_16_fu_692_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_479_p2.read()))) {
        tmp_1_reg_961 = tmp_1_fu_507_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_676_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_711_p2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_read_state9.read()))))) {
        tmp_20_reg_1054 = tmp_20_fu_717_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_539_p2.read()))) {
        tmp_5_reg_988 = tmp_5_fu_551_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_451_p2.read()))) {
        tmp_reg_941 = tmp_fu_463_p1.read();
    }
}

void img_filter::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void img_filter::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void img_filter::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void img_filter::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void img_filter::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void img_filter::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void img_filter::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void img_filter::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void img_filter::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void img_filter::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void img_filter::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void img_filter::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void img_filter::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void img_filter::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void img_filter::thread_ap_block_state11() {
    ap_block_state11 = ((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op178_write_state11.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op180_write_state11.read())));
}

void img_filter::thread_ap_block_state12() {
    ap_block_state12 = (esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read()));
}

void img_filter::thread_ap_block_state3() {
    ap_block_state3 = ((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state3.read())));
}

void img_filter::thread_ap_block_state7() {
    ap_block_state7 = (esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()));
}

void img_filter::thread_ap_block_state9() {
    ap_block_state9 = ((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_read_state9.read())));
}

void img_filter::thread_ap_condition_282() {
    ap_condition_282 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_676_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_711_p2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_read_state9.read()))));
}

void img_filter::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_539_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void img_filter::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void img_filter::thread_ap_predicate_op158_read_state9() {
    ap_predicate_op158_read_state9 = (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_676_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_711_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_fu_717_p1.read()));
}

void img_filter::thread_ap_predicate_op160_read_state9() {
    ap_predicate_op160_read_state9 = (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_676_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_711_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_fu_717_p1.read()));
}

void img_filter::thread_ap_predicate_op178_write_state11() {
    ap_predicate_op178_write_state11 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1050.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_reg_1054.read()));
}

void img_filter::thread_ap_predicate_op180_write_state11() {
    ap_predicate_op180_write_state11 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1050.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_reg_1054.read()));
}

void img_filter::thread_ap_predicate_op67_write_state3() {
    ap_predicate_op67_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_467_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_941.read()));
}

void img_filter::thread_ap_predicate_op69_write_state3() {
    ap_predicate_op69_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_467_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_941.read()));
}

void img_filter::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_539_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void img_filter::thread_col_1_fu_566_p2() {
    col_1_fu_566_p2 = (!col_reg_362.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(col_reg_362.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void img_filter::thread_conv_window_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        conv_window_V_address0 =  (sc_lv<4>) (tmp_30_cast_fu_877_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        conv_window_V_address0 = conv_window_V_addr_2_reg_1027.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        conv_window_V_address0 =  (sc_lv<4>) (tmp_28_cast_fu_746_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_676_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_711_p2.read()))) {
        conv_window_V_address0 =  (sc_lv<4>) (tmp_32_cast_fu_741_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_676_p2.read()))) {
        conv_window_V_address0 =  (sc_lv<4>) (tmp_29_cast_fu_706_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        conv_window_V_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        conv_window_V_address0 =  (sc_lv<4>) (tmp_22_cast_fu_534_p1.read());
    } else {
        conv_window_V_address0 = "XXXX";
    }
}

void img_filter::thread_conv_window_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_read_state9.read()))) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_676_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_676_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_711_p2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_read_state9.read())))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op178_write_state11.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op180_write_state11.read())))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        conv_window_V_ce0 = ap_const_logic_1;
    } else {
        conv_window_V_ce0 = ap_const_logic_0;
    }
}

void img_filter::thread_conv_window_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        conv_window_V_d0 = tmp_V_11_reg_397.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        conv_window_V_d0 = conv_window_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        conv_window_V_d0 = pixel_gray_V_reg_1006.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        conv_window_V_d0 = ap_const_lv8_0;
    } else {
        conv_window_V_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void img_filter::thread_conv_window_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_513_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond7_fu_631_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1050.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op178_write_state11.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op180_write_state11.read())))))) {
        conv_window_V_we0 = ap_const_logic_1;
    } else {
        conv_window_V_we0 = ap_const_logic_0;
    }
}

void img_filter::thread_exitcond1_fu_451_p2() {
    exitcond1_fu_451_p2 = (!i_reg_307.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_307.read() == ap_const_lv2_2);
}

void img_filter::thread_exitcond2_fu_479_p2() {
    exitcond2_fu_479_p2 = (!i5_reg_329.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i5_reg_329.read() == ap_const_lv2_3);
}

void img_filter::thread_exitcond3_fu_467_p2() {
    exitcond3_fu_467_p2 = (!j_reg_318.read().is_01() || !ap_const_lv10_27D.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_318.read() == ap_const_lv10_27D);
}

void img_filter::thread_exitcond4_fu_539_p2() {
    exitcond4_fu_539_p2 = (!row_reg_351.read().is_01() || !ap_const_lv9_1E0.is_01())? sc_lv<1>(): sc_lv<1>(row_reg_351.read() == ap_const_lv9_1E0);
}

void img_filter::thread_exitcond5_fu_513_p2() {
    exitcond5_fu_513_p2 = (!j6_reg_340.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j6_reg_340.read() == ap_const_lv2_3);
}

void img_filter::thread_exitcond6_fu_560_p2() {
    exitcond6_fu_560_p2 = (!col_reg_362.read().is_01() || !ap_const_lv10_280.is_01())? sc_lv<1>(): sc_lv<1>(col_reg_362.read() == ap_const_lv10_280);
}

void img_filter::thread_exitcond7_fu_631_p2() {
    exitcond7_fu_631_p2 = (!i7_reg_374.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i7_reg_374.read() == ap_const_lv2_3);
}

void img_filter::thread_exitcond8_fu_754_p2() {
    exitcond8_fu_754_p2 = (!i9_reg_417.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i9_reg_417.read() == ap_const_lv2_3);
}

void img_filter::thread_exitcond9_fu_676_p2() {
    exitcond9_fu_676_p2 = (!j8_reg_386.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j8_reg_386.read() == ap_const_lv2_2);
}

void img_filter::thread_exitcond_fu_860_p2() {
    exitcond_fu_860_p2 = (!j4_reg_440.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j4_reg_440.read() == ap_const_lv2_3);
}

void img_filter::thread_grp_fu_899_p0() {
    grp_fu_899_p0 =  (sc_lv<8>) (grp_fu_899_p00.read());
}

void img_filter::thread_grp_fu_899_p00() {
    grp_fu_899_p00 = esl_zext<10,8>(tmp_3_fu_610_p1.read());
}

void img_filter::thread_grp_fu_899_p1() {
    grp_fu_899_p1 =  (sc_lv<9>) (grp_fu_899_p10.read());
}

void img_filter::thread_grp_fu_899_p10() {
    grp_fu_899_p10 = esl_zext<10,9>(ret_V_fu_604_p2.read());
}

void img_filter::thread_grp_fu_899_p2() {
    grp_fu_899_p2 =  (sc_lv<12>) (ap_const_lv22_556);
}

void img_filter::thread_grp_fu_908_p1() {
    grp_fu_908_p1 =  (sc_lv<8>) (grp_fu_908_p10.read());
}

void img_filter::thread_grp_fu_908_p10() {
    grp_fu_908_p10 = esl_zext<11,8>(conv_window_V_q0.read());
}

void img_filter::thread_i9_cast5_fu_750_p1() {
    i9_cast5_fu_750_p1 = esl_zext<5,2>(i9_reg_417.read());
}

void img_filter::thread_i_1_fu_457_p2() {
    i_1_fu_457_p2 = (!i_reg_307.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_reg_307.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void img_filter::thread_i_2_fu_485_p2() {
    i_2_fu_485_p2 = (!i5_reg_329.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i5_reg_329.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void img_filter::thread_i_3_fu_760_p2() {
    i_3_fu_760_p2 = (!i9_reg_417.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i9_reg_417.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void img_filter::thread_i_4_fu_637_p2() {
    i_4_fu_637_p2 = (!i7_reg_374.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i7_reg_374.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void img_filter::thread_icmp_fu_794_p2() {
    icmp_fu_794_p2 = (!tmp_11_fu_784_p4.read().is_01() || !ap_const_lv24_0.is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_11_fu_784_p4.read()) > sc_bigint<24>(ap_const_lv24_0));
}

void img_filter::thread_in_V_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0))) {
        in_V_data_V_blk_n = in_V_data_V_empty_n.read();
    } else {
        in_V_data_V_blk_n = ap_const_logic_1;
    }
}

void img_filter::thread_in_V_data_V_read() {
    in_V_data_V_read = in_V_id_V0_update.read();
}

void img_filter::thread_in_V_dest_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0))) {
        in_V_dest_V_blk_n = in_V_dest_V_empty_n.read();
    } else {
        in_V_dest_V_blk_n = ap_const_logic_1;
    }
}

void img_filter::thread_in_V_dest_V_read() {
    in_V_dest_V_read = in_V_id_V0_update.read();
}

void img_filter::thread_in_V_id_V0_status() {
    in_V_id_V0_status = (in_V_data_V_empty_n.read() & in_V_keep_V_empty_n.read() & in_V_strb_V_empty_n.read() & in_V_user_V_empty_n.read() & in_V_last_V_empty_n.read() & in_V_id_V_empty_n.read() & in_V_dest_V_empty_n.read());
}

void img_filter::thread_in_V_id_V0_update() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read())))) {
        in_V_id_V0_update = ap_const_logic_1;
    } else {
        in_V_id_V0_update = ap_const_logic_0;
    }
}

void img_filter::thread_in_V_id_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0))) {
        in_V_id_V_blk_n = in_V_id_V_empty_n.read();
    } else {
        in_V_id_V_blk_n = ap_const_logic_1;
    }
}

void img_filter::thread_in_V_id_V_read() {
    in_V_id_V_read = in_V_id_V0_update.read();
}

void img_filter::thread_in_V_keep_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0))) {
        in_V_keep_V_blk_n = in_V_keep_V_empty_n.read();
    } else {
        in_V_keep_V_blk_n = ap_const_logic_1;
    }
}

void img_filter::thread_in_V_keep_V_read() {
    in_V_keep_V_read = in_V_id_V0_update.read();
}

void img_filter::thread_in_V_last_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0))) {
        in_V_last_V_blk_n = in_V_last_V_empty_n.read();
    } else {
        in_V_last_V_blk_n = ap_const_logic_1;
    }
}

void img_filter::thread_in_V_last_V_read() {
    in_V_last_V_read = in_V_id_V0_update.read();
}

void img_filter::thread_in_V_strb_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0))) {
        in_V_strb_V_blk_n = in_V_strb_V_empty_n.read();
    } else {
        in_V_strb_V_blk_n = ap_const_logic_1;
    }
}

void img_filter::thread_in_V_strb_V_read() {
    in_V_strb_V_read = in_V_id_V0_update.read();
}

void img_filter::thread_in_V_user_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0))) {
        in_V_user_V_blk_n = in_V_user_V_empty_n.read();
    } else {
        in_V_user_V_blk_n = ap_const_logic_1;
    }
}

void img_filter::thread_in_V_user_V_read() {
    in_V_user_V_read = in_V_id_V0_update.read();
}

void img_filter::thread_j4_cast2_fu_856_p1() {
    j4_cast2_fu_856_p1 = esl_zext<5,2>(j4_reg_440.read());
}

void img_filter::thread_j_1_fu_473_p2() {
    j_1_fu_473_p2 = (!j_reg_318.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_reg_318.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void img_filter::thread_j_2_fu_519_p2() {
    j_2_fu_519_p2 = (!j6_reg_340.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j6_reg_340.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void img_filter::thread_j_3_fu_682_p2() {
    j_3_fu_682_p2 = (!j8_reg_386.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j8_reg_386.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void img_filter::thread_j_4_fu_866_p2() {
    j_4_fu_866_p2 = (!j4_reg_440.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j4_reg_440.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void img_filter::thread_kernel_address0() {
    kernel_address0 =  (sc_lv<4>) (tmp_17_fu_886_p1.read());
}

void img_filter::thread_kernel_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        kernel_ce0 = ap_const_logic_1;
    } else {
        kernel_ce0 = ap_const_logic_0;
    }
}

void img_filter::thread_lhs_V_cast_fu_596_p1() {
    lhs_V_cast_fu_596_p1 = esl_zext<9,8>(p_Result_s_fu_576_p4.read());
}

void img_filter::thread_line_buffer_0_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op178_write_state11.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op178_write_state11.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op180_write_state11.read()))))) {
        line_buffer_0_V_V_din = conv_window_V_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_write_state3.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state3.read()))))) {
        line_buffer_0_V_V_din = ap_const_lv8_0;
    } else {
        line_buffer_0_V_V_din =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void img_filter::thread_line_buffer_0_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state9.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_read_state9.read()))))) {
        line_buffer_0_V_V_read = ap_const_logic_1;
    } else {
        line_buffer_0_V_V_read = ap_const_logic_0;
    }
}

void img_filter::thread_line_buffer_0_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_write_state3.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state3.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op178_write_state11.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op178_write_state11.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op180_write_state11.read())))))) {
        line_buffer_0_V_V_write = ap_const_logic_1;
    } else {
        line_buffer_0_V_V_write = ap_const_logic_0;
    }
}

void img_filter::thread_line_buffer_1_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op180_write_state11.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op178_write_state11.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op180_write_state11.read()))))) {
        line_buffer_1_V_V_din = conv_window_V_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state3.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state3.read()))))) {
        line_buffer_1_V_V_din = ap_const_lv8_0;
    } else {
        line_buffer_1_V_V_din =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void img_filter::thread_line_buffer_1_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_read_state9.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_read_state9.read()))))) {
        line_buffer_1_V_V_read = ap_const_logic_1;
    } else {
        line_buffer_1_V_V_read = ap_const_logic_0;
    }
}

void img_filter::thread_line_buffer_1_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state3.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state3.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op180_write_state11.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op178_write_state11.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op180_write_state11.read())))))) {
        line_buffer_1_V_V_write = ap_const_logic_1;
    } else {
        line_buffer_1_V_V_write = ap_const_logic_0;
    }
}

void img_filter::thread_out_V_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1))) {
        out_V_data_V_blk_n = out_V_data_V_full_n.read();
    } else {
        out_V_data_V_blk_n = ap_const_logic_1;
    }
}

void img_filter::thread_out_V_data_V_din() {
    out_V_data_V_din = esl_concat<16,8>(esl_concat<8,8>(tmp_4_fu_820_p3.read(), tmp_4_fu_820_p3.read()), tmp_4_fu_820_p3.read());
}

void img_filter::thread_out_V_data_V_write() {
    out_V_data_V_write = out_V_id_V1_update.read();
}

void img_filter::thread_out_V_dest_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1))) {
        out_V_dest_V_blk_n = out_V_dest_V_full_n.read();
    } else {
        out_V_dest_V_blk_n = ap_const_logic_1;
    }
}

void img_filter::thread_out_V_dest_V_din() {
    out_V_dest_V_din = ap_const_lv1_1;
}

void img_filter::thread_out_V_dest_V_write() {
    out_V_dest_V_write = out_V_id_V1_update.read();
}

void img_filter::thread_out_V_id_V1_status() {
    out_V_id_V1_status = (out_V_data_V_full_n.read() & out_V_keep_V_full_n.read() & out_V_strb_V_full_n.read() & out_V_user_V_full_n.read() & out_V_last_V_full_n.read() & out_V_id_V_full_n.read() & out_V_dest_V_full_n.read());
}

void img_filter::thread_out_V_id_V1_update() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())))) {
        out_V_id_V1_update = ap_const_logic_1;
    } else {
        out_V_id_V1_update = ap_const_logic_0;
    }
}

void img_filter::thread_out_V_id_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1))) {
        out_V_id_V_blk_n = out_V_id_V_full_n.read();
    } else {
        out_V_id_V_blk_n = ap_const_logic_1;
    }
}

void img_filter::thread_out_V_id_V_din() {
    out_V_id_V_din = ap_const_lv1_1;
}

void img_filter::thread_out_V_id_V_write() {
    out_V_id_V_write = out_V_id_V1_update.read();
}

void img_filter::thread_out_V_keep_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1))) {
        out_V_keep_V_blk_n = out_V_keep_V_full_n.read();
    } else {
        out_V_keep_V_blk_n = ap_const_logic_1;
    }
}

void img_filter::thread_out_V_keep_V_din() {
    out_V_keep_V_din = ap_const_lv3_7;
}

void img_filter::thread_out_V_keep_V_write() {
    out_V_keep_V_write = out_V_id_V1_update.read();
}

void img_filter::thread_out_V_last_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1))) {
        out_V_last_V_blk_n = out_V_last_V_full_n.read();
    } else {
        out_V_last_V_blk_n = ap_const_logic_1;
    }
}

void img_filter::thread_out_V_last_V_din() {
    out_V_last_V_din = (tmp_5_reg_988.read() & tmp_6_fu_839_p2.read());
}

void img_filter::thread_out_V_last_V_write() {
    out_V_last_V_write = out_V_id_V1_update.read();
}

void img_filter::thread_out_V_strb_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1))) {
        out_V_strb_V_blk_n = out_V_strb_V_full_n.read();
    } else {
        out_V_strb_V_blk_n = ap_const_logic_1;
    }
}

void img_filter::thread_out_V_strb_V_din() {
    out_V_strb_V_din = ap_const_lv3_7;
}

void img_filter::thread_out_V_strb_V_write() {
    out_V_strb_V_write = out_V_id_V1_update.read();
}

void img_filter::thread_out_V_user_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1))) {
        out_V_user_V_blk_n = out_V_user_V_full_n.read();
    } else {
        out_V_user_V_blk_n = ap_const_logic_1;
    }
}

void img_filter::thread_out_V_user_V_din() {
    out_V_user_V_din = ap_const_lv1_1;
}

void img_filter::thread_out_V_user_V_write() {
    out_V_user_V_write = out_V_id_V1_update.read();
}

void img_filter::thread_p_0340_2_41_fu_800_p3() {
    p_0340_2_41_fu_800_p3 = (!icmp_fu_794_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_fu_794_p2.read()[0].to_bool())? ap_const_lv32_FF: p_0340_2_reg_407.read());
}

void img_filter::thread_p_Result_1_fu_586_p4() {
    p_Result_1_fu_586_p4 = in_V_data_V_dout.read().range(15, 8);
}

void img_filter::thread_p_Result_s_fu_576_p4() {
    p_Result_s_fu_576_p4 = in_V_data_V_dout.read().range(23, 16);
}

void img_filter::thread_p_load_reg_993() {
    p_load_reg_993 = ap_const_lv32_0;
}

void img_filter::thread_p_shl1_cast_fu_503_p1() {
    p_shl1_cast_fu_503_p1 = esl_zext<5,4>(tmp_s_fu_495_p3.read());
}

void img_filter::thread_p_shl2_cast_fu_655_p1() {
    p_shl2_cast_fu_655_p1 = esl_zext<5,4>(tmp_7_fu_647_p3.read());
}

void img_filter::thread_p_shl3_cast_fu_731_p1() {
    p_shl3_cast_fu_731_p1 = esl_zext<5,4>(tmp_22_fu_724_p3.read());
}

void img_filter::thread_p_shl4_cast_fu_774_p1() {
    p_shl4_cast_fu_774_p1 = esl_zext<5,4>(tmp_14_fu_766_p3.read());
}

void img_filter::thread_ret_V_fu_604_p2() {
    ret_V_fu_604_p2 = (!lhs_V_cast_fu_596_p1.read().is_01() || !rhs_V_cast_fu_600_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_cast_fu_596_p1.read()) + sc_biguint<9>(rhs_V_cast_fu_600_p1.read()));
}

void img_filter::thread_rhs_V_cast_fu_600_p1() {
    rhs_V_cast_fu_600_p1 = esl_zext<9,8>(p_Result_1_fu_586_p4.read());
}

void img_filter::thread_row_1_fu_545_p2() {
    row_1_fu_545_p2 = (!row_reg_351.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(row_reg_351.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void img_filter::thread_tmp_10_fu_711_p2() {
    tmp_10_fu_711_p2 = (!i7_reg_374.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i7_reg_374.read() == ap_const_lv2_2);
}

void img_filter::thread_tmp_11_cast_fu_688_p1() {
    tmp_11_cast_fu_688_p1 = esl_zext<5,2>(j8_reg_386.read());
}

void img_filter::thread_tmp_11_fu_784_p4() {
    tmp_11_fu_784_p4 = p_0340_2_reg_407.read().range(31, 8);
}

void img_filter::thread_tmp_12_cast_fu_697_p1() {
    tmp_12_cast_fu_697_p1 = esl_zext<5,2>(j_3_fu_682_p2.read());
}

void img_filter::thread_tmp_12_fu_808_p3() {
    tmp_12_fu_808_p3 = p_0340_2_41_fu_800_p3.read().range(31, 31);
}

void img_filter::thread_tmp_13_fu_816_p1() {
    tmp_13_fu_816_p1 = p_0340_2_41_fu_800_p3.read().range(8-1, 0);
}

void img_filter::thread_tmp_14_cast_fu_721_p1() {
    tmp_14_cast_fu_721_p1 = esl_zext<5,2>(i_4_reg_1014.read());
}

void img_filter::thread_tmp_14_fu_766_p3() {
    tmp_14_fu_766_p3 = esl_concat<2,2>(i9_reg_417.read(), ap_const_lv2_0);
}

void img_filter::thread_tmp_15_fu_778_p2() {
    tmp_15_fu_778_p2 = (!p_shl4_cast_fu_774_p1.read().is_01() || !i9_cast5_fu_750_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl4_cast_fu_774_p1.read()) - sc_biguint<5>(i9_cast5_fu_750_p1.read()));
}

void img_filter::thread_tmp_16_cast_fu_882_p1() {
    tmp_16_cast_fu_882_p1 = esl_sext<32,5>(tmp_21_fu_872_p2.read());
}

void img_filter::thread_tmp_16_fu_692_p2() {
    tmp_16_fu_692_p2 = (!tmp_8_reg_1021.read().is_01() || !tmp_11_cast_fu_688_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_8_reg_1021.read()) + sc_biguint<5>(tmp_11_cast_fu_688_p1.read()));
}

void img_filter::thread_tmp_17_fu_886_p1() {
    tmp_17_fu_886_p1 = esl_zext<64,32>(tmp_16_cast_fu_882_p1.read());
}

void img_filter::thread_tmp_18_fu_701_p2() {
    tmp_18_fu_701_p2 = (!tmp_8_reg_1021.read().is_01() || !tmp_12_cast_fu_697_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_8_reg_1021.read()) + sc_biguint<5>(tmp_12_cast_fu_697_p1.read()));
}

void img_filter::thread_tmp_1_cast_fu_491_p1() {
    tmp_1_cast_fu_491_p1 = esl_zext<5,2>(i5_reg_329.read());
}

void img_filter::thread_tmp_1_fu_507_p2() {
    tmp_1_fu_507_p2 = (!p_shl1_cast_fu_503_p1.read().is_01() || !tmp_1_cast_fu_491_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl1_cast_fu_503_p1.read()) - sc_biguint<5>(tmp_1_cast_fu_491_p1.read()));
}

void img_filter::thread_tmp_20_fu_717_p1() {
    tmp_20_fu_717_p1 = i7_reg_374.read().range(1-1, 0);
}

void img_filter::thread_tmp_21_fu_872_p2() {
    tmp_21_fu_872_p2 = (!tmp_15_reg_1081.read().is_01() || !j4_cast2_fu_856_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_15_reg_1081.read()) + sc_biguint<5>(j4_cast2_fu_856_p1.read()));
}

void img_filter::thread_tmp_22_cast_fu_534_p1() {
    tmp_22_cast_fu_534_p1 = esl_sext<64,5>(tmp_2_fu_529_p2.read());
}

void img_filter::thread_tmp_22_fu_724_p3() {
    tmp_22_fu_724_p3 = esl_concat<2,2>(i_4_reg_1014.read(), ap_const_lv2_0);
}

void img_filter::thread_tmp_23_fu_735_p2() {
    tmp_23_fu_735_p2 = (!p_shl3_cast_fu_731_p1.read().is_01() || !tmp_14_cast_fu_721_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl3_cast_fu_731_p1.read()) - sc_biguint<5>(tmp_14_cast_fu_721_p1.read()));
}

void img_filter::thread_tmp_25_cast_fu_671_p1() {
    tmp_25_cast_fu_671_p1 = esl_sext<64,5>(tmp_9_fu_665_p2.read());
}

void img_filter::thread_tmp_28_cast_fu_746_p1() {
    tmp_28_cast_fu_746_p1 = esl_sext<64,5>(tmp_16_reg_1040.read());
}

void img_filter::thread_tmp_29_cast_fu_706_p1() {
    tmp_29_cast_fu_706_p1 = esl_sext<64,5>(tmp_18_fu_701_p2.read());
}

void img_filter::thread_tmp_2_fu_529_p2() {
    tmp_2_fu_529_p2 = (!tmp_1_reg_961.read().is_01() || !tmp_7_cast_fu_525_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_1_reg_961.read()) + sc_biguint<5>(tmp_7_cast_fu_525_p1.read()));
}

void img_filter::thread_tmp_30_cast_fu_877_p1() {
    tmp_30_cast_fu_877_p1 = esl_sext<64,5>(tmp_21_fu_872_p2.read());
}

void img_filter::thread_tmp_32_cast_fu_741_p1() {
    tmp_32_cast_fu_741_p1 = esl_sext<64,5>(tmp_23_fu_735_p2.read());
}

void img_filter::thread_tmp_3_fu_610_p1() {
    tmp_3_fu_610_p1 = in_V_data_V_dout.read().range(8-1, 0);
}

void img_filter::thread_tmp_4_fu_820_p3() {
    tmp_4_fu_820_p3 = (!tmp_12_fu_808_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_12_fu_808_p3.read()[0].to_bool())? ap_const_lv8_0: tmp_13_fu_816_p1.read());
}

void img_filter::thread_tmp_5_fu_551_p2() {
    tmp_5_fu_551_p2 = (!row_reg_351.read().is_01() || !ap_const_lv9_1DF.is_01())? sc_lv<1>(): sc_lv<1>(row_reg_351.read() == ap_const_lv9_1DF);
}

void img_filter::thread_tmp_6_fu_839_p2() {
    tmp_6_fu_839_p2 = (!col_reg_362.read().is_01() || !ap_const_lv10_27F.is_01())? sc_lv<1>(): sc_lv<1>(col_reg_362.read() == ap_const_lv10_27F);
}

void img_filter::thread_tmp_7_cast_fu_525_p1() {
    tmp_7_cast_fu_525_p1 = esl_zext<5,2>(j6_reg_340.read());
}

void img_filter::thread_tmp_7_fu_647_p3() {
    tmp_7_fu_647_p3 = esl_concat<2,2>(i7_reg_374.read(), ap_const_lv2_0);
}

void img_filter::thread_tmp_8_fu_659_p2() {
    tmp_8_fu_659_p2 = (!p_shl2_cast_fu_655_p1.read().is_01() || !tmp_cast_fu_643_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl2_cast_fu_655_p1.read()) - sc_biguint<5>(tmp_cast_fu_643_p1.read()));
}

void img_filter::thread_tmp_9_fu_665_p2() {
    tmp_9_fu_665_p2 = (!tmp_8_fu_659_p2.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_8_fu_659_p2.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void img_filter::thread_tmp_cast_fu_643_p1() {
    tmp_cast_fu_643_p1 = esl_zext<5,2>(i7_reg_374.read());
}

void img_filter::thread_tmp_fu_463_p1() {
    tmp_fu_463_p1 = i_reg_307.read().range(1-1, 0);
}

void img_filter::thread_tmp_s_fu_495_p3() {
    tmp_s_fu_495_p3 = esl_concat<2,2>(i5_reg_329.read(), ap_const_lv2_0);
}

void img_filter::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_451_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state3.read()))) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_467_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_467_p2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state3.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_479_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_513_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_539_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && !(esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read())) && esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(exitcond6_fu_560_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read())))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond7_fu_631_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_676_p2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_read_state9.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_read_state9.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_676_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_0_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op178_write_state11.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, line_buffer_1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op180_write_state11.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && !(esl_seteq<1,1,1>(exitcond8_fu_754_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_754_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_860_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

void img_filter::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_data_V_dout\" :  \"" << in_V_data_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_data_V_empty_n\" :  \"" << in_V_data_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_V_data_V_read\" :  \"" << in_V_data_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_keep_V_dout\" :  \"" << in_V_keep_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_keep_V_empty_n\" :  \"" << in_V_keep_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_V_keep_V_read\" :  \"" << in_V_keep_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_strb_V_dout\" :  \"" << in_V_strb_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_strb_V_empty_n\" :  \"" << in_V_strb_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_V_strb_V_read\" :  \"" << in_V_strb_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_user_V_dout\" :  \"" << in_V_user_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_user_V_empty_n\" :  \"" << in_V_user_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_V_user_V_read\" :  \"" << in_V_user_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_last_V_dout\" :  \"" << in_V_last_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_last_V_empty_n\" :  \"" << in_V_last_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_V_last_V_read\" :  \"" << in_V_last_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_id_V_dout\" :  \"" << in_V_id_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_id_V_empty_n\" :  \"" << in_V_id_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_V_id_V_read\" :  \"" << in_V_id_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_dest_V_dout\" :  \"" << in_V_dest_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_dest_V_empty_n\" :  \"" << in_V_dest_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_V_dest_V_read\" :  \"" << in_V_dest_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_data_V_din\" :  \"" << out_V_data_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_V_data_V_full_n\" :  \"" << out_V_data_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_data_V_write\" :  \"" << out_V_data_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_keep_V_din\" :  \"" << out_V_keep_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_V_keep_V_full_n\" :  \"" << out_V_keep_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_keep_V_write\" :  \"" << out_V_keep_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_strb_V_din\" :  \"" << out_V_strb_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_V_strb_V_full_n\" :  \"" << out_V_strb_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_strb_V_write\" :  \"" << out_V_strb_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_user_V_din\" :  \"" << out_V_user_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_V_user_V_full_n\" :  \"" << out_V_user_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_user_V_write\" :  \"" << out_V_user_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_last_V_din\" :  \"" << out_V_last_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_V_last_V_full_n\" :  \"" << out_V_last_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_last_V_write\" :  \"" << out_V_last_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_id_V_din\" :  \"" << out_V_id_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_V_id_V_full_n\" :  \"" << out_V_id_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_id_V_write\" :  \"" << out_V_id_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_dest_V_din\" :  \"" << out_V_dest_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_V_dest_V_full_n\" :  \"" << out_V_dest_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_dest_V_write\" :  \"" << out_V_dest_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

