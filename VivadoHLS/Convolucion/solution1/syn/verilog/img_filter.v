// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="img_filter,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.920000,HLS_SYN_LAT=14747856,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=2,HLS_SYN_FF=287,HLS_SYN_LUT=994,HLS_VERSION=2018_3}" *)

module img_filter (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V_data_V_dout,
        in_V_data_V_empty_n,
        in_V_data_V_read,
        in_V_keep_V_dout,
        in_V_keep_V_empty_n,
        in_V_keep_V_read,
        in_V_strb_V_dout,
        in_V_strb_V_empty_n,
        in_V_strb_V_read,
        in_V_user_V_dout,
        in_V_user_V_empty_n,
        in_V_user_V_read,
        in_V_last_V_dout,
        in_V_last_V_empty_n,
        in_V_last_V_read,
        in_V_id_V_dout,
        in_V_id_V_empty_n,
        in_V_id_V_read,
        in_V_dest_V_dout,
        in_V_dest_V_empty_n,
        in_V_dest_V_read,
        out_V_data_V_din,
        out_V_data_V_full_n,
        out_V_data_V_write,
        out_V_keep_V_din,
        out_V_keep_V_full_n,
        out_V_keep_V_write,
        out_V_strb_V_din,
        out_V_strb_V_full_n,
        out_V_strb_V_write,
        out_V_user_V_din,
        out_V_user_V_full_n,
        out_V_user_V_write,
        out_V_last_V_din,
        out_V_last_V_full_n,
        out_V_last_V_write,
        out_V_id_V_din,
        out_V_id_V_full_n,
        out_V_id_V_write,
        out_V_dest_V_din,
        out_V_dest_V_full_n,
        out_V_dest_V_write
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] in_V_data_V_dout;
input   in_V_data_V_empty_n;
output   in_V_data_V_read;
input  [2:0] in_V_keep_V_dout;
input   in_V_keep_V_empty_n;
output   in_V_keep_V_read;
input  [2:0] in_V_strb_V_dout;
input   in_V_strb_V_empty_n;
output   in_V_strb_V_read;
input  [0:0] in_V_user_V_dout;
input   in_V_user_V_empty_n;
output   in_V_user_V_read;
input  [0:0] in_V_last_V_dout;
input   in_V_last_V_empty_n;
output   in_V_last_V_read;
input  [0:0] in_V_id_V_dout;
input   in_V_id_V_empty_n;
output   in_V_id_V_read;
input  [0:0] in_V_dest_V_dout;
input   in_V_dest_V_empty_n;
output   in_V_dest_V_read;
output  [23:0] out_V_data_V_din;
input   out_V_data_V_full_n;
output   out_V_data_V_write;
output  [2:0] out_V_keep_V_din;
input   out_V_keep_V_full_n;
output   out_V_keep_V_write;
output  [2:0] out_V_strb_V_din;
input   out_V_strb_V_full_n;
output   out_V_strb_V_write;
output  [0:0] out_V_user_V_din;
input   out_V_user_V_full_n;
output   out_V_user_V_write;
output  [0:0] out_V_last_V_din;
input   out_V_last_V_full_n;
output   out_V_last_V_write;
output  [0:0] out_V_id_V_din;
input   out_V_id_V_full_n;
output   out_V_id_V_write;
output  [0:0] out_V_dest_V_din;
input   out_V_dest_V_full_n;
output   out_V_dest_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] kernel_address0;
reg    kernel_ce0;
wire  signed [2:0] kernel_q0;
reg    in_V_data_V_blk_n;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond6_fu_560_p2;
reg    in_V_keep_V_blk_n;
reg    in_V_strb_V_blk_n;
reg    in_V_user_V_blk_n;
reg    in_V_last_V_blk_n;
reg    in_V_id_V_blk_n;
reg    in_V_dest_V_blk_n;
reg    out_V_data_V_blk_n;
wire    ap_CS_fsm_state12;
wire   [0:0] exitcond8_fu_754_p2;
reg    out_V_keep_V_blk_n;
reg    out_V_strb_V_blk_n;
reg    out_V_user_V_blk_n;
reg    out_V_last_V_blk_n;
reg    out_V_id_V_blk_n;
reg    out_V_dest_V_blk_n;
wire   [1:0] i_1_fu_457_p2;
reg   [1:0] i_1_reg_936;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_fu_463_p1;
reg   [0:0] tmp_reg_941;
wire   [0:0] exitcond1_fu_451_p2;
wire   [9:0] j_1_fu_473_p2;
wire    ap_CS_fsm_state3;
reg   [7:0] line_buffer_0_V_V_din;
wire    line_buffer_0_V_V_full_n;
reg    line_buffer_0_V_V_write;
wire   [0:0] exitcond3_fu_467_p2;
reg    ap_predicate_op67_write_state3;
reg   [7:0] line_buffer_1_V_V_din;
wire    line_buffer_1_V_V_full_n;
reg    line_buffer_1_V_V_write;
reg    ap_predicate_op69_write_state3;
reg    ap_block_state3;
wire   [1:0] i_2_fu_485_p2;
reg   [1:0] i_2_reg_956;
wire    ap_CS_fsm_state4;
wire   [4:0] tmp_1_fu_507_p2;
reg   [4:0] tmp_1_reg_961;
wire   [0:0] exitcond2_fu_479_p2;
wire   [1:0] j_2_fu_519_p2;
wire    ap_CS_fsm_state5;
wire   [8:0] row_1_fu_545_p2;
reg   [8:0] row_1_reg_983;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_5_fu_551_p2;
reg   [0:0] tmp_5_reg_988;
wire   [0:0] exitcond4_fu_539_p2;
wire   [31:0] p_load_reg_993;
wire    in_V_id_V0_status;
reg    ap_block_state7;
wire   [9:0] col_1_fu_566_p2;
reg   [9:0] col_1_reg_1001;
reg   [7:0] pixel_gray_V_reg_1006;
wire   [1:0] i_4_fu_637_p2;
reg   [1:0] i_4_reg_1014;
wire    ap_CS_fsm_state8;
wire   [4:0] tmp_8_fu_659_p2;
reg   [4:0] tmp_8_reg_1021;
wire   [0:0] exitcond7_fu_631_p2;
reg   [3:0] conv_window_V_addr_2_reg_1027;
wire   [1:0] j_3_fu_682_p2;
reg   [1:0] j_3_reg_1035;
wire    ap_CS_fsm_state9;
wire   [7:0] line_buffer_0_V_V_dout;
wire    line_buffer_0_V_V_empty_n;
reg    line_buffer_0_V_V_read;
wire   [0:0] exitcond9_fu_676_p2;
wire   [0:0] tmp_10_fu_711_p2;
wire   [0:0] tmp_20_fu_717_p1;
reg    ap_predicate_op158_read_state9;
wire   [7:0] line_buffer_1_V_V_dout;
wire    line_buffer_1_V_V_empty_n;
reg    line_buffer_1_V_V_read;
reg    ap_predicate_op160_read_state9;
reg    ap_block_state9;
wire   [4:0] tmp_16_fu_692_p2;
reg   [4:0] tmp_16_reg_1040;
reg   [0:0] tmp_10_reg_1050;
reg   [0:0] tmp_20_reg_1054;
wire   [1:0] i_3_fu_760_p2;
reg   [1:0] i_3_reg_1076;
wire    out_V_id_V1_status;
reg    ap_block_state12;
wire   [4:0] tmp_15_fu_778_p2;
reg   [4:0] tmp_15_reg_1081;
wire   [1:0] j_4_fu_866_p2;
reg   [1:0] j_4_reg_1089;
wire    ap_CS_fsm_state13;
wire   [0:0] exitcond_fu_860_p2;
wire  signed [31:0] grp_fu_908_p3;
wire    ap_CS_fsm_state14;
reg   [3:0] conv_window_V_address0;
reg    conv_window_V_ce0;
reg    conv_window_V_we0;
reg   [7:0] conv_window_V_d0;
wire   [7:0] conv_window_V_q0;
reg   [1:0] i_reg_307;
reg   [9:0] j_reg_318;
reg   [1:0] i5_reg_329;
wire   [0:0] exitcond5_fu_513_p2;
reg   [1:0] j6_reg_340;
reg   [8:0] row_reg_351;
reg   [9:0] col_reg_362;
reg   [1:0] i7_reg_374;
wire    ap_CS_fsm_state11;
reg    ap_predicate_op178_write_state11;
reg    ap_predicate_op180_write_state11;
reg    ap_block_state11;
reg   [1:0] j8_reg_386;
wire    ap_CS_fsm_state10;
reg   [7:0] tmp_V_11_reg_397;
reg   [31:0] p_0340_2_reg_407;
reg   [1:0] i9_reg_417;
reg   [31:0] p_0340_3_reg_428;
reg   [1:0] j4_reg_440;
wire  signed [63:0] tmp_22_cast_fu_534_p1;
wire  signed [63:0] tmp_25_cast_fu_671_p1;
wire  signed [63:0] tmp_29_cast_fu_706_p1;
wire  signed [63:0] tmp_32_cast_fu_741_p1;
wire  signed [63:0] tmp_28_cast_fu_746_p1;
wire  signed [63:0] tmp_30_cast_fu_877_p1;
wire   [63:0] tmp_17_fu_886_p1;
reg    in_V_id_V0_update;
reg    out_V_id_V1_update;
wire   [3:0] tmp_s_fu_495_p3;
wire   [4:0] p_shl1_cast_fu_503_p1;
wire   [4:0] tmp_1_cast_fu_491_p1;
wire   [4:0] tmp_7_cast_fu_525_p1;
wire   [4:0] tmp_2_fu_529_p2;
wire   [7:0] p_Result_s_fu_576_p4;
wire   [7:0] p_Result_1_fu_586_p4;
wire   [8:0] lhs_V_cast_fu_596_p1;
wire   [8:0] rhs_V_cast_fu_600_p1;
wire   [8:0] ret_V_fu_604_p2;
wire   [7:0] tmp_3_fu_610_p1;
wire   [21:0] grp_fu_899_p3;
wire   [3:0] tmp_7_fu_647_p3;
wire   [4:0] p_shl2_cast_fu_655_p1;
wire   [4:0] tmp_cast_fu_643_p1;
wire   [4:0] tmp_9_fu_665_p2;
wire   [4:0] tmp_11_cast_fu_688_p1;
wire   [4:0] tmp_12_cast_fu_697_p1;
wire   [4:0] tmp_18_fu_701_p2;
wire   [3:0] tmp_22_fu_724_p3;
wire   [4:0] p_shl3_cast_fu_731_p1;
wire   [4:0] tmp_14_cast_fu_721_p1;
wire   [4:0] tmp_23_fu_735_p2;
wire   [3:0] tmp_14_fu_766_p3;
wire   [4:0] p_shl4_cast_fu_774_p1;
wire   [4:0] i9_cast5_fu_750_p1;
wire   [23:0] tmp_11_fu_784_p4;
wire   [0:0] icmp_fu_794_p2;
wire   [31:0] p_0340_2_41_fu_800_p3;
wire   [0:0] tmp_12_fu_808_p3;
wire   [7:0] tmp_13_fu_816_p1;
wire   [7:0] tmp_4_fu_820_p3;
wire   [0:0] tmp_6_fu_839_p2;
wire   [4:0] j4_cast2_fu_856_p1;
wire  signed [4:0] tmp_21_fu_872_p2;
wire  signed [31:0] tmp_16_cast_fu_882_p1;
wire   [7:0] grp_fu_899_p0;
wire   [8:0] grp_fu_899_p1;
wire   [11:0] grp_fu_899_p2;
wire   [7:0] grp_fu_908_p1;
reg   [13:0] ap_NS_fsm;
wire   [9:0] grp_fu_899_p00;
wire   [9:0] grp_fu_899_p10;
wire   [10:0] grp_fu_908_p10;
reg    ap_condition_282;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
end

img_filter_kernel #(
    .DataWidth( 3 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernel_address0),
    .ce0(kernel_ce0),
    .q0(kernel_q0)
);

img_filter_conv_wbkb #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
conv_window_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_window_V_address0),
    .ce0(conv_window_V_ce0),
    .we0(conv_window_V_we0),
    .d0(conv_window_V_d0),
    .q0(conv_window_V_q0)
);

img_filter_am_addcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 22 ))
img_filter_am_addcud_U1(
    .din0(grp_fu_899_p0),
    .din1(grp_fu_899_p1),
    .din2(grp_fu_899_p2),
    .dout(grp_fu_899_p3)
);

img_filter_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
img_filter_mac_mudEe_U2(
    .din0(kernel_q0),
    .din1(grp_fu_908_p1),
    .din2(p_0340_3_reg_428),
    .dout(grp_fu_908_p3)
);

fifo_w8_d480_A line_buffer_0_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(line_buffer_0_V_V_din),
    .if_full_n(line_buffer_0_V_V_full_n),
    .if_write(line_buffer_0_V_V_write),
    .if_dout(line_buffer_0_V_V_dout),
    .if_empty_n(line_buffer_0_V_V_empty_n),
    .if_read(line_buffer_0_V_V_read)
);

fifo_w8_d480_A line_buffer_1_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(line_buffer_1_V_V_din),
    .if_full_n(line_buffer_1_V_V_full_n),
    .if_write(line_buffer_1_V_V_write),
    .if_dout(line_buffer_1_V_V_dout),
    .if_empty_n(line_buffer_1_V_V_empty_n),
    .if_read(line_buffer_1_V_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond4_fu_539_p2 == 1'd0))) begin
        col_reg_362 <= 10'd0;
    end else if ((~((out_V_id_V1_status == 1'b0) & (exitcond8_fu_754_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state12) & (exitcond8_fu_754_p2 == 1'd1))) begin
        col_reg_362 <= col_1_reg_1001;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_451_p2 == 1'd1))) begin
        i5_reg_329 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (exitcond5_fu_513_p2 == 1'd1))) begin
        i5_reg_329 <= i_2_reg_956;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op180_write_state11 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op178_write_state11 == 1'b1))) & (1'b1 == ap_CS_fsm_state11))) begin
        i7_reg_374 <= i_4_reg_1014;
    end else if ((~((in_V_id_V0_status == 1'b0) & (exitcond6_fu_560_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (exitcond6_fu_560_p2 == 1'd0))) begin
        i7_reg_374 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond_fu_860_p2 == 1'd1))) begin
        i9_reg_417 <= i_3_reg_1076;
    end else if (((1'b1 == ap_CS_fsm_state8) & (exitcond7_fu_631_p2 == 1'd1))) begin
        i9_reg_417 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3) & (exitcond3_fu_467_p2 == 1'd1))) begin
        i_reg_307 <= i_1_reg_936;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_307 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_V_id_V1_status == 1'b0) & (exitcond8_fu_754_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state12) & (exitcond8_fu_754_p2 == 1'd0))) begin
        j4_reg_440 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        j4_reg_440 <= j_4_reg_1089;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_479_p2 == 1'd0))) begin
        j6_reg_340 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (exitcond5_fu_513_p2 == 1'd0))) begin
        j6_reg_340 <= j_2_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond7_fu_631_p2 == 1'd0))) begin
        j8_reg_386 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        j8_reg_386 <= j_3_reg_1035;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_451_p2 == 1'd0))) begin
        j_reg_318 <= 10'd0;
    end else if ((~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3) & (exitcond3_fu_467_p2 == 1'd0))) begin
        j_reg_318 <= j_1_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond_fu_860_p2 == 1'd1))) begin
        p_0340_2_reg_407 <= p_0340_3_reg_428;
    end else if (((1'b1 == ap_CS_fsm_state8) & (exitcond7_fu_631_p2 == 1'd1))) begin
        p_0340_2_reg_407 <= p_load_reg_993;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_V_id_V1_status == 1'b0) & (exitcond8_fu_754_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state12) & (exitcond8_fu_754_p2 == 1'd0))) begin
        p_0340_3_reg_428 <= p_0340_2_reg_407;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        p_0340_3_reg_428 <= grp_fu_908_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_V_id_V0_status == 1'b0) & (exitcond6_fu_560_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (exitcond6_fu_560_p2 == 1'd1))) begin
        row_reg_351 <= row_1_reg_983;
    end else if (((1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_479_p2 == 1'd1))) begin
        row_reg_351 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_282)) begin
        if ((tmp_20_fu_717_p1 == 1'd0)) begin
            tmp_V_11_reg_397 <= line_buffer_0_V_V_dout;
        end else if ((tmp_20_fu_717_p1 == 1'd1)) begin
            tmp_V_11_reg_397 <= line_buffer_1_V_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_V_id_V0_status == 1'b0) & (exitcond6_fu_560_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7))) begin
        col_1_reg_1001 <= col_1_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond7_fu_631_p2 == 1'd0))) begin
        conv_window_V_addr_2_reg_1027 <= tmp_25_cast_fu_671_p1;
        tmp_8_reg_1021 <= tmp_8_fu_659_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_936 <= i_1_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_2_reg_956 <= i_2_fu_485_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_V_id_V1_status == 1'b0) & (exitcond8_fu_754_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state12))) begin
        i_3_reg_1076 <= i_3_fu_760_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_4_reg_1014 <= i_4_fu_637_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((line_buffer_1_V_V_empty_n == 1'b0) & (ap_predicate_op160_read_state9 == 1'b1)) | ((line_buffer_0_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state9 == 1'b1))) & (1'b1 == ap_CS_fsm_state9))) begin
        j_3_reg_1035 <= j_3_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j_4_reg_1089 <= j_4_fu_866_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_V_id_V0_status == 1'b0) & (exitcond6_fu_560_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (exitcond6_fu_560_p2 == 1'd0))) begin
        pixel_gray_V_reg_1006 <= {{grp_fu_899_p3[19:12]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        row_1_reg_983 <= row_1_fu_545_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((line_buffer_1_V_V_empty_n == 1'b0) & (ap_predicate_op160_read_state9 == 1'b1)) | ((line_buffer_0_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state9 == 1'b1))) & (1'b1 == ap_CS_fsm_state9) & (exitcond9_fu_676_p2 == 1'd1))) begin
        tmp_10_reg_1050 <= tmp_10_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_V_id_V1_status == 1'b0) & (exitcond8_fu_754_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state12) & (exitcond8_fu_754_p2 == 1'd0))) begin
        tmp_15_reg_1081 <= tmp_15_fu_778_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((line_buffer_1_V_V_empty_n == 1'b0) & (ap_predicate_op160_read_state9 == 1'b1)) | ((line_buffer_0_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state9 == 1'b1))) & (1'b1 == ap_CS_fsm_state9) & (exitcond9_fu_676_p2 == 1'd0))) begin
        tmp_16_reg_1040 <= tmp_16_fu_692_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_479_p2 == 1'd0))) begin
        tmp_1_reg_961 <= tmp_1_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((line_buffer_1_V_V_empty_n == 1'b0) & (ap_predicate_op160_read_state9 == 1'b1)) | ((line_buffer_0_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state9 == 1'b1))) & (1'b1 == ap_CS_fsm_state9) & (exitcond9_fu_676_p2 == 1'd1) & (tmp_10_fu_711_p2 == 1'd0))) begin
        tmp_20_reg_1054 <= tmp_20_fu_717_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond4_fu_539_p2 == 1'd0))) begin
        tmp_5_reg_988 <= tmp_5_fu_551_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_451_p2 == 1'd0))) begin
        tmp_reg_941 <= tmp_fu_463_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond4_fu_539_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond4_fu_539_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv_window_V_address0 = tmp_30_cast_fu_877_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_window_V_address0 = conv_window_V_addr_2_reg_1027;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_window_V_address0 = tmp_28_cast_fu_746_p1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (exitcond9_fu_676_p2 == 1'd1) & (tmp_10_fu_711_p2 == 1'd0))) begin
        conv_window_V_address0 = tmp_32_cast_fu_741_p1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (exitcond9_fu_676_p2 == 1'd0))) begin
        conv_window_V_address0 = tmp_29_cast_fu_706_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_window_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_window_V_address0 = tmp_22_cast_fu_534_p1;
    end else begin
        conv_window_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op180_write_state11 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op178_write_state11 == 1'b1))) & (1'b1 == ap_CS_fsm_state11)) | (~(((line_buffer_1_V_V_empty_n == 1'b0) & (ap_predicate_op160_read_state9 == 1'b1)) | ((line_buffer_0_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state9 == 1'b1))) & (1'b1 == ap_CS_fsm_state9) & (exitcond9_fu_676_p2 == 1'd0)) | (~(((line_buffer_1_V_V_empty_n == 1'b0) & (ap_predicate_op160_read_state9 == 1'b1)) | ((line_buffer_0_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state9 == 1'b1))) & (1'b1 == ap_CS_fsm_state9) & (exitcond9_fu_676_p2 == 1'd1) & (tmp_10_fu_711_p2 == 1'd0)))) begin
        conv_window_V_ce0 = 1'b1;
    end else begin
        conv_window_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_window_V_d0 = tmp_V_11_reg_397;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_window_V_d0 = conv_window_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_window_V_d0 = pixel_gray_V_reg_1006;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_window_V_d0 = 8'd0;
    end else begin
        conv_window_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op180_write_state11 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op178_write_state11 == 1'b1))) & (1'b1 == ap_CS_fsm_state11) & (tmp_10_reg_1050 == 1'd0)) | ((1'b1 == ap_CS_fsm_state8) & (exitcond7_fu_631_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state5) & (exitcond5_fu_513_p2 == 1'd0)))) begin
        conv_window_V_we0 = 1'b1;
    end else begin
        conv_window_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond6_fu_560_p2 == 1'd0))) begin
        in_V_data_V_blk_n = in_V_data_V_empty_n;
    end else begin
        in_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond6_fu_560_p2 == 1'd0))) begin
        in_V_dest_V_blk_n = in_V_dest_V_empty_n;
    end else begin
        in_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((in_V_id_V0_status == 1'b0) & (exitcond6_fu_560_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (exitcond6_fu_560_p2 == 1'd0))) begin
        in_V_id_V0_update = 1'b1;
    end else begin
        in_V_id_V0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond6_fu_560_p2 == 1'd0))) begin
        in_V_id_V_blk_n = in_V_id_V_empty_n;
    end else begin
        in_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond6_fu_560_p2 == 1'd0))) begin
        in_V_keep_V_blk_n = in_V_keep_V_empty_n;
    end else begin
        in_V_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond6_fu_560_p2 == 1'd0))) begin
        in_V_last_V_blk_n = in_V_last_V_empty_n;
    end else begin
        in_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond6_fu_560_p2 == 1'd0))) begin
        in_V_strb_V_blk_n = in_V_strb_V_empty_n;
    end else begin
        in_V_strb_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond6_fu_560_p2 == 1'd0))) begin
        in_V_user_V_blk_n = in_V_user_V_empty_n;
    end else begin
        in_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        kernel_ce0 = 1'b1;
    end else begin
        kernel_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op180_write_state11 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op178_write_state11 == 1'b1))) & (ap_predicate_op178_write_state11 == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        line_buffer_0_V_V_din = conv_window_V_q0;
    end else if ((~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1))) & (ap_predicate_op67_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        line_buffer_0_V_V_din = 8'd0;
    end else begin
        line_buffer_0_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((~(((line_buffer_1_V_V_empty_n == 1'b0) & (ap_predicate_op160_read_state9 == 1'b1)) | ((line_buffer_0_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state9 == 1'b1))) & (ap_predicate_op158_read_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        line_buffer_0_V_V_read = 1'b1;
    end else begin
        line_buffer_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op180_write_state11 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op178_write_state11 == 1'b1))) & (ap_predicate_op178_write_state11 == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | (~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1))) & (ap_predicate_op67_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        line_buffer_0_V_V_write = 1'b1;
    end else begin
        line_buffer_0_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op180_write_state11 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op178_write_state11 == 1'b1))) & (ap_predicate_op180_write_state11 == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        line_buffer_1_V_V_din = conv_window_V_q0;
    end else if ((~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1))) & (ap_predicate_op69_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        line_buffer_1_V_V_din = 8'd0;
    end else begin
        line_buffer_1_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((~(((line_buffer_1_V_V_empty_n == 1'b0) & (ap_predicate_op160_read_state9 == 1'b1)) | ((line_buffer_0_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state9 == 1'b1))) & (ap_predicate_op160_read_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        line_buffer_1_V_V_read = 1'b1;
    end else begin
        line_buffer_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op180_write_state11 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op178_write_state11 == 1'b1))) & (ap_predicate_op180_write_state11 == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | (~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1))) & (ap_predicate_op69_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        line_buffer_1_V_V_write = 1'b1;
    end else begin
        line_buffer_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (exitcond8_fu_754_p2 == 1'd1))) begin
        out_V_data_V_blk_n = out_V_data_V_full_n;
    end else begin
        out_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (exitcond8_fu_754_p2 == 1'd1))) begin
        out_V_dest_V_blk_n = out_V_dest_V_full_n;
    end else begin
        out_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((out_V_id_V1_status == 1'b0) & (exitcond8_fu_754_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state12) & (exitcond8_fu_754_p2 == 1'd1))) begin
        out_V_id_V1_update = 1'b1;
    end else begin
        out_V_id_V1_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (exitcond8_fu_754_p2 == 1'd1))) begin
        out_V_id_V_blk_n = out_V_id_V_full_n;
    end else begin
        out_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (exitcond8_fu_754_p2 == 1'd1))) begin
        out_V_keep_V_blk_n = out_V_keep_V_full_n;
    end else begin
        out_V_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (exitcond8_fu_754_p2 == 1'd1))) begin
        out_V_last_V_blk_n = out_V_last_V_full_n;
    end else begin
        out_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (exitcond8_fu_754_p2 == 1'd1))) begin
        out_V_strb_V_blk_n = out_V_strb_V_full_n;
    end else begin
        out_V_strb_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (exitcond8_fu_754_p2 == 1'd1))) begin
        out_V_user_V_blk_n = out_V_user_V_full_n;
    end else begin
        out_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_451_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3) & (exitcond3_fu_467_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3) & (exitcond3_fu_467_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_479_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond5_fu_513_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond4_fu_539_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((in_V_id_V0_status == 1'b0) & (exitcond6_fu_560_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (exitcond6_fu_560_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if ((~((in_V_id_V0_status == 1'b0) & (exitcond6_fu_560_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (exitcond6_fu_560_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (exitcond7_fu_631_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~(((line_buffer_1_V_V_empty_n == 1'b0) & (ap_predicate_op160_read_state9 == 1'b1)) | ((line_buffer_0_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state9 == 1'b1))) & (1'b1 == ap_CS_fsm_state9) & (exitcond9_fu_676_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if ((~(((line_buffer_1_V_V_empty_n == 1'b0) & (ap_predicate_op160_read_state9 == 1'b1)) | ((line_buffer_0_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state9 == 1'b1))) & (1'b1 == ap_CS_fsm_state9) & (exitcond9_fu_676_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state11 : begin
            if ((~(((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op180_write_state11 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op178_write_state11 == 1'b1))) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if ((~((out_V_id_V1_status == 1'b0) & (exitcond8_fu_754_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state12) & (exitcond8_fu_754_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if ((~((out_V_id_V1_status == 1'b0) & (exitcond8_fu_754_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state12) & (exitcond8_fu_754_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (exitcond_fu_860_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state11 = (((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op180_write_state11 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op178_write_state11 == 1'b1)));
end

always @ (*) begin
    ap_block_state12 = ((out_V_id_V1_status == 1'b0) & (exitcond8_fu_754_p2 == 1'd1));
end

always @ (*) begin
    ap_block_state3 = (((line_buffer_1_V_V_full_n == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((line_buffer_0_V_V_full_n == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state7 = ((in_V_id_V0_status == 1'b0) & (exitcond6_fu_560_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state9 = (((line_buffer_1_V_V_empty_n == 1'b0) & (ap_predicate_op160_read_state9 == 1'b1)) | ((line_buffer_0_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_condition_282 = (~(((line_buffer_1_V_V_empty_n == 1'b0) & (ap_predicate_op160_read_state9 == 1'b1)) | ((line_buffer_0_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state9 == 1'b1))) & (1'b1 == ap_CS_fsm_state9) & (exitcond9_fu_676_p2 == 1'd1) & (tmp_10_fu_711_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op158_read_state9 = ((exitcond9_fu_676_p2 == 1'd1) & (tmp_20_fu_717_p1 == 1'd0) & (tmp_10_fu_711_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op160_read_state9 = ((tmp_20_fu_717_p1 == 1'd1) & (exitcond9_fu_676_p2 == 1'd1) & (tmp_10_fu_711_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op178_write_state11 = ((tmp_20_reg_1054 == 1'd0) & (tmp_10_reg_1050 == 1'd0));
end

always @ (*) begin
    ap_predicate_op180_write_state11 = ((tmp_20_reg_1054 == 1'd1) & (tmp_10_reg_1050 == 1'd0));
end

always @ (*) begin
    ap_predicate_op67_write_state3 = ((exitcond3_fu_467_p2 == 1'd0) & (tmp_reg_941 == 1'd0));
end

always @ (*) begin
    ap_predicate_op69_write_state3 = ((tmp_reg_941 == 1'd1) & (exitcond3_fu_467_p2 == 1'd0));
end

assign col_1_fu_566_p2 = (col_reg_362 + 10'd1);

assign exitcond1_fu_451_p2 = ((i_reg_307 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond2_fu_479_p2 = ((i5_reg_329 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond3_fu_467_p2 = ((j_reg_318 == 10'd637) ? 1'b1 : 1'b0);

assign exitcond4_fu_539_p2 = ((row_reg_351 == 9'd480) ? 1'b1 : 1'b0);

assign exitcond5_fu_513_p2 = ((j6_reg_340 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond6_fu_560_p2 = ((col_reg_362 == 10'd640) ? 1'b1 : 1'b0);

assign exitcond7_fu_631_p2 = ((i7_reg_374 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond8_fu_754_p2 = ((i9_reg_417 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond9_fu_676_p2 = ((j8_reg_386 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond_fu_860_p2 = ((j4_reg_440 == 2'd3) ? 1'b1 : 1'b0);

assign grp_fu_899_p0 = grp_fu_899_p00;

assign grp_fu_899_p00 = tmp_3_fu_610_p1;

assign grp_fu_899_p1 = grp_fu_899_p10;

assign grp_fu_899_p10 = ret_V_fu_604_p2;

assign grp_fu_899_p2 = 22'd1366;

assign grp_fu_908_p1 = grp_fu_908_p10;

assign grp_fu_908_p10 = conv_window_V_q0;

assign i9_cast5_fu_750_p1 = i9_reg_417;

assign i_1_fu_457_p2 = (i_reg_307 + 2'd1);

assign i_2_fu_485_p2 = (i5_reg_329 + 2'd1);

assign i_3_fu_760_p2 = (i9_reg_417 + 2'd1);

assign i_4_fu_637_p2 = (i7_reg_374 + 2'd1);

assign icmp_fu_794_p2 = (($signed(tmp_11_fu_784_p4) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign in_V_data_V_read = in_V_id_V0_update;

assign in_V_dest_V_read = in_V_id_V0_update;

assign in_V_id_V0_status = (in_V_user_V_empty_n & in_V_strb_V_empty_n & in_V_last_V_empty_n & in_V_keep_V_empty_n & in_V_id_V_empty_n & in_V_dest_V_empty_n & in_V_data_V_empty_n);

assign in_V_id_V_read = in_V_id_V0_update;

assign in_V_keep_V_read = in_V_id_V0_update;

assign in_V_last_V_read = in_V_id_V0_update;

assign in_V_strb_V_read = in_V_id_V0_update;

assign in_V_user_V_read = in_V_id_V0_update;

assign j4_cast2_fu_856_p1 = j4_reg_440;

assign j_1_fu_473_p2 = (j_reg_318 + 10'd1);

assign j_2_fu_519_p2 = (j6_reg_340 + 2'd1);

assign j_3_fu_682_p2 = (j8_reg_386 + 2'd1);

assign j_4_fu_866_p2 = (j4_reg_440 + 2'd1);

assign kernel_address0 = tmp_17_fu_886_p1;

assign lhs_V_cast_fu_596_p1 = p_Result_s_fu_576_p4;

assign out_V_data_V_din = {{{tmp_4_fu_820_p3}, {tmp_4_fu_820_p3}}, {tmp_4_fu_820_p3}};

assign out_V_data_V_write = out_V_id_V1_update;

assign out_V_dest_V_din = 1'd1;

assign out_V_dest_V_write = out_V_id_V1_update;

assign out_V_id_V1_status = (out_V_user_V_full_n & out_V_strb_V_full_n & out_V_last_V_full_n & out_V_keep_V_full_n & out_V_id_V_full_n & out_V_dest_V_full_n & out_V_data_V_full_n);

assign out_V_id_V_din = 1'd1;

assign out_V_id_V_write = out_V_id_V1_update;

assign out_V_keep_V_din = 3'd7;

assign out_V_keep_V_write = out_V_id_V1_update;

assign out_V_last_V_din = (tmp_6_fu_839_p2 & tmp_5_reg_988);

assign out_V_last_V_write = out_V_id_V1_update;

assign out_V_strb_V_din = 3'd7;

assign out_V_strb_V_write = out_V_id_V1_update;

assign out_V_user_V_din = 1'd1;

assign out_V_user_V_write = out_V_id_V1_update;

assign p_0340_2_41_fu_800_p3 = ((icmp_fu_794_p2[0:0] === 1'b1) ? 32'd255 : p_0340_2_reg_407);

assign p_Result_1_fu_586_p4 = {{in_V_data_V_dout[15:8]}};

assign p_Result_s_fu_576_p4 = {{in_V_data_V_dout[23:16]}};

assign p_load_reg_993 = 32'd0;

assign p_shl1_cast_fu_503_p1 = tmp_s_fu_495_p3;

assign p_shl2_cast_fu_655_p1 = tmp_7_fu_647_p3;

assign p_shl3_cast_fu_731_p1 = tmp_22_fu_724_p3;

assign p_shl4_cast_fu_774_p1 = tmp_14_fu_766_p3;

assign ret_V_fu_604_p2 = (lhs_V_cast_fu_596_p1 + rhs_V_cast_fu_600_p1);

assign rhs_V_cast_fu_600_p1 = p_Result_1_fu_586_p4;

assign row_1_fu_545_p2 = (row_reg_351 + 9'd1);

assign tmp_10_fu_711_p2 = ((i7_reg_374 == 2'd2) ? 1'b1 : 1'b0);

assign tmp_11_cast_fu_688_p1 = j8_reg_386;

assign tmp_11_fu_784_p4 = {{p_0340_2_reg_407[31:8]}};

assign tmp_12_cast_fu_697_p1 = j_3_fu_682_p2;

assign tmp_12_fu_808_p3 = p_0340_2_41_fu_800_p3[32'd31];

assign tmp_13_fu_816_p1 = p_0340_2_41_fu_800_p3[7:0];

assign tmp_14_cast_fu_721_p1 = i_4_reg_1014;

assign tmp_14_fu_766_p3 = {{i9_reg_417}, {2'd0}};

assign tmp_15_fu_778_p2 = (p_shl4_cast_fu_774_p1 - i9_cast5_fu_750_p1);

assign tmp_16_cast_fu_882_p1 = tmp_21_fu_872_p2;

assign tmp_16_fu_692_p2 = (tmp_8_reg_1021 + tmp_11_cast_fu_688_p1);

assign tmp_17_fu_886_p1 = $unsigned(tmp_16_cast_fu_882_p1);

assign tmp_18_fu_701_p2 = (tmp_8_reg_1021 + tmp_12_cast_fu_697_p1);

assign tmp_1_cast_fu_491_p1 = i5_reg_329;

assign tmp_1_fu_507_p2 = (p_shl1_cast_fu_503_p1 - tmp_1_cast_fu_491_p1);

assign tmp_20_fu_717_p1 = i7_reg_374[0:0];

assign tmp_21_fu_872_p2 = (tmp_15_reg_1081 + j4_cast2_fu_856_p1);

assign tmp_22_cast_fu_534_p1 = $signed(tmp_2_fu_529_p2);

assign tmp_22_fu_724_p3 = {{i_4_reg_1014}, {2'd0}};

assign tmp_23_fu_735_p2 = (p_shl3_cast_fu_731_p1 - tmp_14_cast_fu_721_p1);

assign tmp_25_cast_fu_671_p1 = $signed(tmp_9_fu_665_p2);

assign tmp_28_cast_fu_746_p1 = $signed(tmp_16_reg_1040);

assign tmp_29_cast_fu_706_p1 = $signed(tmp_18_fu_701_p2);

assign tmp_2_fu_529_p2 = (tmp_1_reg_961 + tmp_7_cast_fu_525_p1);

assign tmp_30_cast_fu_877_p1 = tmp_21_fu_872_p2;

assign tmp_32_cast_fu_741_p1 = $signed(tmp_23_fu_735_p2);

assign tmp_3_fu_610_p1 = in_V_data_V_dout[7:0];

assign tmp_4_fu_820_p3 = ((tmp_12_fu_808_p3[0:0] === 1'b1) ? 8'd0 : tmp_13_fu_816_p1);

assign tmp_5_fu_551_p2 = ((row_reg_351 == 9'd479) ? 1'b1 : 1'b0);

assign tmp_6_fu_839_p2 = ((col_reg_362 == 10'd639) ? 1'b1 : 1'b0);

assign tmp_7_cast_fu_525_p1 = j6_reg_340;

assign tmp_7_fu_647_p3 = {{i7_reg_374}, {2'd0}};

assign tmp_8_fu_659_p2 = (p_shl2_cast_fu_655_p1 - tmp_cast_fu_643_p1);

assign tmp_9_fu_665_p2 = (tmp_8_fu_659_p2 + 5'd2);

assign tmp_cast_fu_643_p1 = i7_reg_374;

assign tmp_fu_463_p1 = i_reg_307[0:0];

assign tmp_s_fu_495_p3 = {{i5_reg_329}, {2'd0}};

endmodule //img_filter
